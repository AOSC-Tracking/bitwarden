{"version":3,"file":"554.3394735a7d653231196a.js","mappings":"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","sources":["webpack://@bitwarden/web-vault/../../libs/common/src/admin-console/models/request/organization-collection-management-update.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/admin-console/models/request/organization-update.request.ts","webpack://@bitwarden/web-vault/./src/app/admin-console/organizations/settings/account.component.html","webpack://@bitwarden/web-vault/./src/app/admin-console/organizations/settings/account.component.ts","webpack://@bitwarden/web-vault/./src/app/auth/settings/two-factor-setup.component.html","webpack://@bitwarden/web-vault/./src/app/admin-console/organizations/settings/two-factor-setup.component.ts","webpack://@bitwarden/web-vault/./src/app/admin-console/organizations/settings/organization-settings-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/admin-console/organizations/settings/organization-settings.module.ts"],"sourcesContent":["export class OrganizationCollectionManagementUpdateRequest {\n  limitCreateDeleteOwnerAdmin: boolean;\n}\n","import { OrganizationKeysRequest } from \"./organization-keys.request\";\n\nexport class OrganizationUpdateRequest {\n  name: string;\n  businessName: string;\n  billingEmail: string;\n  keys: OrganizationKeysRequest;\n}\n","<h1 bitTypography=\"h1\" class=\"tw-pb-2.5\">{{ \"organizationInfo\" | i18n }}</h1>\n<div *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"tw-sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form *ngIf=\"org && !loading\" [bitSubmit]=\"submit\" [formGroup]=\"formGroup\">\n  <div class=\"tw-grid tw-grid-cols-2 tw-gap-5\">\n    <div>\n      <bit-form-field>\n        <bit-label>{{ \"organizationName\" | i18n }}</bit-label>\n        <input bitInput id=\"orgName\" type=\"text\" formControlName=\"orgName\" />\n      </bit-form-field>\n      <bit-form-field>\n        <bit-label>{{ \"billingEmail\" | i18n }}</bit-label>\n        <input bitInput id=\"billingEmail\" formControlName=\"billingEmail\" type=\"email\" />\n      </bit-form-field>\n      <bit-form-field>\n        <bit-label>{{ \"businessName\" | i18n }}</bit-label>\n        <input bitInput id=\"businessName\" formControlName=\"businessName\" type=\"text\" />\n      </bit-form-field>\n    </div>\n    <div>\n      <bit-avatar [text]=\"org.name\" [id]=\"org.id\" size=\"large\"></bit-avatar>\n      <app-account-fingerprint\n        [fingerprintMaterial]=\"organizationId\"\n        [publicKeyBuffer]=\"publicKeyBuffer\"\n        fingerprintLabel=\"{{ 'yourOrganizationsFingerprint' | i18n }}\"\n      >\n      </app-account-fingerprint>\n    </div>\n  </div>\n  <button type=\"submit\" bitButton bitFormButton buttonType=\"primary\">\n    {{ \"save\" | i18n }}\n  </button>\n</form>\n<ng-container *ngIf=\"canUseApi\">\n  <h1 bitTypography=\"h1\" class=\"tw-mt-16 tw-pb-2.5\">{{ \"apiKey\" | i18n }}</h1>\n  <p>\n    {{ \"apiKeyDesc\" | i18n }}\n    <a href=\"https://docs.bitwarden.com\" target=\"_blank\" rel=\"noopener\">\n      {{ \"learnMore\" | i18n }}\n    </a>\n  </p>\n  <button type=\"button\" bitButton buttonType=\"secondary\" (click)=\"viewApiKey()\">\n    {{ \"viewApiKey\" | i18n }}\n  </button>\n  <button type=\"button\" bitButton buttonType=\"secondary\" (click)=\"rotateApiKey()\">\n    {{ \"rotateApiKey\" | i18n }}\n  </button>\n</ng-container>\n<form\n  *ngIf=\"org && !loading && (showCollectionManagementSettings$ | async)\"\n  [bitSubmit]=\"submitCollectionManagement\"\n  [formGroup]=\"collectionManagementFormGroup\"\n>\n  <h1 bitTypography=\"h1\" class=\"tw-mt-16 tw-pb-2.5\">{{ \"collectionManagement\" | i18n }}</h1>\n  <p>{{ \"collectionManagementDesc\" | i18n }}</p>\n  <bit-form-control>\n    <bit-label>{{ \"limitCollectionCreationDeletionDesc\" | i18n }}</bit-label>\n    <input type=\"checkbox\" bitCheckbox formControlName=\"limitCollectionCreationDeletion\" />\n  </bit-form-control>\n  <button\n    type=\"submit\"\n    bitButton\n    bitFormButton\n    buttonType=\"primary\"\n    id=\"collectionManagementSubmitButton\"\n  >\n    {{ \"save\" | i18n }}\n  </button>\n</form>\n<h1 bitTypography=\"h1\" class=\"tw-mt-16 tw-pb-2.5 !tw-text-danger\">{{ \"dangerZone\" | i18n }}</h1>\n<div class=\"tw-rounded tw-border tw-border-solid tw-border-danger-500 tw-bg-background tw-p-5\">\n  <p>{{ \"dangerZoneDesc\" | i18n }}</p>\n  <button type=\"button\" bitButton buttonType=\"danger\" (click)=\"deleteOrganization()\">\n    {{ \"deleteOrganization\" | i18n }}\n  </button>\n  <button type=\"button\" bitButton buttonType=\"danger\" (click)=\"purgeVault()\">\n    {{ \"purgeVault\" | i18n }}\n  </button>\n</div>\n<ng-template #purgeOrganizationTemplate></ng-template>\n<ng-template #apiKeyTemplate></ng-template>\n<ng-template #rotateApiKeyTemplate></ng-template>\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { combineLatest, lastValueFrom, Subject, switchMap, takeUntil, from, of } from \"rxjs\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/admin-console/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/admin-console/abstractions/organization/organization.service.abstraction\";\nimport { OrganizationCollectionManagementUpdateRequest } from \"@bitwarden/common/admin-console/models/request/organization-collection-management-update.request\";\nimport { OrganizationKeysRequest } from \"@bitwarden/common/admin-console/models/request/organization-keys.request\";\nimport { OrganizationUpdateRequest } from \"@bitwarden/common/admin-console/models/request/organization-update.request\";\nimport { OrganizationResponse } from \"@bitwarden/common/admin-console/models/response/organization.response\";\nimport { FeatureFlag } from \"@bitwarden/common/enums/feature-flag.enum\";\nimport { ConfigServiceAbstraction } from \"@bitwarden/common/platform/abstractions/config/config.service.abstraction\";\nimport { CryptoService } from \"@bitwarden/common/platform/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/platform/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/platform/abstractions/platform-utils.service\";\nimport { Utils } from \"@bitwarden/common/platform/misc/utils\";\nimport { DialogService } from \"@bitwarden/components\";\n\nimport { ApiKeyComponent } from \"../../../settings/api-key.component\";\nimport { PurgeVaultComponent } from \"../../../settings/purge-vault.component\";\n\nimport { DeleteOrganizationDialogResult, openDeleteOrganizationDialog } from \"./components\";\n\n@Component({\n  selector: \"app-org-account\",\n  templateUrl: \"account.component.html\",\n})\nexport class AccountComponent {\n  @ViewChild(\"purgeOrganizationTemplate\", { read: ViewContainerRef, static: true })\n  purgeModalRef: ViewContainerRef;\n  @ViewChild(\"apiKeyTemplate\", { read: ViewContainerRef, static: true })\n  apiKeyModalRef: ViewContainerRef;\n  @ViewChild(\"rotateApiKeyTemplate\", { read: ViewContainerRef, static: true })\n  rotateApiKeyModalRef: ViewContainerRef;\n\n  selfHosted = false;\n  canEditSubscription = true;\n  loading = true;\n  canUseApi = false;\n  org: OrganizationResponse;\n  taxFormPromise: Promise<unknown>;\n  showCollectionManagementSettings$ = this.configService.getFeatureFlag$(\n    FeatureFlag.FlexibleCollections,\n    false\n  );\n\n  // FormGroup validators taken from server Organization domain object\n  protected formGroup = this.formBuilder.group({\n    orgName: this.formBuilder.control(\n      { value: \"\", disabled: true },\n      {\n        validators: [Validators.required, Validators.maxLength(50)],\n        updateOn: \"change\",\n      }\n    ),\n    billingEmail: this.formBuilder.control(\n      { value: \"\", disabled: true },\n      { validators: [Validators.required, Validators.email, Validators.maxLength(256)] }\n    ),\n    businessName: this.formBuilder.control(\n      { value: \"\", disabled: true },\n      { validators: [Validators.maxLength(50)] }\n    ),\n  });\n\n  protected collectionManagementFormGroup = this.formBuilder.group({\n    limitCollectionCreationDeletion: [false],\n  });\n\n  protected organizationId: string;\n  protected publicKeyBuffer: Uint8Array;\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private modalService: ModalService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private router: Router,\n    private organizationService: OrganizationService,\n    private organizationApiService: OrganizationApiServiceAbstraction,\n    private dialogService: DialogService,\n    private formBuilder: FormBuilder,\n    private configService: ConfigServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    this.selfHosted = this.platformUtilsService.isSelfHost();\n\n    this.route.params\n      .pipe(\n        switchMap((params) => this.organizationService.get$(params.organizationId)),\n        switchMap((organization) => {\n          return combineLatest([\n            of(organization),\n            // OrganizationResponse for form population\n            from(this.organizationApiService.get(organization.id)),\n            // Organization Public Key\n            from(this.organizationApiService.getKeys(organization.id)),\n          ]);\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe(([organization, orgResponse, orgKeys]) => {\n        // Set domain level organization variables\n        this.organizationId = organization.id;\n        this.canEditSubscription = organization.canEditSubscription;\n        this.canUseApi = organization.useApi;\n\n        // Update disabled states - reactive forms prefers not using disabled attribute\n        if (!this.selfHosted) {\n          this.formGroup.get(\"orgName\").enable();\n        }\n\n        if (!this.selfHosted || this.canEditSubscription) {\n          this.formGroup.get(\"billingEmail\").enable();\n          this.formGroup.get(\"businessName\").enable();\n        }\n\n        // Org Response\n        this.org = orgResponse;\n\n        // Public Key Buffer for Org Fingerprint Generation\n        this.publicKeyBuffer = Utils.fromB64ToArray(orgKeys?.publicKey);\n\n        // Patch existing values\n        this.formGroup.patchValue({\n          orgName: this.org.name,\n          billingEmail: this.org.billingEmail,\n          businessName: this.org.businessName,\n        });\n        this.collectionManagementFormGroup.patchValue({\n          limitCollectionCreationDeletion: this.org.limitCollectionCreationDeletion,\n        });\n\n        this.loading = false;\n      });\n  }\n\n  ngOnDestroy(): void {\n    // You must first call .next() in order for the notifier to properly close subscriptions using takeUntil\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  submit = async () => {\n    this.formGroup.markAllAsTouched();\n    if (this.formGroup.invalid) {\n      return;\n    }\n\n    const request = new OrganizationUpdateRequest();\n    request.name = this.formGroup.value.orgName;\n    request.businessName = this.formGroup.value.businessName;\n    request.billingEmail = this.formGroup.value.billingEmail;\n\n    // Backfill pub/priv key if necessary\n    if (!this.org.hasPublicAndPrivateKeys) {\n      const orgShareKey = await this.cryptoService.getOrgKey(this.organizationId);\n      const orgKeys = await this.cryptoService.makeKeyPair(orgShareKey);\n      request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n    }\n\n    await this.organizationApiService.save(this.organizationId, request);\n\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"organizationUpdated\"));\n  };\n\n  submitCollectionManagement = async () => {\n    const request = new OrganizationCollectionManagementUpdateRequest();\n    request.limitCreateDeleteOwnerAdmin =\n      this.collectionManagementFormGroup.value.limitCollectionCreationDeletion;\n\n    await this.organizationApiService.updateCollectionManagement(this.organizationId, request);\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"collectionManagementUpdated\")\n    );\n  };\n\n  async deleteOrganization() {\n    const dialog = openDeleteOrganizationDialog(this.dialogService, {\n      data: {\n        organizationId: this.organizationId,\n        requestType: \"RegularDelete\",\n      },\n    });\n\n    const result = await lastValueFrom(dialog.closed);\n\n    if (result === DeleteOrganizationDialogResult.Deleted) {\n      this.router.navigate([\"/\"]);\n    }\n  }\n\n  async purgeVault() {\n    await this.modalService.openViewRef(PurgeVaultComponent, this.purgeModalRef, (comp) => {\n      comp.organizationId = this.organizationId;\n    });\n  }\n\n  async viewApiKey() {\n    await this.modalService.openViewRef(ApiKeyComponent, this.apiKeyModalRef, (comp) => {\n      comp.keyType = \"organization\";\n      comp.entityId = this.organizationId;\n      comp.postKey = this.organizationApiService.getOrCreateApiKey.bind(\n        this.organizationApiService\n      );\n      comp.scope = \"api.organization\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"apiKeyWarning\";\n      comp.apiKeyDescription = \"apiKeyDesc\";\n    });\n  }\n\n  async rotateApiKey() {\n    await this.modalService.openViewRef(ApiKeyComponent, this.rotateApiKeyModalRef, (comp) => {\n      comp.keyType = \"organization\";\n      comp.isRotation = true;\n      comp.entityId = this.organizationId;\n      comp.postKey = this.organizationApiService.rotateApiKey.bind(this.organizationApiService);\n      comp.scope = \"api.organization\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"apiKeyWarning\";\n      comp.apiKeyDescription = \"apiKeyRotateDesc\";\n    });\n  }\n}\n","<div [ngClass]=\"tabbedHeader ? 'tabbed-header' : 'page-header'\">\n  <h1 *ngIf=\"!organizationId || !isEnterpriseOrg\">{{ \"twoStepLogin\" | i18n }}</h1>\n  <h1 *ngIf=\"organizationId && isEnterpriseOrg\">{{ \"twoStepLoginEnforcement\" | i18n }}</h1>\n</div>\n<p *ngIf=\"!organizationId\">{{ \"twoStepLoginDesc\" | i18n }}</p>\n<ng-container *ngIf=\"organizationId\">\n  <p>\n    <ng-container *ngIf=\"isEnterpriseOrg; else teamsDescription\">\n      {{ \"twoStepLoginEnterpriseDescStart\" | i18n }}\n      <a routerLink=\"../policies\">{{ \"twoStepLoginPolicy\" | i18n }}.</a>\n      <br />\n      {{ \"twoStepLoginOrganizationDuoDesc\" | i18n }}\n      <br />\n      <br />\n      <p>{{ \"twoStepLoginOrganizationSsoDesc\" | i18n }}</p>\n    </ng-container>\n    <ng-template #teamsDescription>\n      {{ \"twoStepLoginTeamsDesc\" | i18n }}\n      <br />\n      {{ \"twoStepLoginOrganizationDuoDesc\" | i18n }}\n    </ng-template>\n  </p>\n</ng-container>\n<bit-callout type=\"warning\" *ngIf=\"!organizationId\">\n  <p>{{ \"twoStepLoginRecoveryWarning\" | i18n }}</p>\n  <button type=\"button\" bitButton buttonType=\"secondary\" (click)=\"recoveryCode()\">\n    {{ \"viewRecoveryCode\" | i18n }}\n  </button>\n</bit-callout>\n<h2 [ngClass]=\"{ 'mt-5': !organizationId }\">\n  {{ \"providers\" | i18n }}\n  <small *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin bwi-fw text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </small>\n</h2>\n<bit-callout type=\"warning\" *ngIf=\"showPolicyWarning\">\n  {{ \"twoStepLoginPolicyUserWarning\" | i18n }}\n</bit-callout>\n<ul class=\"list-group list-group-2fa\">\n  <li *ngFor=\"let p of providers\" class=\"list-group-item d-flex align-items-center\">\n    <div class=\"logo-2fa d-flex justify-content-center\">\n      <img [class]=\"'mfaType' + p.type\" [alt]=\"p.name + ' logo'\" />\n    </div>\n    <div class=\"mx-4\">\n      <h3 class=\"mb-0\">\n        {{ p.name }}\n        <ng-container *ngIf=\"p.enabled\">\n          <i\n            class=\"bwi bwi-check text-success bwi-fw\"\n            title=\"{{ 'enabled' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"enabled\" | i18n }}</span>\n        </ng-container>\n        <app-premium-badge *ngIf=\"p.premium\"></app-premium-badge>\n      </h3>\n      {{ p.description }}\n    </div>\n    <div class=\"ml-auto\">\n      <button\n        type=\"button\"\n        bitButton\n        buttonType=\"secondary\"\n        [disabled]=\"!canAccessPremium && p.premium\"\n        (click)=\"manage(p.type)\"\n      >\n        {{ \"manage\" | i18n }}\n      </button>\n    </div>\n  </li>\n</ul>\n\n<ng-template #authenticatorTemplate></ng-template>\n<ng-template #recoveryTemplate></ng-template>\n<ng-template #duoTemplate></ng-template>\n<ng-template #emailTemplate></ng-template>\n<ng-template #yubikeyTemplate></ng-template>\n<ng-template #webAuthnTemplate></ng-template>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { concatMap, takeUntil } from \"rxjs\";\nimport { tap } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { OrganizationService } from \"@bitwarden/common/admin-console/abstractions/organization/organization.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/admin-console/abstractions/policy/policy.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/auth/enums/two-factor-provider-type\";\nimport { MessagingService } from \"@bitwarden/common/platform/abstractions/messaging.service\";\nimport { StateService } from \"@bitwarden/common/platform/abstractions/state.service\";\n\nimport { TwoFactorDuoComponent } from \"../../../auth/settings/two-factor-duo.component\";\nimport { TwoFactorSetupComponent as BaseTwoFactorSetupComponent } from \"../../../auth/settings/two-factor-setup.component\";\n\n@Component({\n  selector: \"app-two-factor-setup\",\n  templateUrl: \"../../../auth/settings/two-factor-setup.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class TwoFactorSetupComponent extends BaseTwoFactorSetupComponent {\n  tabbedHeader = false;\n  constructor(\n    apiService: ApiService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    policyService: PolicyService,\n    private route: ActivatedRoute,\n    stateService: StateService,\n    private organizationService: OrganizationService\n  ) {\n    super(apiService, modalService, messagingService, policyService, stateService);\n  }\n\n  async ngOnInit() {\n    this.route.params\n      .pipe(\n        tap((params) => {\n          this.organizationId = params.organizationId;\n          this.organization = this.organizationService.get(this.organizationId);\n        }),\n        concatMap(async () => await super.ngOnInit()),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  async manage(type: TwoFactorProviderType) {\n    switch (type) {\n      case TwoFactorProviderType.OrganizationDuo: {\n        const duoComp = await this.openModal(this.duoModalRef, TwoFactorDuoComponent);\n        duoComp.type = TwoFactorProviderType.OrganizationDuo;\n        duoComp.organizationId = this.organizationId;\n        duoComp.onUpdated.pipe(takeUntil(this.destroy$)).subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.OrganizationDuo);\n        });\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  protected getTwoFactorProviders() {\n    return this.apiService.getTwoFactorOrganizationProviders(this.organizationId);\n  }\n\n  protected filterProvider(type: TwoFactorProviderType) {\n    return type !== TwoFactorProviderType.OrganizationDuo;\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { canAccessSettingsTab } from \"@bitwarden/common/admin-console/abstractions/organization/organization.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/admin-console/models/domain/organization\";\n\nimport { OrganizationPermissionsGuard } from \"../../organizations/guards/org-permissions.guard\";\nimport { OrganizationRedirectGuard } from \"../../organizations/guards/org-redirect.guard\";\nimport { PoliciesComponent } from \"../../organizations/policies\";\n\nimport { AccountComponent } from \"./account.component\";\nimport { SettingsComponent } from \"./settings.component\";\nimport { TwoFactorSetupComponent } from \"./two-factor-setup.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: SettingsComponent,\n    canActivate: [OrganizationPermissionsGuard],\n    data: { organizationPermissions: canAccessSettingsTab },\n    children: [\n      {\n        path: \"\",\n        pathMatch: \"full\",\n        canActivate: [OrganizationRedirectGuard],\n        data: {\n          autoRedirectCallback: getSettingsRoute,\n        },\n        children: [], // This is required to make the auto redirect work,\n      },\n      { path: \"account\", component: AccountComponent, data: { titleId: \"organizationInfo\" } },\n      {\n        path: \"two-factor\",\n        component: TwoFactorSetupComponent,\n        data: { titleId: \"twoStepLogin\" },\n      },\n      {\n        path: \"policies\",\n        component: PoliciesComponent,\n        canActivate: [OrganizationPermissionsGuard],\n        data: {\n          organizationPermissions: (org: Organization) => org.canManagePolicies,\n          titleId: \"policies\",\n        },\n      },\n      {\n        path: \"tools\",\n        children: [\n          {\n            path: \"import\",\n            loadComponent: () =>\n              import(\"../../../tools/import/import-web.component\").then(\n                (mod) => mod.ImportWebComponent\n              ),\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              titleId: \"importData\",\n              organizationPermissions: (org: Organization) => org.canAccessImportExport,\n            },\n          },\n          {\n            path: \"export\",\n            loadChildren: () =>\n              import(\"../tools/vault-export/org-vault-export.module\").then(\n                (m) => m.OrganizationVaultExportModule\n              ),\n          },\n        ],\n      },\n    ],\n  },\n];\n\nfunction getSettingsRoute(organization: Organization) {\n  if (organization.isOwner) {\n    return \"account\";\n  }\n  if (organization.canManagePolicies) {\n    return \"policies\";\n  }\n  if (organization.canAccessImportExport) {\n    return [\"tools\", \"import\"];\n  }\n  if (organization.canManageSso) {\n    return \"sso\";\n  }\n  if (organization.canManageScim) {\n    return \"scim\";\n  }\n  if (organization.canManageDeviceApprovals) {\n    return \"device-approvals\";\n  }\n  return undefined;\n}\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OrganizationSettingsRoutingModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { LooseComponentsModule, SharedModule } from \"../../../shared\";\nimport { AccountFingerprintComponent } from \"../../../shared/components/account-fingerprint/account-fingerprint.component\";\nimport { PoliciesModule } from \"../../organizations/policies\";\n\nimport { AccountComponent } from \"./account.component\";\nimport { OrganizationSettingsRoutingModule } from \"./organization-settings-routing.module\";\nimport { SettingsComponent } from \"./settings.component\";\nimport { TwoFactorSetupComponent } from \"./two-factor-setup.component\";\n\n@NgModule({\n  imports: [\n    SharedModule,\n    LooseComponentsModule,\n    PoliciesModule,\n    OrganizationSettingsRoutingModule,\n    AccountFingerprintComponent,\n  ],\n  declarations: [SettingsComponent, AccountComponent, TwoFactorSetupComponent],\n})\nexport class OrganizationSettingsModule {}\n"],"names":["OrganizationCollectionManagementUpdateRequest","OrganizationUpdateRequest","viewApiKey","rotateApiKey","AccountComponent","constructor","modalService","i18nService","route","platformUtilsService","cryptoService","router","organizationService","organizationApiService","dialogService","formBuilder","configService","selfHosted","canEditSubscription","loading","canUseApi","showCollectionManagementSettings$","this","getFeatureFlag$","FlexibleCollections","formGroup","group","orgName","control","value","disabled","validators","required","maxLength","updateOn","billingEmail","email","businessName","collectionManagementFormGroup","limitCollectionCreationDeletion","destroy$","Subject","submit","markAllAsTouched","invalid","request","name","org","hasPublicAndPrivateKeys","orgShareKey","getOrgKey","organizationId","orgKeys","makeKeyPair","keys","encryptedString","save","showToast","t","submitCollectionManagement","limitCreateDeleteOwnerAdmin","updateCollectionManagement","ngOnInit","isSelfHost","params","pipe","switchMap","get$","organization","combineLatest","of","from","get","id","getKeys","takeUntil","subscribe","orgResponse","useApi","enable","publicKeyBuffer","fromB64ToArray","publicKey","patchValue","ngOnDestroy","next","complete","deleteOrganization","dialog","data","requestType","lastValueFrom","closed","Deleted","navigate","purgeVault","openViewRef","purgeModalRef","comp","apiKeyModalRef","keyType","entityId","postKey","getOrCreateApiKey","bind","scope","grantType","apiKeyTitle","apiKeyWarning","apiKeyDescription","rotateApiKeyModalRef","isRotation","recoveryCode","manage","TwoFactorSetupComponent","apiService","messagingService","policyService","stateService","super","tabbedHeader","tap","concatMap","type","OrganizationDuo","duoComp","openModal","duoModalRef","onUpdated","enabled","updateStatus","getTwoFactorProviders","getTwoFactorOrganizationProviders","filterProvider","routes","path","component","canActivate","organizationPermissions","children","pathMatch","autoRedirectCallback","isOwner","canManagePolicies","canAccessImportExport","canManageSso","canManageScim","canManageDeviceApprovals","titleId","loadComponent","then","mod","ImportWebComponent","loadChildren","m","OrganizationVaultExportModule","OrganizationSettingsRoutingModule","forChild","OrganizationSettingsModule"],"sourceRoot":""}