{"version":3,"file":"encrypt-worker.bf4df9eb4399d63b1cd0.js","mappings":"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","sources":["webpack://@bitwarden/web-vault/webpack/runtime/chunk loaded","webpack://@bitwarden/web-vault/webpack/runtime/create fake namespace object","webpack://@bitwarden/web-vault/webpack/runtime/startup chunk dependencies","webpack://@bitwarden/web-vault/../../libs/common/src/enums/client-type.enum.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/device-type.enum.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/encrypted-export-type.enum.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/encryption-type.enum.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/event-system-user.enum.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/event-type.enum.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/field-type.enum.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/file-upload-type.enum.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/hash-purpose.enum.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/html-storage-location.enum.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/http-status-code.enum.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/kdf-type.enum.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/models/domain/kdf-config.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/key-suffix-options.enum.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/linked-id-type.enum.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/log-level-type.enum.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/native-messaging-version.enum.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/notification-type.enum.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/product-type.enum.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/provider-type.enum.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/secure-note-type.enum.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/storage-location.enum.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/theme-type.enum.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/uri-match-type.enum.ts","webpack://@bitwarden/web-vault/../../libs/common/src/platform/misc/utils.ts","webpack://@bitwarden/web-vault/../../libs/common/src/platform/models/domain/symmetric-crypto-key.ts","webpack://@bitwarden/web-vault/../../libs/common/src/platform/services/console-log.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/platform/services/container.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/platform/models/domain/decrypt-parameters.ts","webpack://@bitwarden/web-vault/../../libs/common/src/platform/services/web-crypto-function.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/platform/models/domain/enc-array-buffer.ts","webpack://@bitwarden/web-vault/../../libs/common/src/platform/models/domain/enc-string.ts","webpack://@bitwarden/web-vault/../../libs/common/src/platform/models/domain/encrypted-object.ts","webpack://@bitwarden/web-vault/../../libs/common/src/platform/services/cryptography/encrypt.service.implementation.ts","webpack://@bitwarden/web-vault/../../libs/common/src/platform/services/cryptography/initializer-key.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/enums/cipher-type.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/enums/cipher-reprompt-type.ts","webpack://@bitwarden/web-vault/../../libs/common/src/platform/models/domain/domain-base.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/data/attachment.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/data/card.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/data/field.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/data/identity.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/data/fido2-credential.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/data/login-uri.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/data/login.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/data/password-history.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/data/secure-note.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/data/cipher.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/view/attachment.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/linkedFieldOption.decorator.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/view/item.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/view/card.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/view/field.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/view/identity.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/view/fido2-credential.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/platform/misc/safe-urls.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/view/login-uri.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/view/login.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/view/password-history.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/view/secure-note.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/view/cipher.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/domain/attachment.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/domain/card.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/domain/field.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/domain/identity.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/domain/fido2-credential.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/domain/login-uri.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/domain/login.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/domain/password.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/domain/secure-note.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/domain/cipher.ts","webpack://@bitwarden/web-vault/../../libs/common/src/platform/services/cryptography/get-class-initializer.ts","webpack://@bitwarden/web-vault/../../libs/common/src/platform/services/cryptography/encrypt.worker.ts","webpack://@bitwarden/web-vault/webpack/bootstrap","webpack://@bitwarden/web-vault/webpack/runtime/define property getters","webpack://@bitwarden/web-vault/webpack/runtime/ensure chunk","webpack://@bitwarden/web-vault/webpack/runtime/get javascript chunk filename","webpack://@bitwarden/web-vault/webpack/runtime/get mini-css chunk filename","webpack://@bitwarden/web-vault/webpack/runtime/global","webpack://@bitwarden/web-vault/webpack/runtime/hasOwnProperty shorthand","webpack://@bitwarden/web-vault/webpack/runtime/make namespace object","webpack://@bitwarden/web-vault/webpack/runtime/publicPath","webpack://@bitwarden/web-vault/webpack/runtime/importScripts chunk loading","webpack://@bitwarden/web-vault/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn __webpack_require__.e(407).then(next);\n};","export enum ClientType {\n  Web = \"web\",\n  Browser = \"browser\",\n  Desktop = \"desktop\",\n  // Mobile = \"mobile\",\n  Cli = \"cli\",\n  // DirectoryConnector = \"connector\",\n}\n","export enum DeviceType {\n  Android = 0,\n  iOS = 1,\n  ChromeExtension = 2,\n  FirefoxExtension = 3,\n  OperaExtension = 4,\n  EdgeExtension = 5,\n  WindowsDesktop = 6,\n  MacOsDesktop = 7,\n  LinuxDesktop = 8,\n  ChromeBrowser = 9,\n  FirefoxBrowser = 10,\n  OperaBrowser = 11,\n  EdgeBrowser = 12,\n  IEBrowser = 13,\n  UnknownBrowser = 14,\n  AndroidAmazon = 15,\n  UWP = 16,\n  SafariBrowser = 17,\n  VivaldiBrowser = 18,\n  VivaldiExtension = 19,\n  SafariExtension = 20,\n  SDK = 21,\n  Server = 22,\n  WindowsCLI = 23,\n  MacOsCLI = 24,\n  LinuxCLI = 25,\n}\n\nexport const MobileDeviceTypes: Set<DeviceType> = new Set([\n  DeviceType.Android,\n  DeviceType.iOS,\n  DeviceType.AndroidAmazon,\n]);\n\nexport const DesktopDeviceTypes: Set<DeviceType> = new Set([\n  DeviceType.WindowsDesktop,\n  DeviceType.MacOsDesktop,\n  DeviceType.LinuxDesktop,\n  DeviceType.UWP,\n  DeviceType.WindowsCLI,\n  DeviceType.MacOsCLI,\n  DeviceType.LinuxCLI,\n]);\n","export enum EncryptedExportType {\n  AccountEncrypted = 0,\n  FileEncrypted = 1,\n}\n","export enum EncryptionType {\n  AesCbc256_B64 = 0,\n  AesCbc128_HmacSha256_B64 = 1,\n  AesCbc256_HmacSha256_B64 = 2,\n  Rsa2048_OaepSha256_B64 = 3,\n  Rsa2048_OaepSha1_B64 = 4,\n  Rsa2048_OaepSha256_HmacSha256_B64 = 5,\n  Rsa2048_OaepSha1_HmacSha256_B64 = 6,\n}\n\n/** The expected number of parts to a serialized EncString of the given encryption type.\n * For example, an EncString of type AesCbc256_B64 will have 2 parts, and an EncString of type\n * AesCbc128_HmacSha256_B64 will have 3 parts.\n *\n * Example of annotated serialized EncStrings:\n * 0.iv|data\n * 1.iv|data|mac\n * 2.iv|data|mac\n * 3.data\n * 4.data\n *\n * @see EncString\n * @see EncryptionType\n * @see EncString.parseEncryptedString\n */\nexport const EXPECTED_NUM_PARTS_BY_ENCRYPTION_TYPE = {\n  [EncryptionType.AesCbc256_B64]: 2,\n  [EncryptionType.AesCbc128_HmacSha256_B64]: 3,\n  [EncryptionType.AesCbc256_HmacSha256_B64]: 3,\n  [EncryptionType.Rsa2048_OaepSha256_B64]: 1,\n  [EncryptionType.Rsa2048_OaepSha1_B64]: 1,\n  [EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64]: 2,\n  [EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64]: 2,\n};\n","// Note: the enum key is used to describe the EventSystemUser in the UI. Be careful about changing it.\nexport enum EventSystemUser {\n  SCIM = 1,\n  DomainVerification = 2,\n}\n","// Increment by 100 for each new set of events\nexport enum EventType {\n  User_LoggedIn = 1000,\n  User_ChangedPassword = 1001,\n  User_Updated2fa = 1002,\n  User_Disabled2fa = 1003,\n  User_Recovered2fa = 1004,\n  User_FailedLogIn = 1005,\n  User_FailedLogIn2fa = 1006,\n  User_ClientExportedVault = 1007,\n  User_UpdatedTempPassword = 1008,\n  User_MigratedKeyToKeyConnector = 1009,\n  User_RequestedDeviceApproval = 1010,\n\n  Cipher_Created = 1100,\n  Cipher_Updated = 1101,\n  Cipher_Deleted = 1102,\n  Cipher_AttachmentCreated = 1103,\n  Cipher_AttachmentDeleted = 1104,\n  Cipher_Shared = 1105,\n  Cipher_UpdatedCollections = 1106,\n  Cipher_ClientViewed = 1107,\n  Cipher_ClientToggledPasswordVisible = 1108,\n  Cipher_ClientToggledHiddenFieldVisible = 1109,\n  Cipher_ClientToggledCardCodeVisible = 1110,\n  Cipher_ClientCopiedPassword = 1111,\n  Cipher_ClientCopiedHiddenField = 1112,\n  Cipher_ClientCopiedCardCode = 1113,\n  Cipher_ClientAutofilled = 1114,\n  Cipher_SoftDeleted = 1115,\n  Cipher_Restored = 1116,\n  Cipher_ClientToggledCardNumberVisible = 1117,\n\n  Collection_Created = 1300,\n  Collection_Updated = 1301,\n  Collection_Deleted = 1302,\n\n  Group_Created = 1400,\n  Group_Updated = 1401,\n  Group_Deleted = 1402,\n\n  OrganizationUser_Invited = 1500,\n  OrganizationUser_Confirmed = 1501,\n  OrganizationUser_Updated = 1502,\n  OrganizationUser_Removed = 1503,\n  OrganizationUser_UpdatedGroups = 1504,\n  OrganizationUser_UnlinkedSso = 1505,\n  OrganizationUser_ResetPassword_Enroll = 1506,\n  OrganizationUser_ResetPassword_Withdraw = 1507,\n  OrganizationUser_AdminResetPassword = 1508,\n  OrganizationUser_ResetSsoLink = 1509,\n  OrganizationUser_FirstSsoLogin = 1510,\n  OrganizationUser_Revoked = 1511,\n  OrganizationUser_Restored = 1512,\n  OrganizationUser_ApprovedAuthRequest = 1513,\n  OrganizationUser_RejectedAuthRequest = 1514,\n\n  Organization_Updated = 1600,\n  Organization_PurgedVault = 1601,\n  Organization_ClientExportedVault = 1602,\n  Organization_VaultAccessed = 1603,\n  Organization_EnabledSso = 1604,\n  Organization_DisabledSso = 1605,\n  Organization_EnabledKeyConnector = 1606,\n  Organization_DisabledKeyConnector = 1607,\n  Organization_SponsorshipsSynced = 1608,\n\n  Policy_Updated = 1700,\n\n  ProviderUser_Invited = 1800,\n  ProviderUser_Confirmed = 1801,\n  ProviderUser_Updated = 1802,\n  ProviderUser_Removed = 1803,\n\n  ProviderOrganization_Created = 1900,\n  ProviderOrganization_Added = 1901,\n  ProviderOrganization_Removed = 1902,\n  ProviderOrganization_VaultAccessed = 1903,\n\n  OrganizationDomain_Added = 2000,\n  OrganizationDomain_Removed = 2001,\n  OrganizationDomain_Verified = 2002,\n  OrganizationDomain_NotVerified = 2003,\n\n  Secret_Retrieved = 2100,\n}\n","export enum FieldType {\n  Text = 0,\n  Hidden = 1,\n  Boolean = 2,\n  Linked = 3,\n}\n","export enum FileUploadType {\n  Direct = 0,\n  Azure = 1,\n}\n","export enum HashPurpose {\n  ServerAuthorization = 1,\n  LocalAuthorization = 2,\n}\n","export enum HtmlStorageLocation {\n  Local = \"local\",\n  Memory = \"memory\",\n  Session = \"session\",\n}\n","/**\n * Hypertext Transfer Protocol (HTTP) response status codes.\n *\n * @see {@link https://en.wikipedia.org/wiki/List_of_HTTP_status_codes}\n * src: https://gist.github.com/RWOverdijk/6cef816cfdf5722228e01cc05fd4b094\n */\nexport enum HttpStatusCode {\n  /**\n   * The server has received the request headers and the client should proceed to send the request body\n   * (in the case of a request for which a body needs to be sent; for example, a POST request).\n   * Sending a large request body to a server after a request has been rejected for inappropriate headers would be inefficient.\n   * To have a server check the request's headers, a client must send Expect: 100-continue as a header in its initial request\n   * and receive a 100 Continue status code in response before sending the body. The response 417 Expectation Failed indicates the request should not be continued.\n   */\n  Continue = 100,\n\n  /**\n   * The requester has asked the server to switch protocols and the server has agreed to do so.\n   */\n  SwitchingProtocols = 101,\n\n  /**\n   * A WebDAV request may contain many sub-requests involving file operations, requiring a long time to complete the request.\n   * This code indicates that the server has received and is processing the request, but no response is available yet.\n   * This prevents the client from timing out and assuming the request was lost.\n   */\n  Processing = 102,\n\n  // **********************************************************************************************************\n  // 200s - SUCCESS\n  // **********************************************************************************************************\n\n  /**\n   * Standard response for successful HTTP requests.\n   * The actual response will depend on the request method used.\n   * In a GET request, the response will contain an entity corresponding to the requested resource.\n   * In a POST request, the response will contain an entity describing or containing the result of the action.\n   */\n  Ok = 200,\n\n  /**\n   * The request has been fulfilled, resulting in the creation of a new resource.\n   */\n  Created = 201,\n\n  /**\n   * The request has been accepted for processing, but the processing has not been completed.\n   * The request might or might not be eventually acted upon, and may be disallowed when processing occurs.\n   */\n  Accepted = 202,\n\n  /**\n   * SINCE HTTP/1.1\n   * The server is a transforming proxy that received a 200 OK from its origin,\n   * but is returning a modified version of the origin's response.\n   */\n  NonAuthoritativeInformation = 203,\n\n  /**\n   * The server successfully processed the request and is not returning any content.\n   */\n  NoContent = 204,\n\n  /**\n   * The server successfully processed the request, but is not returning any content.\n   * Unlike a 204 response, this response requires that the requester reset the document view.\n   */\n  ResetContent = 205,\n\n  /**\n   * The server is delivering only part of the resource (byte serving) due to a range header sent by the client.\n   * The range header is used by HTTP clients to enable resuming of interrupted downloads,\n   * or split a download into multiple simultaneous streams.\n   */\n  PartialContent = 206,\n\n  /**\n   * The message body that follows is an XML message and can contain a number of separate response codes,\n   * depending on how many sub-requests were made.\n   */\n  MultiStatus = 207,\n\n  /**\n   * The members of a DAV binding have already been enumerated in a preceding part of the (multistatus) response,\n   * and are not being included again.\n   */\n  AlreadyReported = 208,\n\n  /**\n   * The server has fulfilled a request for the resource,\n   * and the response is a representation of the result of one or more instance-manipulations applied to the current instance.\n   */\n  ImUsed = 226,\n\n  // **********************************************************************************************************\n  // 300s - Redirections\n  // **********************************************************************************************************\n\n  /**\n   * Indicates multiple options for the resource from which the client may choose (via agent-driven content negotiation).\n   * For example, this code could be used to present multiple video format options,\n   * to list files with different filename extensions, or to suggest word-sense disambiguation.\n   */\n  MultipleChoices = 300,\n\n  /**\n   * This and all future requests should be directed to the given URI.\n   */\n  MovedPermanently = 301,\n\n  /**\n   * This is an example of industry practice contradicting the standard.\n   * The HTTP/1.0 specification (RFC 1945) required the client to perform a temporary redirect\n   * (the original describing phrase was \"Moved Temporarily\"), but popular browsers implemented 302\n   * with the functionality of a 303 See Other. Therefore, HTTP/1.1 added status codes 303 and 307\n   * to distinguish between the two behaviours. However, some Web applications and frameworks\n   * use the 302 status code as if it were the 303.\n   */\n  Found = 302,\n\n  /**\n   * SINCE HTTP/1.1\n   * The response to the request can be found under another URI using a GET method.\n   * When received in response to a POST (or PUT/DELETE), the client should presume that\n   * the server has received the data and should issue a redirect with a separate GET message.\n   */\n  SeeOther = 303,\n\n  /**\n   * Indicates that the resource has not been modified since the version specified by the request headers If-Modified-Since or If-None-Match.\n   * In such case, there is no need to retransmit the resource since the client still has a previously-downloaded copy.\n   */\n  NotModified = 304,\n\n  /**\n   * SINCE HTTP/1.1\n   * The requested resource is available only through a proxy, the address for which is provided in the response.\n   * Many HTTP clients (such as Mozilla and Internet Explorer) do not correctly handle responses with this status code, primarily for security reasons.\n   */\n  UseProxy = 305,\n\n  /**\n   * No longer used. Originally meant \"Subsequent requests should use the specified proxy.\"\n   */\n  SwitchProxy = 306,\n\n  /**\n   * SINCE HTTP/1.1\n   * In this case, the request should be repeated with another URI; however, future requests should still use the original URI.\n   * In contrast to how 302 was historically implemented, the request method is not allowed to be changed when reissuing the original request.\n   * For example, a POST request should be repeated using another POST request.\n   */\n  TemporaryRedirect = 307,\n\n  /**\n   * The request and all future requests should be repeated using another URI.\n   * 307 and 308 parallel the behaviors of 302 and 301, but do not allow the HTTP method to change.\n   * So, for example, submitting a form to a permanently redirected resource may continue smoothly.\n   */\n  PermanentRedirect = 308,\n\n  // **********************************************************************************************************\n  // 400s - Client / User messed up\n  // **********************************************************************************************************\n\n  /**\n   * The server cannot or will not process the request due to an apparent client error\n   * (e.g., malformed request syntax, too large size, invalid request message framing, or deceptive request routing).\n   */\n  BadRequest = 400,\n\n  /**\n   * Similar to 403 Forbidden, but specifically for use when authentication is required and has failed or has not yet\n   * been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the\n   * requested resource. See Basic access authentication and Digest access authentication. 401 semantically means\n   * \"unauthenticated\",i.e. the user does not have the necessary credentials.\n   */\n  Unauthorized = 401,\n\n  /**\n   * Reserved for future use. The original intention was that this code might be used as part of some form of digital\n   * cash or micro payment scheme, but that has not happened, and this code is not usually used.\n   * Google Developers API uses this status if a particular developer has exceeded the daily limit on requests.\n   */\n  PaymentRequired = 402,\n\n  /**\n   * The request was valid, but the server is refusing action.\n   * The user might not have the necessary permissions for a resource.\n   */\n  Forbidden = 403,\n\n  /**\n   * The requested resource could not be found but may be available in the future.\n   * Subsequent requests by the client are permissible.\n   */\n  NotFound = 404,\n\n  /**\n   * A request method is not supported for the requested resource;\n   * for example, a GET request on a form that requires data to be presented via POST, or a PUT request on a read-only resource.\n   */\n  MethodNotAllowed = 405,\n\n  /**\n   * The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.\n   */\n  NotAcceptable = 406,\n\n  /**\n   * The client must first authenticate itself with the proxy.\n   */\n  ProxyAuthenticationRequired = 407,\n\n  /**\n   * The server timed out waiting for the request.\n   * According to HTTP specifications:\n   * \"The client did not produce a request within the time that the server was prepared to wait. The client MAY repeat the request without modifications at any later time.\"\n   */\n  RequestTimeout = 408,\n\n  /**\n   * Indicates that the request could not be processed because of conflict in the request,\n   * such as an edit conflict between multiple simultaneous updates.\n   */\n  Conflict = 409,\n\n  /**\n   * Indicates that the resource requested is no longer available and will not be available again.\n   * This should be used when a resource has been intentionally removed and the resource should be purged.\n   * Upon receiving a 410 status code, the client should not request the resource in the future.\n   * Clients such as search engines should remove the resource from their indices.\n   * Most use cases do not require clients and search engines to purge the resource, and a \"404 Not Found\" may be used instead.\n   */\n  Gone = 410,\n\n  /**\n   * The request did not specify the length of its content, which is required by the requested resource.\n   */\n  LengthRequired = 411,\n\n  /**\n   * The server does not meet one of the preconditions that the requester put on the request.\n   */\n  PreconditionFailed = 412,\n\n  /**\n   * The request is larger than the server is willing or able to process. Previously called \"Request Entity Too Large\".\n   */\n  PayloadTooLarge = 413,\n\n  /**\n   * The URI provided was too long for the server to process. Often the result of too much data being encoded as a query-string of a GET request,\n   * in which case it should be converted to a POST request.\n   * Called \"Request-URI Too Long\" previously.\n   */\n  UriTooLong = 414,\n\n  /**\n   * The request entity has a media type which the server or resource does not support.\n   * For example, the client uploads an image as image/svg+xml, but the server requires that images use a different format.\n   */\n  UnsupportedMediaType = 415,\n\n  /**\n   * The client has asked for a portion of the file (byte serving), but the server cannot supply that portion.\n   * For example, if the client asked for a part of the file that lies beyond the end of the file.\n   * Called \"Requested Range Not Satisfiable\" previously.\n   */\n  RangeNotSatisfiable = 416,\n\n  /**\n   * The server cannot meet the requirements of the Expect request-header field.\n   */\n  ExpectationFailed = 417,\n\n  /**\n   * This code was defined in 1998 as one of the traditional IETF April Fools' jokes, in RFC 2324, Hyper Text Coffee Pot Control Protocol,\n   * and is not expected to be implemented by actual HTTP servers. The RFC specifies this code should be returned by\n   * teapots requested to brew coffee. This HTTP status is used as an Easter egg in some websites, including Google.com.\n   */\n  IAmATeapot = 418,\n\n  /**\n   * The request was directed at a server that is not able to produce a response (for example because a connection reuse).\n   */\n  MisdirectedRequest = 421,\n\n  /**\n   * The request was well-formed but was unable to be followed due to semantic errors.\n   */\n  UnprocessableEntity = 422,\n\n  /**\n   * The resource that is being accessed is locked.\n   */\n  Locked = 423,\n\n  /**\n   * The request failed due to failure of a previous request (e.g., a PROPPATCH).\n   */\n  FailedDependency = 424,\n\n  /**\n   * The client should switch to a different protocol such as TLS/1.0, given in the Upgrade header field.\n   */\n  UpgradeRequired = 426,\n\n  /**\n   * The origin server requires the request to be conditional.\n   * Intended to prevent \"the 'lost update' problem, where a client\n   * GETs a resource's state, modifies it, and PUTs it back to the server,\n   * when meanwhile a third party has modified the state on the server, leading to a conflict.\"\n   */\n  PreconditionRequired = 428,\n\n  /**\n   * The user has sent too many requests in a given amount of time. Intended for use with rate-limiting schemes.\n   */\n  TooManyRequests = 429,\n\n  /**\n   * The server is unwilling to process the request because either an individual header field,\n   * or all the header fields collectively, are too large.\n   */\n  RequestHeaderFieldsTooLarge = 431,\n\n  /**\n   * A server operator has received a legal demand to deny access to a resource or to a set of resources\n   * that includes the requested resource. The code 451 was chosen as a reference to the novel Fahrenheit 451.\n   */\n  UnavailableForLegalReasons = 451,\n\n  // **********************************************************************************************************\n  // 500s - Server messed up\n  // **********************************************************************************************************\n\n  /**\n   * A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.\n   */\n  InternalServerError = 500,\n\n  /**\n   * The server either does not recognize the request method, or it lacks the ability to fulfill the request.\n   * Usually this implies future availability (e.g., a new feature of a web-service API).\n   */\n  NotImplemented = 501,\n\n  /**\n   * The server was acting as a gateway or proxy and received an invalid response from the upstream server.\n   */\n  BadGateway = 502,\n\n  /**\n   * The server is currently unavailable (because it is overloaded or down for maintenance).\n   * Generally, this is a temporary state.\n   */\n  ServiceUnavailable = 503,\n\n  /**\n   * The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.\n   */\n  GatewayTimeout = 504,\n\n  /**\n   * The server does not support the HTTP protocol version used in the request\n   */\n  HttpVersionNotSupported = 505,\n\n  /**\n   * Transparent content negotiation for the request results in a circular reference.\n   */\n  VariantAlsoNegotiates = 506,\n\n  /**\n   * The server is unable to store the representation needed to complete the request.\n   */\n  InsufficientStorage = 507,\n\n  /**\n   * The server detected an infinite loop while processing the request.\n   */\n  LoopDetected = 508,\n\n  /**\n   * Further extensions to the request are required for the server to fulfill it.\n   */\n  NotExtended = 510,\n\n  /**\n   * The client needs to authenticate to gain network access.\n   * Intended for use by intercepting proxies used to control access to the network (e.g., \"captive portals\" used\n   * to require agreement to Terms of Service before granting full Internet access via a Wi-Fi hotspot).\n   */\n  NetworkAuthenticationRequired = 511,\n}\n","import { KdfConfig } from \"../auth/models/domain/kdf-config\";\n\nexport enum KdfType {\n  PBKDF2_SHA256 = 0,\n  Argon2id = 1,\n}\n\nexport const DEFAULT_ARGON2_MEMORY = 64;\nexport const DEFAULT_ARGON2_PARALLELISM = 4;\nexport const DEFAULT_ARGON2_ITERATIONS = 3;\n\nexport const DEFAULT_KDF_TYPE = KdfType.PBKDF2_SHA256;\nexport const DEFAULT_PBKDF2_ITERATIONS = 600000;\nexport const DEFAULT_KDF_CONFIG = new KdfConfig(DEFAULT_PBKDF2_ITERATIONS);\nexport const SEND_KDF_ITERATIONS = 100000;\n","export class KdfConfig {\n  iterations: number;\n  memory?: number;\n  parallelism?: number;\n\n  constructor(iterations: number, memory?: number, parallelism?: number) {\n    this.iterations = iterations;\n    this.memory = memory;\n    this.parallelism = parallelism;\n  }\n}\n","export enum KeySuffixOptions {\n  Auto = \"auto\",\n  Biometric = \"biometric\",\n  Pin = \"pin\",\n}\n","export type LinkedIdType = LoginLinkedId | CardLinkedId | IdentityLinkedId;\n\n// LoginView\nexport enum LoginLinkedId {\n  Username = 100,\n  Password = 101,\n}\n\n// CardView\nexport enum CardLinkedId {\n  CardholderName = 300,\n  ExpMonth = 301,\n  ExpYear = 302,\n  Code = 303,\n  Brand = 304,\n  Number = 305,\n}\n\n// IdentityView\nexport enum IdentityLinkedId {\n  Title = 400,\n  MiddleName = 401,\n  Address1 = 402,\n  Address2 = 403,\n  Address3 = 404,\n  City = 405,\n  State = 406,\n  PostalCode = 407,\n  Country = 408,\n  Company = 409,\n  Email = 410,\n  Phone = 411,\n  Ssn = 412,\n  Username = 413,\n  PassportNumber = 414,\n  LicenseNumber = 415,\n  FirstName = 416,\n  LastName = 417,\n  FullName = 418,\n}\n","export enum LogLevelType {\n  Debug,\n  Info,\n  Warning,\n  Error,\n}\n","export enum NativeMessagingVersion {\n  One = 1, // Original implementation\n  Latest = One,\n}\n","export enum NotificationType {\n  SyncCipherUpdate = 0,\n  SyncCipherCreate = 1,\n  SyncLoginDelete = 2,\n  SyncFolderDelete = 3,\n  SyncCiphers = 4,\n\n  SyncVault = 5,\n  SyncOrgKeys = 6,\n  SyncFolderCreate = 7,\n  SyncFolderUpdate = 8,\n  SyncCipherDelete = 9,\n  SyncSettings = 10,\n\n  LogOut = 11,\n\n  SyncSendCreate = 12,\n  SyncSendUpdate = 13,\n  SyncSendDelete = 14,\n\n  AuthRequest = 15,\n  AuthRequestResponse = 16,\n}\n","export enum ProductType {\n  Free = 0,\n  Families = 1,\n  Teams = 2,\n  Enterprise = 3,\n  TeamsStarter = 4,\n}\n","export enum ProviderType {\n  Msp = 0,\n  Reseller = 1,\n}\n","export enum SecureNoteType {\n  Generic = 0,\n}\n","export enum StorageLocation {\n  Both = \"both\",\n  Disk = \"disk\",\n  Memory = \"memory\",\n}\n","export enum ThemeType {\n  System = \"system\",\n  Light = \"light\",\n  Dark = \"dark\",\n  Nord = \"nord\",\n  SolarizedDark = \"solarizedDark\",\n}\n","export enum UriMatchType {\n  Domain = 0,\n  Host = 1,\n  StartsWith = 2,\n  Exact = 3,\n  RegularExpression = 4,\n  Never = 5,\n}\n","/* eslint-disable no-useless-escape */\nimport * as path from \"path\";\n\nimport { Observable, of, switchMap } from \"rxjs\";\nimport { getHostname, parse } from \"tldts\";\nimport { Merge } from \"type-fest\";\n\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { EncryptService } from \"../abstractions/encrypt.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\n\nconst nodeURL = typeof window === \"undefined\" ? require(\"url\") : null;\n\ndeclare global {\n  /* eslint-disable-next-line no-var */\n  var bitwardenContainerService: BitwardenContainerService;\n}\n\ninterface BitwardenContainerService {\n  getCryptoService: () => CryptoService;\n  getEncryptService: () => EncryptService;\n}\n\nexport class Utils {\n  static inited = false;\n  static isNode = false;\n  static isBrowser = true;\n  static isMobileBrowser = false;\n  static isAppleMobileBrowser = false;\n  static global: typeof global = null;\n  // Transpiled version of /\\p{Emoji_Presentation}/gu using https://mothereff.in/regexpu. Used for compatability in older browsers.\n  static regexpEmojiPresentation =\n    /(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5-\\uDED7\\uDEEB\\uDEEC\\uDEF4-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0C-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDDFF\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6])/g;\n  static readonly validHosts: string[] = [\"localhost\"];\n  static readonly originalMinimumPasswordLength = 8;\n  static readonly minimumPasswordLength = 12;\n  static readonly DomainMatchBlacklist = new Map<string, Set<string>>([\n    [\"google.com\", new Set([\"script.google.com\"])],\n  ]);\n\n  static init() {\n    if (Utils.inited) {\n      return;\n    }\n\n    Utils.inited = true;\n    Utils.isNode =\n      typeof process !== \"undefined\" &&\n      (process as any).release != null &&\n      (process as any).release.name === \"node\";\n    Utils.isBrowser = typeof window !== \"undefined\";\n\n    Utils.isMobileBrowser = Utils.isBrowser && this.isMobile(window);\n    Utils.isAppleMobileBrowser = Utils.isBrowser && this.isAppleMobile(window);\n\n    if (Utils.isNode) {\n      Utils.global = global;\n    } else if (Utils.isBrowser) {\n      Utils.global = window;\n    } else {\n      // If it's not browser or node then it must be a service worker\n      Utils.global = self;\n    }\n  }\n\n  static fromB64ToArray(str: string): Uint8Array {\n    if (str == null) {\n      return null;\n    }\n\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"base64\"));\n    } else {\n      const binaryString = Utils.global.atob(str);\n      const bytes = new Uint8Array(binaryString.length);\n      for (let i = 0; i < binaryString.length; i++) {\n        bytes[i] = binaryString.charCodeAt(i);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUrlB64ToArray(str: string): Uint8Array {\n    return Utils.fromB64ToArray(Utils.fromUrlB64ToB64(str));\n  }\n\n  static fromHexToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"hex\"));\n    } else {\n      const bytes = new Uint8Array(str.length / 2);\n      for (let i = 0; i < str.length; i += 2) {\n        bytes[i / 2] = parseInt(str.substr(i, 2), 16);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUtf8ToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"utf8\"));\n    } else {\n      const strUtf8 = unescape(encodeURIComponent(str));\n      const arr = new Uint8Array(strUtf8.length);\n      for (let i = 0; i < strUtf8.length; i++) {\n        arr[i] = strUtf8.charCodeAt(i);\n      }\n      return arr;\n    }\n  }\n\n  static fromByteStringToArray(str: string): Uint8Array {\n    if (str == null) {\n      return null;\n    }\n    const arr = new Uint8Array(str.length);\n    for (let i = 0; i < str.length; i++) {\n      arr[i] = str.charCodeAt(i);\n    }\n    return arr;\n  }\n\n  static fromBufferToB64(buffer: ArrayBuffer): string {\n    if (buffer == null) {\n      return null;\n    }\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"base64\");\n    } else {\n      let binary = \"\";\n      const bytes = new Uint8Array(buffer);\n      for (let i = 0; i < bytes.byteLength; i++) {\n        binary += String.fromCharCode(bytes[i]);\n      }\n      return Utils.global.btoa(binary);\n    }\n  }\n\n  static fromBufferToUrlB64(buffer: ArrayBuffer): string {\n    return Utils.fromB64toUrlB64(Utils.fromBufferToB64(buffer));\n  }\n\n  static fromB64toUrlB64(b64Str: string) {\n    return b64Str.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=/g, \"\");\n  }\n\n  static fromBufferToUtf8(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"utf8\");\n    } else {\n      const bytes = new Uint8Array(buffer);\n      const encodedString = String.fromCharCode.apply(null, bytes);\n      return decodeURIComponent(escape(encodedString));\n    }\n  }\n\n  static fromBufferToByteString(buffer: ArrayBuffer): string {\n    return String.fromCharCode.apply(null, new Uint8Array(buffer));\n  }\n\n  // ref: https://stackoverflow.com/a/40031979/1090359\n  static fromBufferToHex(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"hex\");\n    } else {\n      const bytes = new Uint8Array(buffer);\n      return Array.prototype.map\n        .call(bytes, (x: number) => (\"00\" + x.toString(16)).slice(-2))\n        .join(\"\");\n    }\n  }\n\n  static fromUrlB64ToB64(urlB64Str: string): string {\n    let output = urlB64Str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n      case 0:\n        break;\n      case 2:\n        output += \"==\";\n        break;\n      case 3:\n        output += \"=\";\n        break;\n      default:\n        throw new Error(\"Illegal base64url string!\");\n    }\n\n    return output;\n  }\n\n  static fromUrlB64ToUtf8(urlB64Str: string): string {\n    return Utils.fromB64ToUtf8(Utils.fromUrlB64ToB64(urlB64Str));\n  }\n\n  static fromUtf8ToB64(utfStr: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(utfStr, \"utf8\").toString(\"base64\");\n    } else {\n      return decodeURIComponent(escape(Utils.global.btoa(utfStr)));\n    }\n  }\n\n  static fromUtf8ToUrlB64(utfStr: string): string {\n    return Utils.fromBufferToUrlB64(Utils.fromUtf8ToArray(utfStr));\n  }\n\n  static fromB64ToUtf8(b64Str: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(b64Str, \"base64\").toString(\"utf8\");\n    } else {\n      return decodeURIComponent(escape(Utils.global.atob(b64Str)));\n    }\n  }\n\n  // ref: http://stackoverflow.com/a/2117523/1090359\n  static newGuid(): string {\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, (c) => {\n      const r = (Math.random() * 16) | 0;\n      const v = c === \"x\" ? r : (r & 0x3) | 0x8;\n      return v.toString(16);\n    });\n  }\n\n  static isGuid(id: string) {\n    return RegExp(\n      /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/,\n      \"i\"\n    ).test(id);\n  }\n\n  static getHostname(uriString: string): string {\n    if (Utils.isNullOrWhitespace(uriString)) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n\n    if (uriString.startsWith(\"data:\")) {\n      return null;\n    }\n\n    if (uriString.startsWith(\"about:\")) {\n      return null;\n    }\n\n    if (uriString.startsWith(\"file:\")) {\n      return null;\n    }\n\n    // Does uriString contain invalid characters\n    // TODO Needs to possibly be extended, although '!' is a reserved character\n    if (uriString.indexOf(\"!\") > 0) {\n      return null;\n    }\n\n    try {\n      const hostname = getHostname(uriString, { validHosts: this.validHosts });\n      if (hostname != null) {\n        return hostname;\n      }\n    } catch {\n      return null;\n    }\n    return null;\n  }\n\n  static getHost(uriString: string): string {\n    const url = Utils.getUrl(uriString);\n    try {\n      return url != null && url.host !== \"\" ? url.host : null;\n    } catch {\n      return null;\n    }\n  }\n\n  static getDomain(uriString: string): string {\n    if (Utils.isNullOrWhitespace(uriString)) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n\n    if (uriString.startsWith(\"data:\")) {\n      return null;\n    }\n\n    if (uriString.startsWith(\"about:\")) {\n      return null;\n    }\n\n    try {\n      const parseResult = parse(uriString, {\n        validHosts: this.validHosts,\n        allowPrivateDomains: true,\n      });\n      if (parseResult != null && parseResult.hostname != null) {\n        if (parseResult.hostname === \"localhost\" || parseResult.isIp) {\n          return parseResult.hostname;\n        }\n\n        if (parseResult.domain != null) {\n          return parseResult.domain;\n        }\n        return null;\n      }\n    } catch {\n      return null;\n    }\n    return null;\n  }\n\n  static getQueryParams(uriString: string): Map<string, string> {\n    const url = Utils.getUrl(uriString);\n    if (url == null || url.search == null || url.search === \"\") {\n      return null;\n    }\n    const map = new Map<string, string>();\n    const pairs = (url.search[0] === \"?\" ? url.search.substr(1) : url.search).split(\"&\");\n    pairs.forEach((pair) => {\n      const parts = pair.split(\"=\");\n      if (parts.length < 1) {\n        return;\n      }\n      map.set(\n        decodeURIComponent(parts[0]).toLowerCase(),\n        parts[1] == null ? \"\" : decodeURIComponent(parts[1])\n      );\n    });\n    return map;\n  }\n\n  static getSortFunction<T>(\n    i18nService: I18nService,\n    prop: { [K in keyof T]: T[K] extends string ? K : never }[keyof T]\n  ): (a: T, b: T) => number {\n    return (a, b) => {\n      if (a[prop] == null && b[prop] != null) {\n        return -1;\n      }\n      if (a[prop] != null && b[prop] == null) {\n        return 1;\n      }\n      if (a[prop] == null && b[prop] == null) {\n        return 0;\n      }\n\n      // The `as unknown as string` here is unfortunate because typescript doesn't property understand that the return of T[prop] will be a string\n      return i18nService.collator\n        ? i18nService.collator.compare(a[prop] as unknown as string, b[prop] as unknown as string)\n        : (a[prop] as unknown as string).localeCompare(b[prop] as unknown as string);\n    };\n  }\n\n  static isNullOrWhitespace(str: string): boolean {\n    return str == null || typeof str !== \"string\" || str.trim() === \"\";\n  }\n\n  static isNullOrEmpty(str: string): boolean {\n    return str == null || typeof str !== \"string\" || str == \"\";\n  }\n\n  static isPromise(obj: any): obj is Promise<unknown> {\n    return (\n      obj != undefined && typeof obj[\"then\"] === \"function\" && typeof obj[\"catch\"] === \"function\"\n    );\n  }\n\n  static nameOf<T>(name: string & keyof T) {\n    return name;\n  }\n\n  static assign<T>(target: T, source: Partial<T>): T {\n    return Object.assign(target, source);\n  }\n\n  static iterateEnum<O extends object, K extends keyof O = keyof O>(obj: O) {\n    return (Object.keys(obj).filter((k) => Number.isNaN(+k)) as K[]).map((k) => obj[k]);\n  }\n\n  static getUrl(uriString: string): URL {\n    if (this.isNullOrWhitespace(uriString)) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n\n    return Utils.getUrlObject(uriString);\n  }\n\n  static camelToPascalCase(s: string) {\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  }\n\n  /**\n   * There are a few ways to calculate text color for contrast, this one seems to fit accessibility guidelines best.\n   * https://stackoverflow.com/a/3943023/6869691\n   *\n   * @param {string} bgColor\n   * @param {number} [threshold] see stackoverflow link above\n   * @param {boolean} [svgTextFill]\n   * Indicates if this method is performed on an SVG <text> 'fill' attribute (e.g. <text fill=\"black\"></text>).\n   * This check is necessary because the '!important' tag cannot be used in a 'fill' attribute.\n   */\n  static pickTextColorBasedOnBgColor(bgColor: string, threshold = 186, svgTextFill = false) {\n    const bgColorHexNums = bgColor.charAt(0) === \"#\" ? bgColor.substring(1, 7) : bgColor;\n    const r = parseInt(bgColorHexNums.substring(0, 2), 16); // hexToR\n    const g = parseInt(bgColorHexNums.substring(2, 4), 16); // hexToG\n    const b = parseInt(bgColorHexNums.substring(4, 6), 16); // hexToB\n    const blackColor = svgTextFill ? \"black\" : \"black !important\";\n    const whiteColor = svgTextFill ? \"white\" : \"white !important\";\n    return r * 0.299 + g * 0.587 + b * 0.114 > threshold ? blackColor : whiteColor;\n  }\n\n  static stringToColor(str: string): string {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    let color = \"#\";\n    for (let i = 0; i < 3; i++) {\n      const value = (hash >> (i * 8)) & 0xff;\n      color += (\"00\" + value.toString(16)).substr(-2);\n    }\n    return color;\n  }\n\n  /**\n   * @throws Will throw an error if the ContainerService has not been attached to the window object\n   */\n  static getContainerService(): BitwardenContainerService {\n    if (this.global.bitwardenContainerService == null) {\n      throw new Error(\"global bitwardenContainerService not initialized.\");\n    }\n    return this.global.bitwardenContainerService;\n  }\n\n  static validateHexColor(color: string) {\n    return /^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/.test(color);\n  }\n\n  /**\n   * Converts map to a Record<string, V> with the same data. Inverse of recordToMap\n   * Useful in toJSON methods, since Maps are not serializable\n   * @param map\n   * @returns\n   */\n  static mapToRecord<K extends string | number, V>(map: Map<K, V>): Record<string, V> {\n    if (map == null) {\n      return null;\n    }\n    if (!(map instanceof Map)) {\n      return map;\n    }\n    return Object.fromEntries(map);\n  }\n\n  /**\n   * Converts record to a Map<string, V> with the same data. Inverse of mapToRecord\n   * Useful in fromJSON methods, since Maps are not serializable\n   *\n   * Warning: If the record has string keys that are numbers, they will be converted to numbers in the map\n   * @param record\n   * @returns\n   */\n  static recordToMap<K extends string | number, V>(record: Record<K, V>): Map<K, V> {\n    if (record == null) {\n      return null;\n    } else if (record instanceof Map) {\n      return record;\n    }\n\n    const entries = Object.entries(record);\n    if (entries.length === 0) {\n      return new Map();\n    }\n\n    if (isNaN(Number(entries[0][0]))) {\n      return new Map(entries) as Map<K, V>;\n    } else {\n      return new Map(entries.map((e) => [Number(e[0]), e[1]])) as Map<K, V>;\n    }\n  }\n\n  /** Applies Object.assign, but converts the type nicely using Type-Fest Merge<Destination, Source> */\n  static merge<Destination, Source>(\n    destination: Destination,\n    source: Source\n  ): Merge<Destination, Source> {\n    return Object.assign(destination, source) as unknown as Merge<Destination, Source>;\n  }\n\n  /**\n   * encodeURIComponent escapes all characters except the following:\n   * alphabetic, decimal digits, - _ . ! ~ * ' ( )\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent#encoding_for_rfc3986\n   */\n  static encodeRFC3986URIComponent(str: string): string {\n    return encodeURIComponent(str).replace(\n      /[!'()*]/g,\n      (c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`\n    );\n  }\n\n  /**\n   * Normalizes a path for defense against attacks like traversals\n   * @param denormalizedPath\n   * @returns\n   */\n  static normalizePath(denormalizedPath: string): string {\n    return path.normalize(decodeURIComponent(denormalizedPath)).replace(/^(\\.\\.(\\/|\\\\|$))+/, \"\");\n  }\n\n  private static isMobile(win: Window) {\n    let mobile = false;\n    ((a) => {\n      if (\n        /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(\n          a\n        ) ||\n        /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\n          a.substr(0, 4)\n        )\n      ) {\n        mobile = true;\n      }\n    })(win.navigator.userAgent || win.navigator.vendor || (win as any).opera);\n    return mobile || win.navigator.userAgent.match(/iPad/i) != null;\n  }\n\n  static delay(ms: number): Promise<void> {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n\n  /**\n   * Generate an observable from a function that returns a promise.\n   * Similar to the rxjs function {@link from} with one big exception:\n   * {@link from} will not re-execute the function when observers resubscribe.\n   * {@link Util.asyncToObservable} will execute `generator` for every\n   * subscribe, making it ideal if the value ever needs to be refreshed.\n   * */\n  static asyncToObservable<T>(generator: () => Promise<T>): Observable<T> {\n    return of(undefined).pipe(switchMap(() => generator()));\n  }\n\n  /**\n   * Return the number of days remaining before a target date arrives.\n   * Returns 0 if the day has already passed.\n   */\n  static daysRemaining(targetDate: Date): number {\n    const diffTime = targetDate.getTime() - Date.now();\n    const msPerDay = 86400000;\n    return Math.max(0, Math.floor(diffTime / msPerDay));\n  }\n\n  private static isAppleMobile(win: Window) {\n    return (\n      win.navigator.userAgent.match(/iPhone/i) != null ||\n      win.navigator.userAgent.match(/iPad/i) != null\n    );\n  }\n\n  private static getUrlObject(uriString: string): URL {\n    // All the methods below require a protocol to properly parse a URL string\n    // Assume http if no other protocol is present\n    const hasProtocol = uriString.indexOf(\"://\") > -1;\n    if (!hasProtocol && uriString.indexOf(\".\") > -1) {\n      uriString = \"http://\" + uriString;\n    } else if (!hasProtocol) {\n      return null;\n    }\n\n    try {\n      if (nodeURL != null) {\n        return new nodeURL.URL(uriString);\n      }\n\n      return new URL(uriString);\n    } catch (e) {\n      // Ignore error\n    }\n\n    return null;\n  }\n}\n\nUtils.init();\n","import { Jsonify, Opaque } from \"type-fest\";\n\nimport { EncryptionType } from \"../../../enums\";\nimport { Utils } from \"../../../platform/misc/utils\";\n\nexport class SymmetricCryptoKey {\n  key: Uint8Array;\n  encKey?: Uint8Array;\n  macKey?: Uint8Array;\n  encType: EncryptionType;\n\n  keyB64: string;\n  encKeyB64: string;\n  macKeyB64: string;\n\n  meta: any;\n\n  constructor(key: Uint8Array, encType?: EncryptionType) {\n    if (key == null) {\n      throw new Error(\"Must provide key\");\n    }\n\n    if (encType == null) {\n      if (key.byteLength === 32) {\n        encType = EncryptionType.AesCbc256_B64;\n      } else if (key.byteLength === 64) {\n        encType = EncryptionType.AesCbc256_HmacSha256_B64;\n      } else {\n        throw new Error(\"Unable to determine encType.\");\n      }\n    }\n\n    this.key = key;\n    this.encType = encType;\n\n    if (encType === EncryptionType.AesCbc256_B64 && key.byteLength === 32) {\n      this.encKey = key;\n      this.macKey = null;\n    } else if (encType === EncryptionType.AesCbc128_HmacSha256_B64 && key.byteLength === 32) {\n      this.encKey = key.slice(0, 16);\n      this.macKey = key.slice(16, 32);\n    } else if (encType === EncryptionType.AesCbc256_HmacSha256_B64 && key.byteLength === 64) {\n      this.encKey = key.slice(0, 32);\n      this.macKey = key.slice(32, 64);\n    } else {\n      throw new Error(\"Unsupported encType/key length.\");\n    }\n\n    if (this.key != null) {\n      this.keyB64 = Utils.fromBufferToB64(this.key);\n    }\n    if (this.encKey != null) {\n      this.encKeyB64 = Utils.fromBufferToB64(this.encKey);\n    }\n    if (this.macKey != null) {\n      this.macKeyB64 = Utils.fromBufferToB64(this.macKey);\n    }\n  }\n\n  toJSON() {\n    // The whole object is constructed from the initial key, so just store the B64 key\n    return { keyB64: this.keyB64 };\n  }\n\n  static fromString(s: string): SymmetricCryptoKey {\n    if (s == null) {\n      return null;\n    }\n\n    const arrayBuffer = Utils.fromB64ToArray(s);\n    return new SymmetricCryptoKey(arrayBuffer);\n  }\n\n  static fromJSON(obj: Jsonify<SymmetricCryptoKey>): SymmetricCryptoKey {\n    return SymmetricCryptoKey.fromString(obj?.keyB64);\n  }\n}\n\n// Setup all separate key types as opaque types\nexport type DeviceKey = Opaque<SymmetricCryptoKey, \"DeviceKey\">;\nexport type PrfKey = Opaque<SymmetricCryptoKey, \"PrfKey\">;\nexport type UserKey = Opaque<SymmetricCryptoKey, \"UserKey\">;\nexport type MasterKey = Opaque<SymmetricCryptoKey, \"MasterKey\">;\nexport type PinKey = Opaque<SymmetricCryptoKey, \"PinKey\">;\nexport type OrgKey = Opaque<SymmetricCryptoKey, \"OrgKey\">;\nexport type ProviderKey = Opaque<SymmetricCryptoKey, \"ProviderKey\">;\nexport type CipherKey = Opaque<SymmetricCryptoKey, \"CipherKey\">;\n","import { LogLevelType } from \"../../enums\";\nimport { LogService as LogServiceAbstraction } from \"../abstractions/log.service\";\n\nexport class ConsoleLogService implements LogServiceAbstraction {\n  protected timersMap: Map<string, [number, number]> = new Map();\n\n  constructor(\n    protected isDev: boolean,\n    protected filter: (level: LogLevelType) => boolean = null\n  ) {}\n\n  debug(message: string) {\n    if (!this.isDev) {\n      return;\n    }\n    this.write(LogLevelType.Debug, message);\n  }\n\n  info(message: string) {\n    this.write(LogLevelType.Info, message);\n  }\n\n  warning(message: string) {\n    this.write(LogLevelType.Warning, message);\n  }\n\n  error(message: string) {\n    this.write(LogLevelType.Error, message);\n  }\n\n  write(level: LogLevelType, message: string) {\n    if (this.filter != null && this.filter(level)) {\n      return;\n    }\n\n    switch (level) {\n      case LogLevelType.Debug:\n        // eslint-disable-next-line\n        console.log(message);\n        break;\n      case LogLevelType.Info:\n        // eslint-disable-next-line\n        console.log(message);\n        break;\n      case LogLevelType.Warning:\n        // eslint-disable-next-line\n        console.warn(message);\n        break;\n      case LogLevelType.Error:\n        // eslint-disable-next-line\n        console.error(message);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { CryptoService } from \"../abstractions/crypto.service\";\nimport { EncryptService } from \"../abstractions/encrypt.service\";\n\nexport class ContainerService {\n  constructor(private cryptoService: CryptoService, private encryptService: EncryptService) {}\n\n  attachToGlobal(global: any) {\n    if (!global.bitwardenContainerService) {\n      global.bitwardenContainerService = this;\n    }\n  }\n\n  /**\n   * @throws Will throw if CryptoService was not instantiated and provided to the ContainerService constructor\n   */\n  getCryptoService(): CryptoService {\n    if (this.cryptoService == null) {\n      throw new Error(\"ContainerService.cryptoService not initialized.\");\n    }\n    return this.cryptoService;\n  }\n\n  /**\n   * @throws Will throw if EncryptService was not instantiated and provided to the ContainerService constructor\n   */\n  getEncryptService(): EncryptService {\n    if (this.encryptService == null) {\n      throw new Error(\"ContainerService.encryptService not initialized.\");\n    }\n    return this.encryptService;\n  }\n}\n","export class DecryptParameters<T> {\n  encKey: T;\n  data: T;\n  iv: T;\n  macKey: T;\n  mac: T;\n  macData: T;\n}\n","import * as argon2 from \"argon2-browser\";\nimport * as forge from \"node-forge\";\n\nimport { Utils } from \"../../platform/misc/utils\";\nimport { CsprngArray } from \"../../types/csprng\";\nimport { CryptoFunctionService } from \"../abstractions/crypto-function.service\";\nimport { DecryptParameters } from \"../models/domain/decrypt-parameters\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\n\nexport class WebCryptoFunctionService implements CryptoFunctionService {\n  private crypto: Crypto;\n  private subtle: SubtleCrypto;\n  private wasmSupported: boolean;\n\n  constructor(win: Window | typeof global) {\n    this.crypto = typeof win.crypto !== \"undefined\" ? win.crypto : null;\n    this.subtle =\n      !!this.crypto && typeof win.crypto.subtle !== \"undefined\" ? win.crypto.subtle : null;\n    this.wasmSupported = this.checkIfWasmSupported();\n  }\n\n  async pbkdf2(\n    password: string | Uint8Array,\n    salt: string | Uint8Array,\n    algorithm: \"sha256\" | \"sha512\",\n    iterations: number\n  ): Promise<Uint8Array> {\n    const wcLen = algorithm === \"sha256\" ? 256 : 512;\n    const passwordBuf = this.toBuf(password);\n    const saltBuf = this.toBuf(salt);\n\n    const pbkdf2Params: Pbkdf2Params = {\n      name: \"PBKDF2\",\n      salt: saltBuf,\n      iterations: iterations,\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\n      \"raw\",\n      passwordBuf,\n      { name: \"PBKDF2\" } as any,\n      false,\n      [\"deriveBits\"]\n    );\n    const buffer = await this.subtle.deriveBits(pbkdf2Params as any, impKey, wcLen);\n    return new Uint8Array(buffer);\n  }\n\n  async argon2(\n    password: string | Uint8Array,\n    salt: string | Uint8Array,\n    iterations: number,\n    memory: number,\n    parallelism: number\n  ): Promise<Uint8Array> {\n    if (!this.wasmSupported) {\n      throw \"Webassembly support is required for the Argon2 KDF feature.\";\n    }\n\n    const passwordArr = new Uint8Array(this.toBuf(password));\n    const saltArr = new Uint8Array(this.toBuf(salt));\n\n    const result = await argon2.hash({\n      pass: passwordArr,\n      salt: saltArr,\n      time: iterations,\n      mem: memory,\n      parallelism: parallelism,\n      hashLen: 32,\n      type: argon2.ArgonType.Argon2id,\n    });\n    argon2.unloadRuntime();\n    return result.hash;\n  }\n\n  async hkdf(\n    ikm: Uint8Array,\n    salt: string | Uint8Array,\n    info: string | Uint8Array,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ): Promise<Uint8Array> {\n    const saltBuf = this.toBuf(salt);\n    const infoBuf = this.toBuf(info);\n\n    const hkdfParams: HkdfParams = {\n      name: \"HKDF\",\n      salt: saltBuf,\n      info: infoBuf,\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\"raw\", ikm, { name: \"HKDF\" } as any, false, [\n      \"deriveBits\",\n    ]);\n    const buffer = await this.subtle.deriveBits(hkdfParams as any, impKey, outputByteSize * 8);\n    return new Uint8Array(buffer);\n  }\n\n  // ref: https://tools.ietf.org/html/rfc5869\n  async hkdfExpand(\n    prk: Uint8Array,\n    info: string | Uint8Array,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ): Promise<Uint8Array> {\n    const hashLen = algorithm === \"sha256\" ? 32 : 64;\n    if (outputByteSize > 255 * hashLen) {\n      throw new Error(\"outputByteSize is too large.\");\n    }\n    const prkArr = new Uint8Array(prk);\n    if (prkArr.length < hashLen) {\n      throw new Error(\"prk is too small.\");\n    }\n    const infoBuf = this.toBuf(info);\n    const infoArr = new Uint8Array(infoBuf);\n    let runningOkmLength = 0;\n    let previousT = new Uint8Array(0);\n    const n = Math.ceil(outputByteSize / hashLen);\n    const okm = new Uint8Array(n * hashLen);\n    for (let i = 0; i < n; i++) {\n      const t = new Uint8Array(previousT.length + infoArr.length + 1);\n      t.set(previousT);\n      t.set(infoArr, previousT.length);\n      t.set([i + 1], t.length - 1);\n      previousT = new Uint8Array(await this.hmac(t, prk, algorithm));\n      okm.set(previousT, runningOkmLength);\n      runningOkmLength += previousT.length;\n      if (runningOkmLength >= outputByteSize) {\n        break;\n      }\n    }\n    return okm.slice(0, outputByteSize);\n  }\n\n  async hash(\n    value: string | Uint8Array,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"\n  ): Promise<Uint8Array> {\n    if (algorithm === \"md5\") {\n      const md = algorithm === \"md5\" ? forge.md.md5.create() : forge.md.sha1.create();\n      const valueBytes = this.toByteString(value);\n      md.update(valueBytes, \"raw\");\n      return Utils.fromByteStringToArray(md.digest().data);\n    }\n\n    const valueBuf = this.toBuf(value);\n    const buffer = await this.subtle.digest(\n      { name: this.toWebCryptoAlgorithm(algorithm) },\n      valueBuf\n    );\n    return new Uint8Array(buffer);\n  }\n\n  async hmac(\n    value: Uint8Array,\n    key: Uint8Array,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ): Promise<Uint8Array> {\n    const signingAlgorithm = {\n      name: \"HMAC\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\"raw\", key, signingAlgorithm, false, [\"sign\"]);\n    const buffer = await this.subtle.sign(signingAlgorithm, impKey, value);\n    return new Uint8Array(buffer);\n  }\n\n  // Safely compare two values in a way that protects against timing attacks (Double HMAC Verification).\n  // ref: https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2011/february/double-hmac-verification/\n  // ref: https://paragonie.com/blog/2015/11/preventing-timing-attacks-on-string-comparison-with-double-hmac-strategy\n  async compare(a: Uint8Array, b: Uint8Array): Promise<boolean> {\n    const macKey = await this.randomBytes(32);\n    const signingAlgorithm = {\n      name: \"HMAC\",\n      hash: { name: \"SHA-256\" },\n    };\n    const impKey = await this.subtle.importKey(\"raw\", macKey, signingAlgorithm, false, [\"sign\"]);\n    const mac1 = await this.subtle.sign(signingAlgorithm, impKey, a);\n    const mac2 = await this.subtle.sign(signingAlgorithm, impKey, b);\n\n    if (mac1.byteLength !== mac2.byteLength) {\n      return false;\n    }\n\n    const arr1 = new Uint8Array(mac1);\n    const arr2 = new Uint8Array(mac2);\n    for (let i = 0; i < arr2.length; i++) {\n      if (arr1[i] !== arr2[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  hmacFast(value: string, key: string, algorithm: \"sha1\" | \"sha256\" | \"sha512\"): Promise<string> {\n    const hmac = forge.hmac.create();\n    hmac.start(algorithm, key);\n    hmac.update(value);\n    const bytes = hmac.digest().getBytes();\n    return Promise.resolve(bytes);\n  }\n\n  async compareFast(a: string, b: string): Promise<boolean> {\n    const rand = await this.randomBytes(32);\n    const bytes = new Uint32Array(rand);\n    const buffer = forge.util.createBuffer();\n    for (let i = 0; i < bytes.length; i++) {\n      buffer.putInt32(bytes[i]);\n    }\n    const macKey = buffer.getBytes();\n\n    const hmac = forge.hmac.create();\n    hmac.start(\"sha256\", macKey);\n    hmac.update(a);\n    const mac1 = hmac.digest().getBytes();\n\n    hmac.start(null, null);\n    hmac.update(b);\n    const mac2 = hmac.digest().getBytes();\n\n    const equals = mac1 === mac2;\n    return equals;\n  }\n\n  async aesEncrypt(data: Uint8Array, iv: Uint8Array, key: Uint8Array): Promise<Uint8Array> {\n    const impKey = await this.subtle.importKey(\"raw\", key, { name: \"AES-CBC\" } as any, false, [\n      \"encrypt\",\n    ]);\n    const buffer = await this.subtle.encrypt({ name: \"AES-CBC\", iv: iv }, impKey, data);\n    return new Uint8Array(buffer);\n  }\n\n  aesDecryptFastParameters(\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ): DecryptParameters<string> {\n    const p = new DecryptParameters<string>();\n    if (key.meta != null) {\n      p.encKey = key.meta.encKeyByteString;\n      p.macKey = key.meta.macKeyByteString;\n    }\n\n    if (p.encKey == null) {\n      p.encKey = forge.util.decode64(key.encKeyB64);\n    }\n    p.data = forge.util.decode64(data);\n    p.iv = forge.util.decode64(iv);\n    p.macData = p.iv + p.data;\n    if (p.macKey == null && key.macKeyB64 != null) {\n      p.macKey = forge.util.decode64(key.macKeyB64);\n    }\n    if (mac != null) {\n      p.mac = forge.util.decode64(mac);\n    }\n\n    // cache byte string keys for later\n    if (key.meta == null) {\n      key.meta = {};\n    }\n    if (key.meta.encKeyByteString == null) {\n      key.meta.encKeyByteString = p.encKey;\n    }\n    if (p.macKey != null && key.meta.macKeyByteString == null) {\n      key.meta.macKeyByteString = p.macKey;\n    }\n\n    return p;\n  }\n\n  aesDecryptFast(parameters: DecryptParameters<string>, mode: \"cbc\" | \"ecb\"): Promise<string> {\n    const decipher = (forge as any).cipher.createDecipher(\n      this.toWebCryptoAesMode(mode),\n      parameters.encKey\n    );\n    const options = {} as any;\n    if (mode === \"cbc\") {\n      options.iv = parameters.iv;\n    }\n    const dataBuffer = (forge as any).util.createBuffer(parameters.data);\n    decipher.start(options);\n    decipher.update(dataBuffer);\n    decipher.finish();\n    const val = decipher.output.toString();\n    return Promise.resolve(val);\n  }\n\n  async aesDecrypt(\n    data: Uint8Array,\n    iv: Uint8Array,\n    key: Uint8Array,\n    mode: \"cbc\" | \"ecb\"\n  ): Promise<Uint8Array> {\n    if (mode === \"ecb\") {\n      // Web crypto does not support AES-ECB mode, so we need to do this in forge.\n      const params = new DecryptParameters<string>();\n      params.data = this.toByteString(data);\n      params.encKey = this.toByteString(key);\n      const result = await this.aesDecryptFast(params, \"ecb\");\n      return Utils.fromByteStringToArray(result);\n    }\n    const impKey = await this.subtle.importKey(\"raw\", key, { name: \"AES-CBC\" } as any, false, [\n      \"decrypt\",\n    ]);\n    const buffer = await this.subtle.decrypt({ name: \"AES-CBC\", iv: iv }, impKey, data);\n    return new Uint8Array(buffer);\n  }\n\n  async rsaEncrypt(\n    data: Uint8Array,\n    publicKey: Uint8Array,\n    algorithm: \"sha1\" | \"sha256\"\n  ): Promise<Uint8Array> {\n    // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n    // We cannot use the proper types here.\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n    const impKey = await this.subtle.importKey(\"spki\", publicKey, rsaParams, false, [\"encrypt\"]);\n    const buffer = await this.subtle.encrypt(rsaParams, impKey, data);\n    return new Uint8Array(buffer);\n  }\n\n  async rsaDecrypt(\n    data: Uint8Array,\n    privateKey: Uint8Array,\n    algorithm: \"sha1\" | \"sha256\"\n  ): Promise<Uint8Array> {\n    // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n    // We cannot use the proper types here.\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n    const impKey = await this.subtle.importKey(\"pkcs8\", privateKey, rsaParams, false, [\"decrypt\"]);\n    const buffer = await this.subtle.decrypt(rsaParams, impKey, data);\n    return new Uint8Array(buffer);\n  }\n\n  async rsaExtractPublicKey(privateKey: Uint8Array): Promise<Uint8Array> {\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      // Have to specify some algorithm\n      hash: { name: this.toWebCryptoAlgorithm(\"sha1\") },\n    };\n    const impPrivateKey = await this.subtle.importKey(\"pkcs8\", privateKey, rsaParams, true, [\n      \"decrypt\",\n    ]);\n    const jwkPrivateKey = await this.subtle.exportKey(\"jwk\", impPrivateKey);\n    const jwkPublicKeyParams = {\n      kty: \"RSA\",\n      e: jwkPrivateKey.e,\n      n: jwkPrivateKey.n,\n      alg: \"RSA-OAEP\",\n      ext: true,\n    };\n    const impPublicKey = await this.subtle.importKey(\"jwk\", jwkPublicKeyParams, rsaParams, true, [\n      \"encrypt\",\n    ]);\n    const buffer = await this.subtle.exportKey(\"spki\", impPublicKey);\n    return new Uint8Array(buffer);\n  }\n\n  async aesGenerateKey(bitLength = 128 | 192 | 256 | 512): Promise<CsprngArray> {\n    if (bitLength === 512) {\n      // 512 bit keys are not supported in WebCrypto, so we concat two 256 bit keys\n      const key1 = await this.aesGenerateKey(256);\n      const key2 = await this.aesGenerateKey(256);\n      return new Uint8Array([...key1, ...key2]) as CsprngArray;\n    }\n    const aesParams = {\n      name: \"AES-CBC\",\n      length: bitLength,\n    };\n\n    const key = await this.subtle.generateKey(aesParams, true, [\"encrypt\", \"decrypt\"]);\n    const rawKey = await this.subtle.exportKey(\"raw\", key);\n    return new Uint8Array(rawKey) as CsprngArray;\n  }\n\n  async rsaGenerateKeyPair(length: 1024 | 2048 | 4096): Promise<[Uint8Array, Uint8Array]> {\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      modulusLength: length,\n      publicExponent: new Uint8Array([0x01, 0x00, 0x01]), // 65537\n      // Have to specify some algorithm\n      hash: { name: this.toWebCryptoAlgorithm(\"sha1\") },\n    };\n    const keyPair = await this.subtle.generateKey(rsaParams, true, [\"encrypt\", \"decrypt\"]);\n    const publicKey = await this.subtle.exportKey(\"spki\", keyPair.publicKey);\n    const privateKey = await this.subtle.exportKey(\"pkcs8\", keyPair.privateKey);\n    return [new Uint8Array(publicKey), new Uint8Array(privateKey)];\n  }\n\n  randomBytes(length: number): Promise<CsprngArray> {\n    const arr = new Uint8Array(length);\n    this.crypto.getRandomValues(arr);\n    return Promise.resolve(arr as CsprngArray);\n  }\n\n  private toBuf(value: string | Uint8Array): Uint8Array {\n    let buf: Uint8Array;\n    if (typeof value === \"string\") {\n      buf = Utils.fromUtf8ToArray(value);\n    } else {\n      buf = value;\n    }\n    return buf;\n  }\n\n  private toByteString(value: string | Uint8Array): string {\n    let bytes: string;\n    if (typeof value === \"string\") {\n      bytes = forge.util.encodeUtf8(value);\n    } else {\n      bytes = Utils.fromBufferToByteString(value);\n    }\n    return bytes;\n  }\n\n  private toWebCryptoAlgorithm(algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"): string {\n    if (algorithm === \"md5\") {\n      throw new Error(\"MD5 is not supported in WebCrypto.\");\n    }\n    return algorithm === \"sha1\" ? \"SHA-1\" : algorithm === \"sha256\" ? \"SHA-256\" : \"SHA-512\";\n  }\n\n  private toWebCryptoAesMode(mode: \"cbc\" | \"ecb\"): string {\n    return mode === \"cbc\" ? \"AES-CBC\" : \"AES-ECB\";\n  }\n\n  // ref: https://stackoverflow.com/a/47880734/1090359\n  private checkIfWasmSupported(): boolean {\n    try {\n      if (typeof WebAssembly === \"object\" && typeof WebAssembly.instantiate === \"function\") {\n        const module = new WebAssembly.Module(\n          Uint8Array.of(0x0, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00)\n        );\n        if (module instanceof WebAssembly.Module) {\n          return new WebAssembly.Instance(module) instanceof WebAssembly.Instance;\n        }\n      }\n    } catch {\n      return false;\n    }\n    return false;\n  }\n}\n","import { EncryptionType } from \"../../../enums\";\nimport { Utils } from \"../../../platform/misc/utils\";\nimport { Encrypted } from \"../../interfaces/encrypted\";\n\nconst ENC_TYPE_LENGTH = 1;\nconst IV_LENGTH = 16;\nconst MAC_LENGTH = 32;\nconst MIN_DATA_LENGTH = 1;\n\nexport class EncArrayBuffer implements Encrypted {\n  readonly encryptionType: EncryptionType = null;\n  readonly dataBytes: Uint8Array = null;\n  readonly ivBytes: Uint8Array = null;\n  readonly macBytes: Uint8Array = null;\n\n  constructor(readonly buffer: Uint8Array) {\n    const encBytes = buffer;\n    const encType = encBytes[0];\n\n    switch (encType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64: {\n        const minimumLength = ENC_TYPE_LENGTH + IV_LENGTH + MAC_LENGTH + MIN_DATA_LENGTH;\n        if (encBytes.length < minimumLength) {\n          this.throwDecryptionError();\n        }\n\n        this.ivBytes = encBytes.slice(ENC_TYPE_LENGTH, ENC_TYPE_LENGTH + IV_LENGTH);\n        this.macBytes = encBytes.slice(\n          ENC_TYPE_LENGTH + IV_LENGTH,\n          ENC_TYPE_LENGTH + IV_LENGTH + MAC_LENGTH\n        );\n        this.dataBytes = encBytes.slice(ENC_TYPE_LENGTH + IV_LENGTH + MAC_LENGTH);\n        break;\n      }\n      case EncryptionType.AesCbc256_B64: {\n        const minimumLength = ENC_TYPE_LENGTH + IV_LENGTH + MIN_DATA_LENGTH;\n        if (encBytes.length < minimumLength) {\n          this.throwDecryptionError();\n        }\n\n        this.ivBytes = encBytes.slice(ENC_TYPE_LENGTH, ENC_TYPE_LENGTH + IV_LENGTH);\n        this.dataBytes = encBytes.slice(ENC_TYPE_LENGTH + IV_LENGTH);\n        break;\n      }\n      default:\n        this.throwDecryptionError();\n    }\n\n    this.encryptionType = encType;\n  }\n\n  private throwDecryptionError() {\n    throw new Error(\n      \"Error parsing encrypted ArrayBuffer: data is corrupted or has an invalid format.\"\n    );\n  }\n\n  static async fromResponse(response: {\n    arrayBuffer: () => Promise<ArrayBuffer>;\n  }): Promise<EncArrayBuffer> {\n    const buffer = await response.arrayBuffer();\n    if (buffer == null) {\n      throw new Error(\"Cannot create EncArrayBuffer from Response - Response is empty\");\n    }\n    return new EncArrayBuffer(new Uint8Array(buffer));\n  }\n\n  static fromB64(b64: string) {\n    const buffer = Utils.fromB64ToArray(b64);\n    return new EncArrayBuffer(buffer);\n  }\n}\n","import { Jsonify, Opaque } from \"type-fest\";\n\nimport { EncryptionType, EXPECTED_NUM_PARTS_BY_ENCRYPTION_TYPE } from \"../../../enums\";\nimport { Utils } from \"../../../platform/misc/utils\";\nimport { Encrypted } from \"../../interfaces/encrypted\";\n\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class EncString implements Encrypted {\n  encryptedString?: EncryptedString;\n  encryptionType?: EncryptionType;\n  decryptedValue?: string;\n  data?: string;\n  iv?: string;\n  mac?: string;\n\n  constructor(\n    encryptedStringOrType: string | EncryptionType,\n    data?: string,\n    iv?: string,\n    mac?: string\n  ) {\n    if (data != null) {\n      this.initFromData(encryptedStringOrType as EncryptionType, data, iv, mac);\n    } else {\n      this.initFromEncryptedString(encryptedStringOrType as string);\n    }\n  }\n\n  get ivBytes(): Uint8Array {\n    return this.iv == null ? null : Utils.fromB64ToArray(this.iv);\n  }\n\n  get macBytes(): Uint8Array {\n    return this.mac == null ? null : Utils.fromB64ToArray(this.mac);\n  }\n\n  get dataBytes(): Uint8Array {\n    return this.data == null ? null : Utils.fromB64ToArray(this.data);\n  }\n\n  toJSON() {\n    return this.encryptedString;\n  }\n\n  static fromJSON(obj: Jsonify<EncString>): EncString {\n    if (obj == null) {\n      return null;\n    }\n\n    return new EncString(obj);\n  }\n\n  private initFromData(encType: EncryptionType, data: string, iv: string, mac: string) {\n    if (iv != null) {\n      this.encryptedString = (encType + \".\" + iv + \"|\" + data) as EncryptedString;\n    } else {\n      this.encryptedString = (encType + \".\" + data) as EncryptedString;\n    }\n\n    // mac\n    if (mac != null) {\n      this.encryptedString = (this.encryptedString + \"|\" + mac) as EncryptedString;\n    }\n\n    this.encryptionType = encType;\n    this.data = data;\n    this.iv = iv;\n    this.mac = mac;\n  }\n\n  private initFromEncryptedString(encryptedString: string) {\n    this.encryptedString = encryptedString as EncryptedString;\n    if (!this.encryptedString) {\n      return;\n    }\n\n    const { encType, encPieces } = EncString.parseEncryptedString(this.encryptedString);\n    this.encryptionType = encType;\n\n    if (encPieces.length !== EXPECTED_NUM_PARTS_BY_ENCRYPTION_TYPE[encType]) {\n      return;\n    }\n\n    switch (encType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64:\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        this.mac = encPieces[2];\n        break;\n      case EncryptionType.AesCbc256_B64:\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        break;\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n        this.data = encPieces[0];\n        break;\n      default:\n        return;\n    }\n  }\n\n  private static parseEncryptedString(encryptedString: string): {\n    encType: EncryptionType;\n    encPieces: string[];\n  } {\n    const headerPieces = encryptedString.split(\".\");\n    let encType: EncryptionType;\n    let encPieces: string[] = null;\n\n    if (headerPieces.length === 2) {\n      try {\n        encType = parseInt(headerPieces[0], null);\n        encPieces = headerPieces[1].split(\"|\");\n      } catch (e) {\n        return;\n      }\n    } else {\n      encPieces = encryptedString.split(\"|\");\n      encType =\n        encPieces.length === 3\n          ? EncryptionType.AesCbc128_HmacSha256_B64\n          : EncryptionType.AesCbc256_B64;\n    }\n\n    return {\n      encType,\n      encPieces,\n    };\n  }\n\n  static isSerializedEncString(s: string): boolean {\n    const { encType, encPieces } = this.parseEncryptedString(s);\n\n    return EXPECTED_NUM_PARTS_BY_ENCRYPTION_TYPE[encType] === encPieces.length;\n  }\n\n  async decrypt(orgId: string, key: SymmetricCryptoKey = null): Promise<string> {\n    if (this.decryptedValue != null) {\n      return this.decryptedValue;\n    }\n\n    try {\n      if (key == null) {\n        key = await this.getKeyForDecryption(orgId);\n      }\n      if (key == null) {\n        throw new Error(\"No key to decrypt EncString with orgId \" + orgId);\n      }\n\n      const encryptService = Utils.getContainerService().getEncryptService();\n      this.decryptedValue = await encryptService.decryptToUtf8(this, key);\n    } catch (e) {\n      this.decryptedValue = \"[error: cannot decrypt]\";\n    }\n    return this.decryptedValue;\n  }\n\n  private async getKeyForDecryption(orgId: string) {\n    const cryptoService = Utils.getContainerService().getCryptoService();\n    return orgId != null\n      ? await cryptoService.getOrgKey(orgId)\n      : await cryptoService.getUserKeyWithLegacySupport();\n  }\n}\n\nexport type EncryptedString = Opaque<string, \"EncString\">;\n","import { SymmetricCryptoKey } from \"../../../platform/models/domain/symmetric-crypto-key\";\n\nexport class EncryptedObject {\n  iv: Uint8Array;\n  data: Uint8Array;\n  mac: Uint8Array;\n  key: SymmetricCryptoKey;\n}\n","import { EncryptionType } from \"../../../enums\";\nimport { Utils } from \"../../../platform/misc/utils\";\nimport { CryptoFunctionService } from \"../../abstractions/crypto-function.service\";\nimport { EncryptService } from \"../../abstractions/encrypt.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { Decryptable } from \"../../interfaces/decryptable.interface\";\nimport { Encrypted } from \"../../interfaces/encrypted\";\nimport { InitializerMetadata } from \"../../interfaces/initializer-metadata.interface\";\nimport { EncArrayBuffer } from \"../../models/domain/enc-array-buffer\";\nimport { EncString } from \"../../models/domain/enc-string\";\nimport { EncryptedObject } from \"../../models/domain/encrypted-object\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetric-crypto-key\";\n\nexport class EncryptServiceImplementation implements EncryptService {\n  constructor(\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected logService: LogService,\n    protected logMacFailures: boolean\n  ) {}\n\n  async encrypt(plainValue: string | Uint8Array, key: SymmetricCryptoKey): Promise<EncString> {\n    if (key == null) {\n      throw new Error(\"No encryption key provided.\");\n    }\n\n    if (plainValue == null) {\n      return Promise.resolve(null);\n    }\n\n    let plainBuf: Uint8Array;\n    if (typeof plainValue === \"string\") {\n      plainBuf = Utils.fromUtf8ToArray(plainValue);\n    } else {\n      plainBuf = plainValue;\n    }\n\n    const encObj = await this.aesEncrypt(plainBuf, key);\n    const iv = Utils.fromBufferToB64(encObj.iv);\n    const data = Utils.fromBufferToB64(encObj.data);\n    const mac = encObj.mac != null ? Utils.fromBufferToB64(encObj.mac) : null;\n    return new EncString(encObj.key.encType, data, iv, mac);\n  }\n\n  async encryptToBytes(plainValue: Uint8Array, key: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    if (key == null) {\n      throw new Error(\"No encryption key provided.\");\n    }\n\n    const encValue = await this.aesEncrypt(plainValue, key);\n    let macLen = 0;\n    if (encValue.mac != null) {\n      macLen = encValue.mac.byteLength;\n    }\n\n    const encBytes = new Uint8Array(1 + encValue.iv.byteLength + macLen + encValue.data.byteLength);\n    encBytes.set([encValue.key.encType]);\n    encBytes.set(new Uint8Array(encValue.iv), 1);\n    if (encValue.mac != null) {\n      encBytes.set(new Uint8Array(encValue.mac), 1 + encValue.iv.byteLength);\n    }\n\n    encBytes.set(new Uint8Array(encValue.data), 1 + encValue.iv.byteLength + macLen);\n    return new EncArrayBuffer(encBytes);\n  }\n\n  async decryptToUtf8(encString: EncString, key: SymmetricCryptoKey): Promise<string> {\n    if (key == null) {\n      throw new Error(\"No key provided for decryption.\");\n    }\n\n    key = this.resolveLegacyKey(key, encString);\n\n    if (key.macKey != null && encString?.mac == null) {\n      this.logService.error(\"mac required.\");\n      return null;\n    }\n\n    if (key.encType !== encString.encryptionType) {\n      this.logService.error(\"encType unavailable.\");\n      return null;\n    }\n\n    const fastParams = this.cryptoFunctionService.aesDecryptFastParameters(\n      encString.data,\n      encString.iv,\n      encString.mac,\n      key\n    );\n    if (fastParams.macKey != null && fastParams.mac != null) {\n      const computedMac = await this.cryptoFunctionService.hmacFast(\n        fastParams.macData,\n        fastParams.macKey,\n        \"sha256\"\n      );\n      const macsEqual = await this.cryptoFunctionService.compareFast(fastParams.mac, computedMac);\n      if (!macsEqual) {\n        this.logMacFailed(\"mac failed.\");\n        return null;\n      }\n    }\n\n    return await this.cryptoFunctionService.aesDecryptFast(fastParams, \"cbc\");\n  }\n\n  async decryptToBytes(encThing: Encrypted, key: SymmetricCryptoKey): Promise<Uint8Array> {\n    if (key == null) {\n      throw new Error(\"No encryption key provided.\");\n    }\n\n    if (encThing == null) {\n      throw new Error(\"Nothing provided for decryption.\");\n    }\n\n    key = this.resolveLegacyKey(key, encThing);\n\n    if (key.macKey != null && encThing.macBytes == null) {\n      return null;\n    }\n\n    if (key.encType !== encThing.encryptionType) {\n      return null;\n    }\n\n    if (key.macKey != null && encThing.macBytes != null) {\n      const macData = new Uint8Array(encThing.ivBytes.byteLength + encThing.dataBytes.byteLength);\n      macData.set(new Uint8Array(encThing.ivBytes), 0);\n      macData.set(new Uint8Array(encThing.dataBytes), encThing.ivBytes.byteLength);\n      const computedMac = await this.cryptoFunctionService.hmac(macData, key.macKey, \"sha256\");\n      if (computedMac === null) {\n        return null;\n      }\n\n      const macsMatch = await this.cryptoFunctionService.compare(encThing.macBytes, computedMac);\n      if (!macsMatch) {\n        this.logMacFailed(\"mac failed.\");\n        return null;\n      }\n    }\n\n    const result = await this.cryptoFunctionService.aesDecrypt(\n      encThing.dataBytes,\n      encThing.ivBytes,\n      key.encKey,\n      \"cbc\"\n    );\n\n    return result ?? null;\n  }\n\n  async decryptItems<T extends InitializerMetadata>(\n    items: Decryptable<T>[],\n    key: SymmetricCryptoKey\n  ): Promise<T[]> {\n    if (items == null || items.length < 1) {\n      return [];\n    }\n\n    return await Promise.all(items.map((item) => item.decrypt(key)));\n  }\n\n  private async aesEncrypt(data: Uint8Array, key: SymmetricCryptoKey): Promise<EncryptedObject> {\n    const obj = new EncryptedObject();\n    obj.key = key;\n    obj.iv = await this.cryptoFunctionService.randomBytes(16);\n    obj.data = await this.cryptoFunctionService.aesEncrypt(data, obj.iv, obj.key.encKey);\n\n    if (obj.key.macKey != null) {\n      const macData = new Uint8Array(obj.iv.byteLength + obj.data.byteLength);\n      macData.set(new Uint8Array(obj.iv), 0);\n      macData.set(new Uint8Array(obj.data), obj.iv.byteLength);\n      obj.mac = await this.cryptoFunctionService.hmac(macData, obj.key.macKey, \"sha256\");\n    }\n\n    return obj;\n  }\n\n  private logMacFailed(msg: string) {\n    if (this.logMacFailures) {\n      this.logService.error(msg);\n    }\n  }\n\n  /**\n   * Transform into new key for the old encrypt-then-mac scheme if required, otherwise return the current key unchanged\n   * @param encThing The encrypted object (e.g. encString or encArrayBuffer) that you want to decrypt\n   */\n  resolveLegacyKey(key: SymmetricCryptoKey, encThing: Encrypted): SymmetricCryptoKey {\n    if (\n      encThing.encryptionType === EncryptionType.AesCbc128_HmacSha256_B64 &&\n      key.encType === EncryptionType.AesCbc256_B64\n    ) {\n      return new SymmetricCryptoKey(key.key, EncryptionType.AesCbc128_HmacSha256_B64);\n    }\n\n    return key;\n  }\n}\n","export enum InitializerKey {\n  Cipher = 0,\n  CipherView = 1,\n}\n","export enum CipherType {\n  Login = 1,\n  SecureNote = 2,\n  Card = 3,\n  Identity = 4,\n}\n","export enum CipherRepromptType {\n  None = 0,\n  Password = 1,\n}\n","import { View } from \"../../../models/view/view\";\n\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\n// https://contributing.bitwarden.com/architecture/clients/data-model#domain\nexport default class Domain {\n  protected buildDomainModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    notEncList: any[] = []\n  ) {\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = dataObj[map[prop] || prop];\n      if (notEncList.indexOf(prop) > -1) {\n        (domain as any)[prop] = objProp ? objProp : null;\n      } else {\n        (domain as any)[prop] = objProp ? new EncString(objProp) : null;\n      }\n    }\n  }\n  protected buildDataModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    notEncStringList: any[] = []\n  ) {\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = (domain as any)[map[prop] || prop];\n      if (notEncStringList.indexOf(prop) > -1) {\n        (dataObj as any)[prop] = objProp != null ? objProp : null;\n      } else {\n        (dataObj as any)[prop] = objProp != null ? (objProp as EncString).encryptedString : null;\n      }\n    }\n  }\n\n  protected async decryptObj<T extends View>(\n    viewModel: T,\n    map: any,\n    orgId: string,\n    key: SymmetricCryptoKey = null\n  ): Promise<T> {\n    const promises = [];\n    const self: any = this;\n\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      (function (theProp) {\n        const p = Promise.resolve()\n          .then(() => {\n            const mapProp = map[theProp] || theProp;\n            if (self[mapProp]) {\n              return self[mapProp].decrypt(orgId, key);\n            }\n            return null;\n          })\n          .then((val: any) => {\n            (viewModel as any)[theProp] = val;\n          });\n        promises.push(p);\n      })(prop);\n    }\n\n    await Promise.all(promises);\n    return viewModel;\n  }\n}\n","import { AttachmentResponse } from \"../response/attachment.response\";\n\nexport class AttachmentData {\n  id: string;\n  url: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(response?: AttachmentResponse) {\n    if (response == null) {\n      return;\n    }\n    this.id = response.id;\n    this.url = response.url;\n    this.fileName = response.fileName;\n    this.key = response.key;\n    this.size = response.size;\n    this.sizeName = response.sizeName;\n  }\n}\n","import { CardApi } from \"../../../models/api/card.api\";\n\nexport class CardData {\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(data?: CardApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.cardholderName = data.cardholderName;\n    this.brand = data.brand;\n    this.number = data.number;\n    this.expMonth = data.expMonth;\n    this.expYear = data.expYear;\n    this.code = data.code;\n  }\n}\n","import { FieldType, LinkedIdType } from \"../../../enums\";\nimport { FieldApi } from \"../../../models/api/field.api\";\n\nexport class FieldData {\n  type: FieldType;\n  name: string;\n  value: string;\n  linkedId: LinkedIdType;\n\n  constructor(response?: FieldApi) {\n    if (response == null) {\n      return;\n    }\n    this.type = response.type;\n    this.name = response.name;\n    this.value = response.value;\n    this.linkedId = response.linkedId;\n  }\n}\n","import { IdentityApi } from \"../../../models/api/identity.api\";\n\nexport class IdentityData {\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(data?: IdentityApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.title = data.title;\n    this.firstName = data.firstName;\n    this.middleName = data.middleName;\n    this.lastName = data.lastName;\n    this.address1 = data.address1;\n    this.address2 = data.address2;\n    this.address3 = data.address3;\n    this.city = data.city;\n    this.state = data.state;\n    this.postalCode = data.postalCode;\n    this.country = data.country;\n    this.company = data.company;\n    this.email = data.email;\n    this.phone = data.phone;\n    this.ssn = data.ssn;\n    this.username = data.username;\n    this.passportNumber = data.passportNumber;\n    this.licenseNumber = data.licenseNumber;\n  }\n}\n","import { Fido2CredentialApi } from \"../../api/fido2-credential.api\";\n\nexport class Fido2CredentialData {\n  credentialId: string;\n  keyType: \"public-key\";\n  keyAlgorithm: \"ECDSA\";\n  keyCurve: \"P-256\";\n  keyValue: string;\n  rpId: string;\n  userHandle: string;\n  counter: string;\n  rpName: string;\n  userDisplayName: string;\n  discoverable: string;\n  creationDate: string;\n\n  constructor(data?: Fido2CredentialApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.credentialId = data.credentialId;\n    this.keyType = data.keyType;\n    this.keyAlgorithm = data.keyAlgorithm;\n    this.keyCurve = data.keyCurve;\n    this.keyValue = data.keyValue;\n    this.rpId = data.rpId;\n    this.userHandle = data.userHandle;\n    this.counter = data.counter;\n    this.rpName = data.rpName;\n    this.userDisplayName = data.userDisplayName;\n    this.discoverable = data.discoverable;\n    this.creationDate = data.creationDate;\n  }\n}\n","import { UriMatchType } from \"../../../enums\";\nimport { LoginUriApi } from \"../../../models/api/login-uri.api\";\n\nexport class LoginUriData {\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(data?: LoginUriApi) {\n    if (data == null) {\n      return;\n    }\n    this.uri = data.uri;\n    this.match = data.match;\n  }\n}\n","import { LoginApi } from \"../../../models/api/login.api\";\n\nimport { Fido2CredentialData } from \"./fido2-credential.data\";\nimport { LoginUriData } from \"./login-uri.data\";\n\nexport class LoginData {\n  uris: LoginUriData[];\n  username: string;\n  password: string;\n  passwordRevisionDate: string;\n  totp: string;\n  autofillOnPageLoad: boolean;\n  fido2Credentials?: Fido2CredentialData[];\n\n  constructor(data?: LoginApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.username = data.username;\n    this.password = data.password;\n    this.passwordRevisionDate = data.passwordRevisionDate;\n    this.totp = data.totp;\n    this.autofillOnPageLoad = data.autofillOnPageLoad;\n\n    if (data.uris) {\n      this.uris = data.uris.map((u) => new LoginUriData(u));\n    }\n\n    if (data.fido2Credentials) {\n      this.fido2Credentials = data.fido2Credentials?.map((key) => new Fido2CredentialData(key));\n    }\n  }\n}\n","import { PasswordHistoryResponse } from \"../response/password-history.response\";\n\nexport class PasswordHistoryData {\n  password: string;\n  lastUsedDate: string;\n\n  constructor(response?: PasswordHistoryResponse) {\n    if (response == null) {\n      return;\n    }\n\n    this.password = response.password;\n    this.lastUsedDate = response.lastUsedDate;\n  }\n}\n","import { SecureNoteType } from \"../../../enums\";\nimport { SecureNoteApi } from \"../../../models/api/secure-note.api\";\n\nexport class SecureNoteData {\n  type: SecureNoteType;\n\n  constructor(data?: SecureNoteApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.type = data.type;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipher-reprompt-type\";\nimport { CipherType } from \"../../enums/cipher-type\";\nimport { CipherResponse } from \"../response/cipher.response\";\n\nimport { AttachmentData } from \"./attachment.data\";\nimport { CardData } from \"./card.data\";\nimport { FieldData } from \"./field.data\";\nimport { IdentityData } from \"./identity.data\";\nimport { LoginData } from \"./login.data\";\nimport { PasswordHistoryData } from \"./password-history.data\";\nimport { SecureNoteData } from \"./secure-note.data\";\n\nexport class CipherData {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  edit: boolean;\n  viewPassword: boolean;\n  organizationUseTotp: boolean;\n  favorite: boolean;\n  revisionDate: string;\n  type: CipherType;\n  name: string;\n  notes: string;\n  login?: LoginData;\n  secureNote?: SecureNoteData;\n  card?: CardData;\n  identity?: IdentityData;\n  fields?: FieldData[];\n  attachments?: AttachmentData[];\n  passwordHistory?: PasswordHistoryData[];\n  collectionIds?: string[];\n  creationDate: string;\n  deletedDate: string;\n  reprompt: CipherRepromptType;\n  key: string;\n\n  constructor(response?: CipherResponse, collectionIds?: string[]) {\n    if (response == null) {\n      return;\n    }\n\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.folderId = response.folderId;\n    this.edit = response.edit;\n    this.viewPassword = response.viewPassword;\n    this.organizationUseTotp = response.organizationUseTotp;\n    this.favorite = response.favorite;\n    this.revisionDate = response.revisionDate;\n    this.type = response.type;\n    this.name = response.name;\n    this.notes = response.notes;\n    this.collectionIds = collectionIds != null ? collectionIds : response.collectionIds;\n    this.creationDate = response.creationDate;\n    this.deletedDate = response.deletedDate;\n    this.reprompt = response.reprompt;\n    this.key = response.key;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new LoginData(response.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteData(response.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new CardData(response.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityData(response.identity);\n        break;\n      default:\n        break;\n    }\n\n    if (response.fields != null) {\n      this.fields = response.fields.map((f) => new FieldData(f));\n    }\n    if (response.attachments != null) {\n      this.attachments = response.attachments.map((a) => new AttachmentData(a));\n    }\n    if (response.passwordHistory != null) {\n      this.passwordHistory = response.passwordHistory.map((ph) => new PasswordHistoryData(ph));\n    }\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { View } from \"../../../models/view/view\";\nimport { SymmetricCryptoKey } from \"../../../platform/models/domain/symmetric-crypto-key\";\nimport { Attachment } from \"../domain/attachment\";\n\nexport class AttachmentView implements View {\n  id: string = null;\n  url: string = null;\n  size: string = null;\n  sizeName: string = null;\n  fileName: string = null;\n  key: SymmetricCryptoKey = null;\n\n  constructor(a?: Attachment) {\n    if (!a) {\n      return;\n    }\n\n    this.id = a.id;\n    this.url = a.url;\n    this.size = a.size;\n    this.sizeName = a.sizeName;\n  }\n\n  get fileSize(): number {\n    try {\n      if (this.size != null) {\n        return parseInt(this.size, null);\n      }\n    } catch {\n      // Invalid file size.\n    }\n    return 0;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<AttachmentView>>): AttachmentView {\n    const key = obj.key == null ? null : SymmetricCryptoKey.fromJSON(obj.key);\n    return Object.assign(new AttachmentView(), obj, { key: key });\n  }\n}\n","import { LinkedIdType } from \"../enums\";\nimport { ItemView } from \"../vault/models/view/item.view\";\n\nexport class LinkedMetadata {\n  constructor(readonly propertyKey: string, private readonly _i18nKey?: string) {}\n\n  get i18nKey() {\n    return this._i18nKey ?? this.propertyKey;\n  }\n}\n\n/**\n * A decorator used to set metadata used by Linked custom fields. Apply it to a class property or getter to make it\n *    available as a Linked custom field option.\n * @param id - A unique value that is saved in the Field model. It is used to look up the decorated class property.\n * @param i18nKey - The i18n key used to describe the decorated class property in the UI. If it is null, then the name\n *    of the class property will be used as the i18n key.\n */\nexport function linkedFieldOption(id: LinkedIdType, i18nKey?: string) {\n  return (prototype: ItemView, propertyKey: string) => {\n    if (prototype.linkedFieldOptions == null) {\n      prototype.linkedFieldOptions = new Map<LinkedIdType, LinkedMetadata>();\n    }\n\n    prototype.linkedFieldOptions.set(id, new LinkedMetadata(propertyKey, i18nKey));\n  };\n}\n","import { LinkedMetadata } from \"../../../misc/linkedFieldOption.decorator\";\nimport { View } from \"../../../models/view/view\";\n\nexport abstract class ItemView implements View {\n  linkedFieldOptions: Map<number, LinkedMetadata>;\n  abstract get subTitle(): string;\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { CardLinkedId as LinkedId } from \"../../../enums\";\nimport { linkedFieldOption } from \"../../../misc/linkedFieldOption.decorator\";\n\nimport { ItemView } from \"./item.view\";\n\nexport class CardView extends ItemView {\n  @linkedFieldOption(LinkedId.CardholderName)\n  cardholderName: string = null;\n  @linkedFieldOption(LinkedId.ExpMonth, \"expirationMonth\")\n  expMonth: string = null;\n  @linkedFieldOption(LinkedId.ExpYear, \"expirationYear\")\n  expYear: string = null;\n  @linkedFieldOption(LinkedId.Code, \"securityCode\")\n  code: string = null;\n\n  private _brand: string = null;\n  private _number: string = null;\n  private _subTitle: string = null;\n\n  get maskedCode(): string {\n    return this.code != null ? \"•\".repeat(this.code.length) : null;\n  }\n\n  get maskedNumber(): string {\n    return this.number != null ? \"•\".repeat(this.number.length) : null;\n  }\n\n  @linkedFieldOption(LinkedId.Brand)\n  get brand(): string {\n    return this._brand;\n  }\n  set brand(value: string) {\n    this._brand = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.Number)\n  get number(): string {\n    return this._number;\n  }\n  set number(value: string) {\n    this._number = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null) {\n      this._subTitle = this.brand;\n      if (this.number != null && this.number.length >= 4) {\n        if (this._subTitle != null && this._subTitle !== \"\") {\n          this._subTitle += \", \";\n        } else {\n          this._subTitle = \"\";\n        }\n\n        // Show last 5 on amex, last 4 for all others\n        const count =\n          this.number.length >= 5 && this.number.match(new RegExp(\"^3[47]\")) != null ? 5 : 4;\n        this._subTitle += \"*\" + this.number.substr(this.number.length - count);\n      }\n    }\n    return this._subTitle;\n  }\n\n  get expiration(): string {\n    if (!this.expMonth && !this.expYear) {\n      return null;\n    }\n\n    let exp = this.expMonth != null ? (\"0\" + this.expMonth).slice(-2) : \"__\";\n    exp += \" / \" + (this.expYear != null ? this.formatYear(this.expYear) : \"____\");\n    return exp;\n  }\n\n  private formatYear(year: string): string {\n    return year.length === 2 ? \"20\" + year : year;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<CardView>>): CardView {\n    return Object.assign(new CardView(), obj);\n  }\n\n  // ref https://stackoverflow.com/a/5911300\n  static getCardBrandByPatterns(cardNum: string): string {\n    if (cardNum == null || typeof cardNum !== \"string\" || cardNum.trim() === \"\") {\n      return null;\n    }\n\n    // Visa\n    let re = new RegExp(\"^4\");\n    if (cardNum.match(re) != null) {\n      return \"Visa\";\n    }\n\n    // Mastercard\n    // Updated for Mastercard 2017 BINs expansion\n    if (\n      /^(5[1-5][0-9]{14}|2(22[1-9][0-9]{12}|2[3-9][0-9]{13}|[3-6][0-9]{14}|7[0-1][0-9]{13}|720[0-9]{12}))$/.test(\n        cardNum\n      )\n    ) {\n      return \"Mastercard\";\n    }\n\n    // AMEX\n    re = new RegExp(\"^3[47]\");\n    if (cardNum.match(re) != null) {\n      return \"Amex\";\n    }\n\n    // Discover\n    re = new RegExp(\n      \"^(6011|622(12[6-9]|1[3-9][0-9]|[2-8][0-9]{2}|9[0-1][0-9]|92[0-5]|64[4-9])|65)\"\n    );\n    if (cardNum.match(re) != null) {\n      return \"Discover\";\n    }\n\n    // Diners\n    re = new RegExp(\"^36\");\n    if (cardNum.match(re) != null) {\n      return \"Diners Club\";\n    }\n\n    // Diners - Carte Blanche\n    re = new RegExp(\"^30[0-5]\");\n    if (cardNum.match(re) != null) {\n      return \"Diners Club\";\n    }\n\n    // JCB\n    re = new RegExp(\"^35(2[89]|[3-8][0-9])\");\n    if (cardNum.match(re) != null) {\n      return \"JCB\";\n    }\n\n    // Visa Electron\n    re = new RegExp(\"^(4026|417500|4508|4844|491(3|7))\");\n    if (cardNum.match(re) != null) {\n      return \"Visa\";\n    }\n\n    return null;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { FieldType, LinkedIdType } from \"../../../enums\";\nimport { View } from \"../../../models/view/view\";\nimport { Field } from \"../domain/field\";\n\nexport class FieldView implements View {\n  name: string = null;\n  value: string = null;\n  type: FieldType = null;\n  newField = false; // Marks if the field is new and hasn't been saved\n  showValue = false;\n  showCount = false;\n  linkedId: LinkedIdType = null;\n\n  constructor(f?: Field) {\n    if (!f) {\n      return;\n    }\n\n    this.type = f.type;\n    this.linkedId = f.linkedId;\n  }\n\n  get maskedValue(): string {\n    return this.value != null ? \"••••••••\" : null;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<FieldView>>): FieldView {\n    return Object.assign(new FieldView(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { IdentityLinkedId as LinkedId } from \"../../../enums\";\nimport { linkedFieldOption } from \"../../../misc/linkedFieldOption.decorator\";\nimport { Utils } from \"../../../platform/misc/utils\";\n\nimport { ItemView } from \"./item.view\";\n\nexport class IdentityView extends ItemView {\n  @linkedFieldOption(LinkedId.Title)\n  title: string = null;\n  @linkedFieldOption(LinkedId.MiddleName)\n  middleName: string = null;\n  @linkedFieldOption(LinkedId.Address1)\n  address1: string = null;\n  @linkedFieldOption(LinkedId.Address2)\n  address2: string = null;\n  @linkedFieldOption(LinkedId.Address3)\n  address3: string = null;\n  @linkedFieldOption(LinkedId.City, \"cityTown\")\n  city: string = null;\n  @linkedFieldOption(LinkedId.State, \"stateProvince\")\n  state: string = null;\n  @linkedFieldOption(LinkedId.PostalCode, \"zipPostalCode\")\n  postalCode: string = null;\n  @linkedFieldOption(LinkedId.Country)\n  country: string = null;\n  @linkedFieldOption(LinkedId.Company)\n  company: string = null;\n  @linkedFieldOption(LinkedId.Email)\n  email: string = null;\n  @linkedFieldOption(LinkedId.Phone)\n  phone: string = null;\n  @linkedFieldOption(LinkedId.Ssn)\n  ssn: string = null;\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.PassportNumber)\n  passportNumber: string = null;\n  @linkedFieldOption(LinkedId.LicenseNumber)\n  licenseNumber: string = null;\n\n  private _firstName: string = null;\n  private _lastName: string = null;\n  private _subTitle: string = null;\n\n  constructor() {\n    super();\n  }\n\n  @linkedFieldOption(LinkedId.FirstName)\n  get firstName(): string {\n    return this._firstName;\n  }\n  set firstName(value: string) {\n    this._firstName = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.LastName)\n  get lastName(): string {\n    return this._lastName;\n  }\n  set lastName(value: string) {\n    this._lastName = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null && (this.firstName != null || this.lastName != null)) {\n      this._subTitle = \"\";\n      if (this.firstName != null) {\n        this._subTitle = this.firstName;\n      }\n      if (this.lastName != null) {\n        if (this._subTitle !== \"\") {\n          this._subTitle += \" \";\n        }\n        this._subTitle += this.lastName;\n      }\n    }\n\n    return this._subTitle;\n  }\n\n  @linkedFieldOption(LinkedId.FullName)\n  get fullName(): string {\n    if (\n      this.title != null ||\n      this.firstName != null ||\n      this.middleName != null ||\n      this.lastName != null\n    ) {\n      let name = \"\";\n      if (this.title != null) {\n        name += this.title + \" \";\n      }\n      if (this.firstName != null) {\n        name += this.firstName + \" \";\n      }\n      if (this.middleName != null) {\n        name += this.middleName + \" \";\n      }\n      if (this.lastName != null) {\n        name += this.lastName;\n      }\n      return name.trim();\n    }\n\n    return null;\n  }\n\n  get fullAddress(): string {\n    let address = this.address1;\n    if (!Utils.isNullOrWhitespace(this.address2)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address2;\n    }\n    if (!Utils.isNullOrWhitespace(this.address3)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address3;\n    }\n    return address;\n  }\n\n  get fullAddressPart2(): string {\n    if (this.city == null && this.state == null && this.postalCode == null) {\n      return null;\n    }\n    const city = this.city || \"-\";\n    const state = this.state;\n    const postalCode = this.postalCode || \"-\";\n    let addressPart2 = city;\n    if (!Utils.isNullOrWhitespace(state)) {\n      addressPart2 += \", \" + state;\n    }\n    addressPart2 += \", \" + postalCode;\n    return addressPart2;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<IdentityView>>): IdentityView {\n    return Object.assign(new IdentityView(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { ItemView } from \"./item.view\";\n\nexport class Fido2CredentialView extends ItemView {\n  credentialId: string;\n  keyType: \"public-key\";\n  keyAlgorithm: \"ECDSA\";\n  keyCurve: \"P-256\";\n  keyValue: string;\n  rpId: string;\n  userHandle: string;\n  counter: number;\n  rpName: string;\n  userDisplayName: string;\n  discoverable: boolean;\n  creationDate: Date = null;\n\n  get subTitle(): string {\n    return this.userDisplayName;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Fido2CredentialView>>): Fido2CredentialView {\n    const creationDate = obj.creationDate != null ? new Date(obj.creationDate) : null;\n    return Object.assign(new Fido2CredentialView(), obj, {\n      creationDate,\n    });\n  }\n}\n","import { Utils } from \"./utils\";\n\nconst CanLaunchWhitelist = [\n  \"https://\",\n  \"http://\",\n  \"ssh://\",\n  \"ftp://\",\n  \"sftp://\",\n  \"irc://\",\n  \"vnc://\",\n  // https://docs.microsoft.com/en-us/windows-server/remote/remote-desktop-services/clients/remote-desktop-uri\n  \"rdp://\", // Legacy RDP URI scheme\n  \"ms-rd:\", // Preferred RDP URI scheme\n  \"chrome://\",\n  \"iosapp://\",\n  \"androidapp://\",\n];\n\nexport class SafeUrls {\n  static canLaunch(uri: string): boolean {\n    if (Utils.isNullOrWhitespace(uri)) {\n      return false;\n    }\n\n    for (let i = 0; i < CanLaunchWhitelist.length; i++) {\n      if (uri.indexOf(CanLaunchWhitelist[i]) === 0) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { UriMatchType } from \"../../../enums\";\nimport { View } from \"../../../models/view/view\";\nimport { SafeUrls } from \"../../../platform/misc/safe-urls\";\nimport { Utils } from \"../../../platform/misc/utils\";\nimport { LoginUri } from \"../domain/login-uri\";\n\nexport class LoginUriView implements View {\n  match: UriMatchType = null;\n\n  private _uri: string = null;\n  private _domain: string = null;\n  private _hostname: string = null;\n  private _host: string = null;\n  private _canLaunch: boolean = null;\n\n  constructor(u?: LoginUri) {\n    if (!u) {\n      return;\n    }\n\n    this.match = u.match;\n  }\n\n  get uri(): string {\n    return this._uri;\n  }\n  set uri(value: string) {\n    this._uri = value;\n    this._domain = null;\n    this._canLaunch = null;\n  }\n\n  get domain(): string {\n    if (this._domain == null && this.uri != null) {\n      this._domain = Utils.getDomain(this.uri);\n      if (this._domain === \"\") {\n        this._domain = null;\n      }\n    }\n\n    return this._domain;\n  }\n\n  get hostname(): string {\n    if (this.match === UriMatchType.RegularExpression) {\n      return null;\n    }\n    if (this._hostname == null && this.uri != null) {\n      this._hostname = Utils.getHostname(this.uri);\n      if (this._hostname === \"\") {\n        this._hostname = null;\n      }\n    }\n\n    return this._hostname;\n  }\n\n  get host(): string {\n    if (this.match === UriMatchType.RegularExpression) {\n      return null;\n    }\n    if (this._host == null && this.uri != null) {\n      this._host = Utils.getHost(this.uri);\n      if (this._host === \"\") {\n        this._host = null;\n      }\n    }\n\n    return this._host;\n  }\n\n  get hostnameOrUri(): string {\n    return this.hostname != null ? this.hostname : this.uri;\n  }\n\n  get hostOrUri(): string {\n    return this.host != null ? this.host : this.uri;\n  }\n\n  get isWebsite(): boolean {\n    return (\n      this.uri != null &&\n      (this.uri.indexOf(\"http://\") === 0 ||\n        this.uri.indexOf(\"https://\") === 0 ||\n        (this.uri.indexOf(\"://\") < 0 && !Utils.isNullOrWhitespace(Utils.getDomain(this.uri))))\n    );\n  }\n\n  get canLaunch(): boolean {\n    if (this._canLaunch != null) {\n      return this._canLaunch;\n    }\n    if (this.uri != null && this.match !== UriMatchType.RegularExpression) {\n      this._canLaunch = SafeUrls.canLaunch(this.launchUri);\n    } else {\n      this._canLaunch = false;\n    }\n    return this._canLaunch;\n  }\n\n  get launchUri(): string {\n    return this.uri.indexOf(\"://\") < 0 && !Utils.isNullOrWhitespace(Utils.getDomain(this.uri))\n      ? \"http://\" + this.uri\n      : this.uri;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<LoginUriView>>): LoginUriView {\n    return Object.assign(new LoginUriView(), obj);\n  }\n\n  matchesUri(\n    targetUri: string,\n    equivalentDomains: Set<string>,\n    defaultUriMatch: UriMatchType = null\n  ): boolean {\n    if (!this.uri || !targetUri) {\n      return false;\n    }\n\n    let matchType = this.match ?? defaultUriMatch;\n    matchType ??= UriMatchType.Domain;\n\n    const targetDomain = Utils.getDomain(targetUri);\n    const matchDomains = equivalentDomains.add(targetDomain);\n\n    switch (matchType) {\n      case UriMatchType.Domain:\n        return this.matchesDomain(targetUri, matchDomains);\n      case UriMatchType.Host: {\n        const urlHost = Utils.getHost(targetUri);\n        return urlHost != null && urlHost === Utils.getHost(this.uri);\n      }\n      case UriMatchType.Exact:\n        return targetUri === this.uri;\n      case UriMatchType.StartsWith:\n        return targetUri.startsWith(this.uri);\n      case UriMatchType.RegularExpression:\n        try {\n          const regex = new RegExp(this.uri, \"i\");\n          return regex.test(targetUri);\n        } catch (e) {\n          // Invalid regex\n          return false;\n        }\n      case UriMatchType.Never:\n        return false;\n      default:\n        break;\n    }\n\n    return false;\n  }\n\n  private matchesDomain(targetUri: string, matchDomains: Set<string>) {\n    if (targetUri == null || this.domain == null || !matchDomains.has(this.domain)) {\n      return false;\n    }\n\n    if (Utils.DomainMatchBlacklist.has(this.domain)) {\n      const domainUrlHost = Utils.getHost(targetUri);\n      return !Utils.DomainMatchBlacklist.get(this.domain).has(domainUrlHost);\n    }\n\n    return true;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { LoginLinkedId as LinkedId, UriMatchType } from \"../../../enums\";\nimport { linkedFieldOption } from \"../../../misc/linkedFieldOption.decorator\";\nimport { Utils } from \"../../../platform/misc/utils\";\nimport { Login } from \"../domain/login\";\n\nimport { Fido2CredentialView } from \"./fido2-credential.view\";\nimport { ItemView } from \"./item.view\";\nimport { LoginUriView } from \"./login-uri.view\";\n\nexport class LoginView extends ItemView {\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.Password)\n  password: string = null;\n\n  passwordRevisionDate?: Date = null;\n  totp: string = null;\n  uris: LoginUriView[] = null;\n  autofillOnPageLoad: boolean = null;\n  fido2Credentials: Fido2CredentialView[] = null;\n\n  constructor(l?: Login) {\n    super();\n    if (!l) {\n      return;\n    }\n\n    this.passwordRevisionDate = l.passwordRevisionDate;\n    this.autofillOnPageLoad = l.autofillOnPageLoad;\n  }\n\n  get uri(): string {\n    return this.hasUris ? this.uris[0].uri : null;\n  }\n\n  get maskedPassword(): string {\n    return this.password != null ? \"••••••••\" : null;\n  }\n\n  get subTitle(): string {\n    return this.username;\n  }\n\n  get canLaunch(): boolean {\n    return this.hasUris && this.uris.some((u) => u.canLaunch);\n  }\n\n  get hasTotp(): boolean {\n    return !Utils.isNullOrWhitespace(this.totp);\n  }\n\n  get launchUri(): string {\n    if (this.hasUris) {\n      const uri = this.uris.find((u) => u.canLaunch);\n      if (uri != null) {\n        return uri.launchUri;\n      }\n    }\n    return null;\n  }\n\n  get hasUris(): boolean {\n    return this.uris != null && this.uris.length > 0;\n  }\n\n  get hasFido2Credentials(): boolean {\n    return this.fido2Credentials != null && this.fido2Credentials.length > 0;\n  }\n\n  matchesUri(\n    targetUri: string,\n    equivalentDomains: Set<string>,\n    defaultUriMatch: UriMatchType = null\n  ): boolean {\n    if (this.uris == null) {\n      return false;\n    }\n\n    return this.uris.some((uri) => uri.matchesUri(targetUri, equivalentDomains, defaultUriMatch));\n  }\n\n  static fromJSON(obj: Partial<Jsonify<LoginView>>): LoginView {\n    const passwordRevisionDate =\n      obj.passwordRevisionDate == null ? null : new Date(obj.passwordRevisionDate);\n    const uris = obj.uris?.map((uri: any) => LoginUriView.fromJSON(uri));\n    const fido2Credentials = obj.fido2Credentials?.map((key) => Fido2CredentialView.fromJSON(key));\n\n    return Object.assign(new LoginView(), obj, {\n      passwordRevisionDate,\n      uris,\n      fido2Credentials,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { View } from \"../../../models/view/view\";\nimport { Password } from \"../domain/password\";\n\nexport class PasswordHistoryView implements View {\n  password: string = null;\n  lastUsedDate: Date = null;\n\n  constructor(ph?: Password) {\n    if (!ph) {\n      return;\n    }\n\n    this.lastUsedDate = ph.lastUsedDate;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<PasswordHistoryView>>): PasswordHistoryView {\n    const lastUsedDate = obj.lastUsedDate == null ? null : new Date(obj.lastUsedDate);\n\n    return Object.assign(new PasswordHistoryView(), obj, {\n      lastUsedDate: lastUsedDate,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { SecureNoteType } from \"../../../enums\";\nimport { SecureNote } from \"../domain/secure-note\";\n\nimport { ItemView } from \"./item.view\";\n\nexport class SecureNoteView extends ItemView {\n  type: SecureNoteType = null;\n\n  constructor(n?: SecureNote) {\n    super();\n    if (!n) {\n      return;\n    }\n\n    this.type = n.type;\n  }\n\n  get subTitle(): string {\n    return null;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<SecureNoteView>>): SecureNoteView {\n    return Object.assign(new SecureNoteView(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { LinkedIdType } from \"../../../enums\";\nimport { View } from \"../../../models/view/view\";\nimport { InitializerMetadata } from \"../../../platform/interfaces/initializer-metadata.interface\";\nimport { InitializerKey } from \"../../../platform/services/cryptography/initializer-key\";\nimport { CipherRepromptType } from \"../../enums/cipher-reprompt-type\";\nimport { CipherType } from \"../../enums/cipher-type\";\nimport { LocalData } from \"../data/local.data\";\nimport { Cipher } from \"../domain/cipher\";\n\nimport { AttachmentView } from \"./attachment.view\";\nimport { CardView } from \"./card.view\";\nimport { FieldView } from \"./field.view\";\nimport { IdentityView } from \"./identity.view\";\nimport { LoginView } from \"./login.view\";\nimport { PasswordHistoryView } from \"./password-history.view\";\nimport { SecureNoteView } from \"./secure-note.view\";\n\nexport class CipherView implements View, InitializerMetadata {\n  readonly initializerKey = InitializerKey.CipherView;\n\n  id: string = null;\n  organizationId: string = null;\n  folderId: string = null;\n  name: string = null;\n  notes: string = null;\n  type: CipherType = null;\n  favorite = false;\n  organizationUseTotp = false;\n  edit = false;\n  viewPassword = true;\n  localData: LocalData;\n  login = new LoginView();\n  identity = new IdentityView();\n  card = new CardView();\n  secureNote = new SecureNoteView();\n  attachments: AttachmentView[] = null;\n  fields: FieldView[] = null;\n  passwordHistory: PasswordHistoryView[] = null;\n  collectionIds: string[] = null;\n  revisionDate: Date = null;\n  creationDate: Date = null;\n  deletedDate: Date = null;\n  reprompt: CipherRepromptType = CipherRepromptType.None;\n\n  constructor(c?: Cipher) {\n    if (!c) {\n      return;\n    }\n\n    this.id = c.id;\n    this.organizationId = c.organizationId;\n    this.folderId = c.folderId;\n    this.favorite = c.favorite;\n    this.organizationUseTotp = c.organizationUseTotp;\n    this.edit = c.edit;\n    this.viewPassword = c.viewPassword;\n    this.type = c.type;\n    this.localData = c.localData;\n    this.collectionIds = c.collectionIds;\n    this.revisionDate = c.revisionDate;\n    this.creationDate = c.creationDate;\n    this.deletedDate = c.deletedDate;\n    // Old locally stored ciphers might have reprompt == null. If so set it to None.\n    this.reprompt = c.reprompt ?? CipherRepromptType.None;\n  }\n\n  private get item() {\n    switch (this.type) {\n      case CipherType.Login:\n        return this.login;\n      case CipherType.SecureNote:\n        return this.secureNote;\n      case CipherType.Card:\n        return this.card;\n      case CipherType.Identity:\n        return this.identity;\n      default:\n        break;\n    }\n\n    return null;\n  }\n\n  get subTitle(): string {\n    return this.item.subTitle;\n  }\n\n  get hasPasswordHistory(): boolean {\n    return this.passwordHistory && this.passwordHistory.length > 0;\n  }\n\n  get hasAttachments(): boolean {\n    return this.attachments && this.attachments.length > 0;\n  }\n\n  get hasOldAttachments(): boolean {\n    if (this.hasAttachments) {\n      for (let i = 0; i < this.attachments.length; i++) {\n        if (this.attachments[i].key == null) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  get hasFields(): boolean {\n    return this.fields && this.fields.length > 0;\n  }\n\n  get passwordRevisionDisplayDate(): Date {\n    if (this.type !== CipherType.Login || this.login == null) {\n      return null;\n    } else if (this.login.password == null || this.login.password === \"\") {\n      return null;\n    }\n    return this.login.passwordRevisionDate;\n  }\n\n  get isDeleted(): boolean {\n    return this.deletedDate != null;\n  }\n\n  get linkedFieldOptions() {\n    return this.item.linkedFieldOptions;\n  }\n\n  linkedFieldValue(id: LinkedIdType) {\n    const linkedFieldOption = this.linkedFieldOptions?.get(id);\n    if (linkedFieldOption == null) {\n      return null;\n    }\n\n    const item = this.item;\n    return this.item[linkedFieldOption.propertyKey as keyof typeof item];\n  }\n\n  linkedFieldI18nKey(id: LinkedIdType): string {\n    return this.linkedFieldOptions.get(id)?.i18nKey;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<CipherView>>): CipherView {\n    const view = new CipherView();\n    const revisionDate = obj.revisionDate == null ? null : new Date(obj.revisionDate);\n    const deletedDate = obj.deletedDate == null ? null : new Date(obj.deletedDate);\n    const attachments = obj.attachments?.map((a: any) => AttachmentView.fromJSON(a));\n    const fields = obj.fields?.map((f: any) => FieldView.fromJSON(f));\n    const passwordHistory = obj.passwordHistory?.map((ph: any) => PasswordHistoryView.fromJSON(ph));\n\n    Object.assign(view, obj, {\n      revisionDate: revisionDate,\n      deletedDate: deletedDate,\n      attachments: attachments,\n      fields: fields,\n      passwordHistory: passwordHistory,\n    });\n\n    switch (obj.type) {\n      case CipherType.Card:\n        view.card = CardView.fromJSON(obj.card);\n        break;\n      case CipherType.Identity:\n        view.identity = IdentityView.fromJSON(obj.identity);\n        break;\n      case CipherType.Login:\n        view.login = LoginView.fromJSON(obj.login);\n        break;\n      case CipherType.SecureNote:\n        view.secureNote = SecureNoteView.fromJSON(obj.secureNote);\n        break;\n      default:\n        break;\n    }\n\n    return view;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Utils } from \"../../../platform/misc/utils\";\nimport Domain from \"../../../platform/models/domain/domain-base\";\nimport { EncString } from \"../../../platform/models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"../../../platform/models/domain/symmetric-crypto-key\";\nimport { AttachmentData } from \"../data/attachment.data\";\nimport { AttachmentView } from \"../view/attachment.view\";\n\nexport class Attachment extends Domain {\n  id: string;\n  url: string;\n  size: string;\n  sizeName: string; // Readable size, ex: \"4.2 KB\" or \"1.43 GB\"\n  key: EncString;\n  fileName: EncString;\n\n  constructor(obj?: AttachmentData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.size = obj.size;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      [\"id\", \"url\", \"sizeName\"]\n    );\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<AttachmentView> {\n    const view = await this.decryptObj(\n      new AttachmentView(this),\n      {\n        fileName: null,\n      },\n      orgId,\n      encKey\n    );\n\n    if (this.key != null) {\n      view.key = await this.decryptAttachmentKey(orgId, encKey);\n    }\n\n    return view;\n  }\n\n  private async decryptAttachmentKey(orgId: string, encKey?: SymmetricCryptoKey) {\n    try {\n      if (encKey == null) {\n        encKey = await this.getKeyForDecryption(orgId);\n      }\n\n      const encryptService = Utils.getContainerService().getEncryptService();\n      const decValue = await encryptService.decryptToBytes(this.key, encKey);\n      return new SymmetricCryptoKey(decValue);\n    } catch (e) {\n      // TODO: error?\n    }\n  }\n\n  private async getKeyForDecryption(orgId: string) {\n    const cryptoService = Utils.getContainerService().getCryptoService();\n    return orgId != null\n      ? await cryptoService.getOrgKey(orgId)\n      : await cryptoService.getUserKeyWithLegacySupport();\n  }\n\n  toAttachmentData(): AttachmentData {\n    const a = new AttachmentData();\n    a.size = this.size;\n    this.buildDataModel(\n      this,\n      a,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      [\"id\", \"url\", \"sizeName\"]\n    );\n    return a;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Attachment>>): Attachment {\n    if (obj == null) {\n      return null;\n    }\n\n    const key = EncString.fromJSON(obj.key);\n    const fileName = EncString.fromJSON(obj.fileName);\n\n    return Object.assign(new Attachment(), obj, {\n      key,\n      fileName,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport Domain from \"../../../platform/models/domain/domain-base\";\nimport { EncString } from \"../../../platform/models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"../../../platform/models/domain/symmetric-crypto-key\";\nimport { CardData } from \"../data/card.data\";\nimport { CardView } from \"../view/card.view\";\n\nexport class Card extends Domain {\n  cardholderName: EncString;\n  brand: EncString;\n  number: EncString;\n  expMonth: EncString;\n  expYear: EncString;\n  code: EncString;\n\n  constructor(obj?: CardData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<CardView> {\n    return this.decryptObj(\n      new CardView(),\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toCardData(): CardData {\n    const c = new CardData();\n    this.buildDataModel(this, c, {\n      cardholderName: null,\n      brand: null,\n      number: null,\n      expMonth: null,\n      expYear: null,\n      code: null,\n    });\n    return c;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Card>>): Card {\n    if (obj == null) {\n      return null;\n    }\n\n    const cardholderName = EncString.fromJSON(obj.cardholderName);\n    const brand = EncString.fromJSON(obj.brand);\n    const number = EncString.fromJSON(obj.number);\n    const expMonth = EncString.fromJSON(obj.expMonth);\n    const expYear = EncString.fromJSON(obj.expYear);\n    const code = EncString.fromJSON(obj.code);\n    return Object.assign(new Card(), obj, {\n      cardholderName,\n      brand,\n      number,\n      expMonth,\n      expYear,\n      code,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { FieldType, LinkedIdType } from \"../../../enums\";\nimport Domain from \"../../../platform/models/domain/domain-base\";\nimport { EncString } from \"../../../platform/models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"../../../platform/models/domain/symmetric-crypto-key\";\nimport { FieldData } from \"../data/field.data\";\nimport { FieldView } from \"../view/field.view\";\n\nexport class Field extends Domain {\n  name: EncString;\n  value: EncString;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(obj?: FieldData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n    this.linkedId = obj.linkedId;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        name: null,\n        value: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<FieldView> {\n    return this.decryptObj(\n      new FieldView(this),\n      {\n        name: null,\n        value: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toFieldData(): FieldData {\n    const f = new FieldData();\n    this.buildDataModel(\n      this,\n      f,\n      {\n        name: null,\n        value: null,\n        type: null,\n        linkedId: null,\n      },\n      [\"type\", \"linkedId\"]\n    );\n    return f;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Field>>): Field {\n    if (obj == null) {\n      return null;\n    }\n\n    const name = EncString.fromJSON(obj.name);\n    const value = EncString.fromJSON(obj.value);\n\n    return Object.assign(new Field(), obj, {\n      name,\n      value,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport Domain from \"../../../platform/models/domain/domain-base\";\nimport { EncString } from \"../../../platform/models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"../../../platform/models/domain/symmetric-crypto-key\";\nimport { IdentityData } from \"../data/identity.data\";\nimport { IdentityView } from \"../view/identity.view\";\n\nexport class Identity extends Domain {\n  title: EncString;\n  firstName: EncString;\n  middleName: EncString;\n  lastName: EncString;\n  address1: EncString;\n  address2: EncString;\n  address3: EncString;\n  city: EncString;\n  state: EncString;\n  postalCode: EncString;\n  country: EncString;\n  company: EncString;\n  email: EncString;\n  phone: EncString;\n  ssn: EncString;\n  username: EncString;\n  passportNumber: EncString;\n  licenseNumber: EncString;\n\n  constructor(obj?: IdentityData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<IdentityView> {\n    return this.decryptObj(\n      new IdentityView(),\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toIdentityData(): IdentityData {\n    const i = new IdentityData();\n    this.buildDataModel(this, i, {\n      title: null,\n      firstName: null,\n      middleName: null,\n      lastName: null,\n      address1: null,\n      address2: null,\n      address3: null,\n      city: null,\n      state: null,\n      postalCode: null,\n      country: null,\n      company: null,\n      email: null,\n      phone: null,\n      ssn: null,\n      username: null,\n      passportNumber: null,\n      licenseNumber: null,\n    });\n    return i;\n  }\n\n  static fromJSON(obj: Jsonify<Identity>): Identity {\n    if (obj == null) {\n      return null;\n    }\n\n    const title = EncString.fromJSON(obj.title);\n    const firstName = EncString.fromJSON(obj.firstName);\n    const middleName = EncString.fromJSON(obj.middleName);\n    const lastName = EncString.fromJSON(obj.lastName);\n    const address1 = EncString.fromJSON(obj.address1);\n    const address2 = EncString.fromJSON(obj.address2);\n    const address3 = EncString.fromJSON(obj.address3);\n    const city = EncString.fromJSON(obj.city);\n    const state = EncString.fromJSON(obj.state);\n    const postalCode = EncString.fromJSON(obj.postalCode);\n    const country = EncString.fromJSON(obj.country);\n    const company = EncString.fromJSON(obj.company);\n    const email = EncString.fromJSON(obj.email);\n    const phone = EncString.fromJSON(obj.phone);\n    const ssn = EncString.fromJSON(obj.ssn);\n    const username = EncString.fromJSON(obj.username);\n    const passportNumber = EncString.fromJSON(obj.passportNumber);\n    const licenseNumber = EncString.fromJSON(obj.licenseNumber);\n\n    return Object.assign(new Identity(), obj, {\n      title,\n      firstName,\n      middleName,\n      lastName,\n      address1,\n      address2,\n      address3,\n      city,\n      state,\n      postalCode,\n      country,\n      company,\n      email,\n      phone,\n      ssn,\n      username,\n      passportNumber,\n      licenseNumber,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport Domain from \"../../../platform/models/domain/domain-base\";\nimport { EncString } from \"../../../platform/models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"../../../platform/models/domain/symmetric-crypto-key\";\nimport { Fido2CredentialData } from \"../data/fido2-credential.data\";\nimport { Fido2CredentialView } from \"../view/fido2-credential.view\";\n\nexport class Fido2Credential extends Domain {\n  credentialId: EncString | null = null;\n  keyType: EncString;\n  keyAlgorithm: EncString;\n  keyCurve: EncString;\n  keyValue: EncString;\n  rpId: EncString;\n  userHandle: EncString;\n  counter: EncString;\n  rpName: EncString;\n  userDisplayName: EncString;\n  discoverable: EncString;\n  creationDate: Date;\n\n  constructor(obj?: Fido2CredentialData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        credentialId: null,\n        keyType: null,\n        keyAlgorithm: null,\n        keyCurve: null,\n        keyValue: null,\n        rpId: null,\n        userHandle: null,\n        counter: null,\n        rpName: null,\n        userDisplayName: null,\n        discoverable: null,\n      },\n      []\n    );\n    this.creationDate = obj.creationDate != null ? new Date(obj.creationDate) : null;\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<Fido2CredentialView> {\n    const view = await this.decryptObj(\n      new Fido2CredentialView(),\n      {\n        credentialId: null,\n        keyType: null,\n        keyAlgorithm: null,\n        keyCurve: null,\n        keyValue: null,\n        rpId: null,\n        userHandle: null,\n        rpName: null,\n        userDisplayName: null,\n        discoverable: null,\n      },\n      orgId,\n      encKey\n    );\n\n    const { counter } = await this.decryptObj(\n      { counter: \"\" },\n      {\n        counter: null,\n      },\n      orgId,\n      encKey\n    );\n    // Counter will end up as NaN if this fails\n    view.counter = parseInt(counter);\n\n    const { discoverable } = await this.decryptObj(\n      { discoverable: \"\" },\n      {\n        discoverable: null,\n      },\n      orgId,\n      encKey\n    );\n    view.discoverable = discoverable === \"true\";\n    view.creationDate = this.creationDate;\n\n    return view;\n  }\n\n  toFido2CredentialData(): Fido2CredentialData {\n    const i = new Fido2CredentialData();\n    i.creationDate = this.creationDate.toISOString();\n    this.buildDataModel(this, i, {\n      credentialId: null,\n      keyType: null,\n      keyAlgorithm: null,\n      keyCurve: null,\n      keyValue: null,\n      rpId: null,\n      userHandle: null,\n      counter: null,\n      rpName: null,\n      userDisplayName: null,\n      discoverable: null,\n    });\n    return i;\n  }\n\n  static fromJSON(obj: Jsonify<Fido2Credential>): Fido2Credential {\n    if (obj == null) {\n      return null;\n    }\n\n    const credentialId = EncString.fromJSON(obj.credentialId);\n    const keyType = EncString.fromJSON(obj.keyType);\n    const keyAlgorithm = EncString.fromJSON(obj.keyAlgorithm);\n    const keyCurve = EncString.fromJSON(obj.keyCurve);\n    const keyValue = EncString.fromJSON(obj.keyValue);\n    const rpId = EncString.fromJSON(obj.rpId);\n    const userHandle = EncString.fromJSON(obj.userHandle);\n    const counter = EncString.fromJSON(obj.counter);\n    const rpName = EncString.fromJSON(obj.rpName);\n    const userDisplayName = EncString.fromJSON(obj.userDisplayName);\n    const discoverable = EncString.fromJSON(obj.discoverable);\n    const creationDate = obj.creationDate != null ? new Date(obj.creationDate) : null;\n\n    return Object.assign(new Fido2Credential(), obj, {\n      credentialId,\n      keyType,\n      keyAlgorithm,\n      keyCurve,\n      keyValue,\n      rpId,\n      userHandle,\n      counter,\n      rpName,\n      userDisplayName,\n      discoverable,\n      creationDate,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { UriMatchType } from \"../../../enums\";\nimport Domain from \"../../../platform/models/domain/domain-base\";\nimport { EncString } from \"../../../platform/models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"../../../platform/models/domain/symmetric-crypto-key\";\nimport { LoginUriData } from \"../data/login-uri.data\";\nimport { LoginUriView } from \"../view/login-uri.view\";\n\nexport class LoginUri extends Domain {\n  uri: EncString;\n  match: UriMatchType;\n\n  constructor(obj?: LoginUriData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.match = obj.match;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        uri: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginUriView> {\n    return this.decryptObj(\n      new LoginUriView(this),\n      {\n        uri: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toLoginUriData(): LoginUriData {\n    const u = new LoginUriData();\n    this.buildDataModel(\n      this,\n      u,\n      {\n        uri: null,\n        match: null,\n      },\n      [\"match\"]\n    );\n    return u;\n  }\n\n  static fromJSON(obj: Jsonify<LoginUri>): LoginUri {\n    if (obj == null) {\n      return null;\n    }\n\n    const uri = EncString.fromJSON(obj.uri);\n    return Object.assign(new LoginUri(), obj, {\n      uri,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport Domain from \"../../../platform/models/domain/domain-base\";\nimport { EncString } from \"../../../platform/models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"../../../platform/models/domain/symmetric-crypto-key\";\nimport { LoginData } from \"../data/login.data\";\nimport { LoginView } from \"../view/login.view\";\n\nimport { Fido2Credential } from \"./fido2-credential\";\nimport { LoginUri } from \"./login-uri\";\n\nexport class Login extends Domain {\n  uris: LoginUri[];\n  username: EncString;\n  password: EncString;\n  passwordRevisionDate?: Date;\n  totp: EncString;\n  autofillOnPageLoad: boolean;\n  fido2Credentials: Fido2Credential[];\n\n  constructor(obj?: LoginData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.passwordRevisionDate =\n      obj.passwordRevisionDate != null ? new Date(obj.passwordRevisionDate) : null;\n    this.autofillOnPageLoad = obj.autofillOnPageLoad;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      []\n    );\n\n    if (obj.uris) {\n      this.uris = [];\n      obj.uris.forEach((u) => {\n        this.uris.push(new LoginUri(u));\n      });\n    }\n\n    if (obj.fido2Credentials) {\n      this.fido2Credentials = obj.fido2Credentials.map((key) => new Fido2Credential(key));\n    }\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginView> {\n    const view = await this.decryptObj(\n      new LoginView(this),\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      orgId,\n      encKey\n    );\n\n    if (this.uris != null) {\n      view.uris = [];\n      for (let i = 0; i < this.uris.length; i++) {\n        const uri = await this.uris[i].decrypt(orgId, encKey);\n        view.uris.push(uri);\n      }\n    }\n\n    if (this.fido2Credentials != null) {\n      view.fido2Credentials = await Promise.all(\n        this.fido2Credentials.map((key) => key.decrypt(orgId, encKey))\n      );\n    }\n\n    return view;\n  }\n\n  toLoginData(): LoginData {\n    const l = new LoginData();\n    l.passwordRevisionDate =\n      this.passwordRevisionDate != null ? this.passwordRevisionDate.toISOString() : null;\n    l.autofillOnPageLoad = this.autofillOnPageLoad;\n    this.buildDataModel(this, l, {\n      username: null,\n      password: null,\n      totp: null,\n    });\n\n    if (this.uris != null && this.uris.length > 0) {\n      l.uris = [];\n      this.uris.forEach((u) => {\n        l.uris.push(u.toLoginUriData());\n      });\n    }\n\n    if (this.fido2Credentials != null && this.fido2Credentials.length > 0) {\n      l.fido2Credentials = this.fido2Credentials.map((key) => key.toFido2CredentialData());\n    }\n\n    return l;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Login>>): Login {\n    if (obj == null) {\n      return null;\n    }\n\n    const username = EncString.fromJSON(obj.username);\n    const password = EncString.fromJSON(obj.password);\n    const totp = EncString.fromJSON(obj.totp);\n    const passwordRevisionDate =\n      obj.passwordRevisionDate == null ? null : new Date(obj.passwordRevisionDate);\n    const uris = obj.uris?.map((uri: any) => LoginUri.fromJSON(uri));\n    const fido2Credentials =\n      obj.fido2Credentials?.map((key) => Fido2Credential.fromJSON(key)) ?? [];\n\n    return Object.assign(new Login(), obj, {\n      username,\n      password,\n      totp,\n      passwordRevisionDate,\n      uris,\n      fido2Credentials,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport Domain from \"../../../platform/models/domain/domain-base\";\nimport { EncString } from \"../../../platform/models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"../../../platform/models/domain/symmetric-crypto-key\";\nimport { PasswordHistoryData } from \"../data/password-history.data\";\nimport { PasswordHistoryView } from \"../view/password-history.view\";\n\nexport class Password extends Domain {\n  password: EncString;\n  lastUsedDate: Date;\n\n  constructor(obj?: PasswordHistoryData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(this, obj, {\n      password: null,\n    });\n    this.lastUsedDate = new Date(obj.lastUsedDate);\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<PasswordHistoryView> {\n    return this.decryptObj(\n      new PasswordHistoryView(this),\n      {\n        password: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toPasswordHistoryData(): PasswordHistoryData {\n    const ph = new PasswordHistoryData();\n    ph.lastUsedDate = this.lastUsedDate.toISOString();\n    this.buildDataModel(this, ph, {\n      password: null,\n    });\n    return ph;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Password>>): Password {\n    if (obj == null) {\n      return null;\n    }\n\n    const password = EncString.fromJSON(obj.password);\n    const lastUsedDate = obj.lastUsedDate == null ? null : new Date(obj.lastUsedDate);\n\n    return Object.assign(new Password(), obj, {\n      password,\n      lastUsedDate,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { SecureNoteType } from \"../../../enums\";\nimport Domain from \"../../../platform/models/domain/domain-base\";\nimport { SymmetricCryptoKey } from \"../../../platform/models/domain/symmetric-crypto-key\";\nimport { SecureNoteData } from \"../data/secure-note.data\";\nimport { SecureNoteView } from \"../view/secure-note.view\";\n\nexport class SecureNote extends Domain {\n  type: SecureNoteType;\n\n  constructor(obj?: SecureNoteData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<SecureNoteView> {\n    return Promise.resolve(new SecureNoteView(this));\n  }\n\n  toSecureNoteData(): SecureNoteData {\n    const n = new SecureNoteData();\n    n.type = this.type;\n    return n;\n  }\n\n  static fromJSON(obj: Jsonify<SecureNote>): SecureNote {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(new SecureNote(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Decryptable } from \"../../../platform/interfaces/decryptable.interface\";\nimport { Utils } from \"../../../platform/misc/utils\";\nimport Domain from \"../../../platform/models/domain/domain-base\";\nimport { EncString } from \"../../../platform/models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"../../../platform/models/domain/symmetric-crypto-key\";\nimport { InitializerKey } from \"../../../platform/services/cryptography/initializer-key\";\nimport { CipherRepromptType } from \"../../enums/cipher-reprompt-type\";\nimport { CipherType } from \"../../enums/cipher-type\";\nimport { CipherData } from \"../data/cipher.data\";\nimport { LocalData } from \"../data/local.data\";\nimport { CipherView } from \"../view/cipher.view\";\n\nimport { Attachment } from \"./attachment\";\nimport { Card } from \"./card\";\nimport { Field } from \"./field\";\nimport { Identity } from \"./identity\";\nimport { Login } from \"./login\";\nimport { Password } from \"./password\";\nimport { SecureNote } from \"./secure-note\";\n\nexport class Cipher extends Domain implements Decryptable<CipherView> {\n  readonly initializerKey = InitializerKey.Cipher;\n\n  id: string;\n  organizationId: string;\n  folderId: string;\n  name: EncString;\n  notes: EncString;\n  type: CipherType;\n  favorite: boolean;\n  organizationUseTotp: boolean;\n  edit: boolean;\n  viewPassword: boolean;\n  revisionDate: Date;\n  localData: LocalData;\n  login: Login;\n  identity: Identity;\n  card: Card;\n  secureNote: SecureNote;\n  attachments: Attachment[];\n  fields: Field[];\n  passwordHistory: Password[];\n  collectionIds: string[];\n  creationDate: Date;\n  deletedDate: Date;\n  reprompt: CipherRepromptType;\n  key: EncString;\n\n  constructor(obj?: CipherData, localData: LocalData = null) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        organizationId: null,\n        folderId: null,\n        name: null,\n        notes: null,\n        key: null,\n      },\n      [\"id\", \"organizationId\", \"folderId\"]\n    );\n\n    this.type = obj.type;\n    this.favorite = obj.favorite;\n    this.organizationUseTotp = obj.organizationUseTotp;\n    this.edit = obj.edit;\n    if (obj.viewPassword != null) {\n      this.viewPassword = obj.viewPassword;\n    } else {\n      this.viewPassword = true; // Default for already synced Ciphers without viewPassword\n    }\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    this.collectionIds = obj.collectionIds;\n    this.localData = localData;\n    this.creationDate = obj.creationDate != null ? new Date(obj.creationDate) : null;\n    this.deletedDate = obj.deletedDate != null ? new Date(obj.deletedDate) : null;\n    this.reprompt = obj.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new Login(obj.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNote(obj.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new Card(obj.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new Identity(obj.identity);\n        break;\n      default:\n        break;\n    }\n\n    if (obj.attachments != null) {\n      this.attachments = obj.attachments.map((a) => new Attachment(a));\n    } else {\n      this.attachments = null;\n    }\n\n    if (obj.fields != null) {\n      this.fields = obj.fields.map((f) => new Field(f));\n    } else {\n      this.fields = null;\n    }\n\n    if (obj.passwordHistory != null) {\n      this.passwordHistory = obj.passwordHistory.map((ph) => new Password(ph));\n    } else {\n      this.passwordHistory = null;\n    }\n  }\n\n  // We are passing the organizationId into the EncString.decrypt() method here, but because the encKey will always be\n  // present and so the organizationId will not be used.\n  // We will refactor the EncString.decrypt() in https://bitwarden.atlassian.net/browse/PM-3762 to remove the dependency on the organizationId.\n  async decrypt(encKey: SymmetricCryptoKey): Promise<CipherView> {\n    const model = new CipherView(this);\n\n    if (this.key != null) {\n      const encryptService = Utils.getContainerService().getEncryptService();\n      encKey = new SymmetricCryptoKey(await encryptService.decryptToBytes(this.key, encKey));\n    }\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n        notes: null,\n      },\n      this.organizationId,\n      encKey\n    );\n\n    switch (this.type) {\n      case CipherType.Login:\n        model.login = await this.login.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.SecureNote:\n        model.secureNote = await this.secureNote.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Card:\n        model.card = await this.card.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Identity:\n        model.identity = await this.identity.decrypt(this.organizationId, encKey);\n        break;\n      default:\n        break;\n    }\n\n    if (this.attachments != null && this.attachments.length > 0) {\n      const attachments: any[] = [];\n      await this.attachments.reduce((promise, attachment) => {\n        return promise\n          .then(() => {\n            return attachment.decrypt(this.organizationId, encKey);\n          })\n          .then((decAttachment) => {\n            attachments.push(decAttachment);\n          });\n      }, Promise.resolve());\n      model.attachments = attachments;\n    }\n\n    if (this.fields != null && this.fields.length > 0) {\n      const fields: any[] = [];\n      await this.fields.reduce((promise, field) => {\n        return promise\n          .then(() => {\n            return field.decrypt(this.organizationId, encKey);\n          })\n          .then((decField) => {\n            fields.push(decField);\n          });\n      }, Promise.resolve());\n      model.fields = fields;\n    }\n\n    if (this.passwordHistory != null && this.passwordHistory.length > 0) {\n      const passwordHistory: any[] = [];\n      await this.passwordHistory.reduce((promise, ph) => {\n        return promise\n          .then(() => {\n            return ph.decrypt(this.organizationId, encKey);\n          })\n          .then((decPh) => {\n            passwordHistory.push(decPh);\n          });\n      }, Promise.resolve());\n      model.passwordHistory = passwordHistory;\n    }\n\n    return model;\n  }\n\n  toCipherData(): CipherData {\n    const c = new CipherData();\n    c.id = this.id;\n    c.organizationId = this.organizationId;\n    c.folderId = this.folderId;\n    c.edit = this.edit;\n    c.viewPassword = this.viewPassword;\n    c.organizationUseTotp = this.organizationUseTotp;\n    c.favorite = this.favorite;\n    c.revisionDate = this.revisionDate != null ? this.revisionDate.toISOString() : null;\n    c.type = this.type;\n    c.collectionIds = this.collectionIds;\n    c.creationDate = this.creationDate != null ? this.creationDate.toISOString() : null;\n    c.deletedDate = this.deletedDate != null ? this.deletedDate.toISOString() : null;\n    c.reprompt = this.reprompt;\n    c.key = this.key?.encryptedString;\n\n    this.buildDataModel(this, c, {\n      name: null,\n      notes: null,\n    });\n\n    switch (c.type) {\n      case CipherType.Login:\n        c.login = this.login.toLoginData();\n        break;\n      case CipherType.SecureNote:\n        c.secureNote = this.secureNote.toSecureNoteData();\n        break;\n      case CipherType.Card:\n        c.card = this.card.toCardData();\n        break;\n      case CipherType.Identity:\n        c.identity = this.identity.toIdentityData();\n        break;\n      default:\n        break;\n    }\n\n    if (this.fields != null) {\n      c.fields = this.fields.map((f) => f.toFieldData());\n    }\n    if (this.attachments != null) {\n      c.attachments = this.attachments.map((a) => a.toAttachmentData());\n    }\n    if (this.passwordHistory != null) {\n      c.passwordHistory = this.passwordHistory.map((ph) => ph.toPasswordHistoryData());\n    }\n    return c;\n  }\n\n  static fromJSON(obj: Jsonify<Cipher>) {\n    if (obj == null) {\n      return null;\n    }\n\n    const domain = new Cipher();\n    const name = EncString.fromJSON(obj.name);\n    const notes = EncString.fromJSON(obj.notes);\n    const revisionDate = obj.revisionDate == null ? null : new Date(obj.revisionDate);\n    const deletedDate = obj.deletedDate == null ? null : new Date(obj.deletedDate);\n    const attachments = obj.attachments?.map((a: any) => Attachment.fromJSON(a));\n    const fields = obj.fields?.map((f: any) => Field.fromJSON(f));\n    const passwordHistory = obj.passwordHistory?.map((ph: any) => Password.fromJSON(ph));\n    const key = EncString.fromJSON(obj.key);\n\n    Object.assign(domain, obj, {\n      name,\n      notes,\n      revisionDate,\n      deletedDate,\n      attachments,\n      fields,\n      passwordHistory,\n      key,\n    });\n\n    switch (obj.type) {\n      case CipherType.Card:\n        domain.card = Card.fromJSON(obj.card);\n        break;\n      case CipherType.Identity:\n        domain.identity = Identity.fromJSON(obj.identity);\n        break;\n      case CipherType.Login:\n        domain.login = Login.fromJSON(obj.login);\n        break;\n      case CipherType.SecureNote:\n        domain.secureNote = SecureNote.fromJSON(obj.secureNote);\n        break;\n      default:\n        break;\n    }\n\n    return domain;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Cipher } from \"../../../vault/models/domain/cipher\";\nimport { CipherView } from \"../../../vault/models/view/cipher.view\";\nimport { InitializerMetadata } from \"../../interfaces/initializer-metadata.interface\";\n\nimport { InitializerKey } from \"./initializer-key\";\n\n/**\n * Internal reference of classes so we can reconstruct objects properly.\n * Each entry should be keyed using the Decryptable.initializerKey property\n */\nconst classInitializers: Record<InitializerKey, (obj: any) => any> = {\n  [InitializerKey.Cipher]: Cipher.fromJSON,\n  [InitializerKey.CipherView]: CipherView.fromJSON,\n};\n\nexport function getClassInitializer<T extends InitializerMetadata>(\n  className: InitializerKey\n): (obj: Jsonify<T>) => T {\n  return classInitializers[className];\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Decryptable } from \"../../interfaces/decryptable.interface\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetric-crypto-key\";\nimport { ConsoleLogService } from \"../console-log.service\";\nimport { ContainerService } from \"../container.service\";\nimport { WebCryptoFunctionService } from \"../web-crypto-function.service\";\n\nimport { EncryptServiceImplementation } from \"./encrypt.service.implementation\";\nimport { getClassInitializer } from \"./get-class-initializer\";\n\nconst workerApi: Worker = self as any;\n\nlet inited = false;\nlet encryptService: EncryptServiceImplementation;\n\n/**\n * Bootstrap the worker environment with services required for decryption\n */\nexport function init() {\n  const cryptoFunctionService = new WebCryptoFunctionService(self);\n  const logService = new ConsoleLogService(false);\n  encryptService = new EncryptServiceImplementation(cryptoFunctionService, logService, true);\n\n  const bitwardenContainerService = new ContainerService(null, encryptService);\n  bitwardenContainerService.attachToGlobal(self);\n\n  inited = true;\n}\n\n/**\n * Listen for messages and decrypt their contents\n */\nworkerApi.addEventListener(\"message\", async (event: { data: string }) => {\n  if (!inited) {\n    init();\n  }\n\n  const request: {\n    id: string;\n    items: Jsonify<Decryptable<any>>[];\n    key: Jsonify<SymmetricCryptoKey>;\n  } = JSON.parse(event.data);\n\n  const key = SymmetricCryptoKey.fromJSON(request.key);\n  const items = request.items.map((jsonItem) => {\n    const initializer = getClassInitializer<Decryptable<any>>(jsonItem.initializerKey);\n    return initializer(jsonItem);\n  });\n  const result = await encryptService.decryptItems(items, key);\n\n  workerApi.postMessage({\n    id: request.id,\n    items: JSON.stringify(result),\n  });\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// expose the module cache\n__webpack_require__.c = __webpack_module_cache__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [407], () => (__webpack_require__(34138)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".\" + \"3965054f91d870070000\" + \".js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t768: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunk_bitwarden_web_vault\"] = self[\"webpackChunk_bitwarden_web_vault\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","// module cache are used so entry inlining is disabled\n// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["deferred","leafPrototypes","getProto","next","ClientType","DeviceType","Set","Android","iOS","AndroidAmazon","WindowsDesktop","MacOsDesktop","LinuxDesktop","UWP","WindowsCLI","MacOsCLI","LinuxCLI","EncryptedExportType","EncryptionType","EXPECTED_NUM_PARTS_BY_ENCRYPTION_TYPE","AesCbc256_B64","AesCbc128_HmacSha256_B64","AesCbc256_HmacSha256_B64","Rsa2048_OaepSha256_B64","Rsa2048_OaepSha1_B64","Rsa2048_OaepSha256_HmacSha256_B64","Rsa2048_OaepSha1_HmacSha256_B64","EventSystemUser","EventType","FieldType","FileUploadType","HashPurpose","HtmlStorageLocation","HttpStatusCode","KdfType","PBKDF2_SHA256","constructor","iterations","memory","parallelism","this","KeySuffixOptions","LoginLinkedId","CardLinkedId","IdentityLinkedId","LogLevelType","NativeMessagingVersion","NotificationType","ProductType","ProviderType","SecureNoteType","StorageLocation","ThemeType","UriMatchType","nodeURL","window","Utils","static","inited","isNode","process","release","name","isBrowser","isMobileBrowser","isMobile","isAppleMobileBrowser","isAppleMobile","global","g","self","str","Uint8Array","Buffer","from","binaryString","atob","bytes","length","i","charCodeAt","fromB64ToArray","fromUrlB64ToB64","parseInt","substr","strUtf8","unescape","encodeURIComponent","arr","buffer","toString","binary","byteLength","String","fromCharCode","btoa","fromB64toUrlB64","fromBufferToB64","b64Str","replace","encodedString","apply","decodeURIComponent","escape","Array","prototype","map","call","x","slice","join","urlB64Str","output","Error","fromB64ToUtf8","utfStr","fromBufferToUrlB64","fromUtf8ToArray","c","r","Math","random","id","RegExp","test","uriString","isNullOrWhitespace","trim","startsWith","indexOf","hostname","validHosts","url","getUrl","host","parseResult","allowPrivateDomains","isIp","domain","search","Map","split","forEach","pair","parts","set","toLowerCase","i18nService","prop","a","b","collator","compare","localeCompare","obj","undefined","target","source","Object","assign","keys","filter","k","Number","isNaN","getUrlObject","s","charAt","toUpperCase","bgColor","threshold","svgTextFill","bgColorHexNums","substring","hash","color","bitwardenContainerService","fromEntries","record","entries","e","destination","denormalizedPath","win","mobile","navigator","userAgent","vendor","opera","match","ms","Promise","resolve","setTimeout","generator","of","pipe","switchMap","targetDate","diffTime","getTime","Date","now","max","floor","hasProtocol","URL","regexpEmojiPresentation","originalMinimumPasswordLength","minimumPasswordLength","DomainMatchBlacklist","init","SymmetricCryptoKey","key","encType","encKey","macKey","keyB64","encKeyB64","macKeyB64","toJSON","arrayBuffer","fromString","ConsoleLogService","isDev","timersMap","debug","message","write","Debug","info","Info","warning","Warning","error","level","console","log","warn","ContainerService","cryptoService","encryptService","attachToGlobal","getCryptoService","getEncryptService","DecryptParameters","WebCryptoFunctionService","crypto","subtle","wasmSupported","checkIfWasmSupported","pbkdf2","password","salt","algorithm","wcLen","passwordBuf","toBuf","pbkdf2Params","toWebCryptoAlgorithm","impKey","importKey","deriveBits","argon2","passwordArr","saltArr","result","pass","time","mem","hashLen","type","ArgonType","Argon2id","unloadRuntime","hkdf","ikm","outputByteSize","hkdfParams","hkdfExpand","prk","infoBuf","infoArr","runningOkmLength","previousT","n","ceil","okm","t","hmac","value","md","md5","create","sha1","valueBytes","toByteString","update","fromByteStringToArray","digest","data","valueBuf","signingAlgorithm","sign","randomBytes","mac1","mac2","arr1","arr2","hmacFast","start","getBytes","compareFast","rand","Uint32Array","createBuffer","putInt32","aesEncrypt","iv","encrypt","aesDecryptFastParameters","mac","p","meta","encKeyByteString","macKeyByteString","decode64","macData","aesDecryptFast","parameters","mode","decipher","createDecipher","toWebCryptoAesMode","options","dataBuffer","finish","val","aesDecrypt","params","decrypt","rsaEncrypt","publicKey","rsaParams","rsaDecrypt","privateKey","rsaExtractPublicKey","impPrivateKey","jwkPrivateKey","exportKey","jwkPublicKeyParams","kty","alg","ext","impPublicKey","aesGenerateKey","bitLength","key1","key2","aesParams","generateKey","rawKey","rsaGenerateKeyPair","modulusLength","publicExponent","keyPair","getRandomValues","buf","encodeUtf8","fromBufferToByteString","WebAssembly","instantiate","module","Module","Instance","EncArrayBuffer","encryptionType","dataBytes","ivBytes","macBytes","encBytes","minimumLength","ENC_TYPE_LENGTH","throwDecryptionError","response","b64","EncString","encryptedStringOrType","initFromData","initFromEncryptedString","encryptedString","encPieces","parseEncryptedString","headerPieces","orgId","decryptedValue","getKeyForDecryption","getContainerService","decryptToUtf8","getOrgKey","getUserKeyWithLegacySupport","EncryptedObject","EncryptServiceImplementation","cryptoFunctionService","logService","logMacFailures","plainValue","plainBuf","encObj","encryptToBytes","encValue","macLen","encString","resolveLegacyKey","fastParams","computedMac","logMacFailed","decryptToBytes","encThing","decryptItems","items","all","item","msg","InitializerKey","CipherType","CipherRepromptType","Domain","buildDomainModel","dataObj","notEncList","hasOwnProperty","objProp","buildDataModel","notEncStringList","decryptObj","viewModel","promises","theProp","then","mapProp","push","AttachmentData","fileName","size","sizeName","CardData","cardholderName","brand","number","expMonth","expYear","code","FieldData","linkedId","IdentityData","title","firstName","middleName","lastName","address1","address2","address3","city","state","postalCode","country","company","email","phone","ssn","username","passportNumber","licenseNumber","Fido2CredentialData","credentialId","keyType","keyAlgorithm","keyCurve","keyValue","rpId","userHandle","counter","rpName","userDisplayName","discoverable","creationDate","LoginUriData","uri","LoginData","passwordRevisionDate","totp","autofillOnPageLoad","uris","u","fido2Credentials","PasswordHistoryData","lastUsedDate","SecureNoteData","CipherData","collectionIds","organizationId","folderId","edit","viewPassword","organizationUseTotp","favorite","revisionDate","notes","deletedDate","reprompt","Login","login","SecureNote","secureNote","Card","card","Identity","identity","fields","f","attachments","passwordHistory","ph","AttachmentView","fileSize","fromJSON","LinkedMetadata","propertyKey","_i18nKey","i18nKey","linkedFieldOption","linkedFieldOptions","ItemView","CardView","_brand","_number","_subTitle","maskedCode","repeat","maskedNumber","subTitle","count","expiration","exp","formatYear","year","cardNum","re","CardholderName","ExpMonth","ExpYear","Code","Brand","FieldView","newField","showValue","showCount","maskedValue","IdentityView","super","_firstName","_lastName","fullName","fullAddress","address","fullAddressPart2","addressPart2","Title","MiddleName","Address1","Address2","Address3","City","State","PostalCode","Country","Company","Email","Phone","Ssn","Username","PassportNumber","LicenseNumber","FirstName","LastName","FullName","Fido2CredentialView","CanLaunchWhitelist","SafeUrls","LoginUriView","_uri","_domain","_hostname","_host","_canLaunch","getDomain","RegularExpression","getHostname","getHost","hostnameOrUri","hostOrUri","isWebsite","canLaunch","launchUri","matchesUri","targetUri","equivalentDomains","defaultUriMatch","matchType","targetDomain","matchDomains","add","matchesDomain","Host","urlHost","Exact","StartsWith","Never","has","domainUrlHost","get","LoginView","l","hasUris","maskedPassword","some","hasTotp","find","hasFido2Credentials","Password","PasswordHistoryView","SecureNoteView","CipherView","initializerKey","None","localData","hasPasswordHistory","hasAttachments","hasOldAttachments","hasFields","passwordRevisionDisplayDate","isDeleted","linkedFieldValue","linkedFieldI18nKey","view","Attachment","decryptAttachmentKey","decValue","toAttachmentData","toCardData","Field","toFieldData","toIdentityData","Fido2Credential","toFido2CredentialData","toISOString","LoginUri","toLoginUriData","toLoginData","toPasswordHistoryData","toSecureNoteData","Cipher","model","reduce","promise","attachment","decAttachment","field","decField","decPh","toCipherData","classInitializers","workerApi","addEventListener","event","request","JSON","parse","jsonItem","className","postMessage","stringify","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","loaded","__webpack_modules__","m","__webpack_exports__","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","getPrototypeOf","__esModule","ns","def","current","getOwnPropertyNames","d","definition","o","defineProperty","enumerable","chunkId","miniCssF","globalThis","Function","Symbol","toStringTag","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","installedChunks","chunkLoadingGlobal","parentChunkLoadingFunction","bind","moreModules","runtime","pop"],"sourceRoot":""}