{"version":3,"file":"509.df5b665a70ccd15c4a0b.js","mappings":"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","sources":["webpack://@bitwarden/web-vault/./src/app/billing/organizations/organization-billing-history-view.component.html","webpack://@bitwarden/web-vault/./src/app/billing/organizations/organization-billing-history-view.component.ts","webpack://@bitwarden/web-vault/./src/app/billing/organizations/organization-billing-tab.component.html","webpack://@bitwarden/web-vault/./src/app/billing/organizations/organization-billing-tab.component.ts","webpack://@bitwarden/web-vault/./src/app/billing/organizations/billing-sync-api-key.component.html","webpack://@bitwarden/web-vault/./src/app/billing/organizations/billing-sync-api-key.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/billing/models/request/organization-subscription-update.request.ts","webpack://@bitwarden/web-vault/./src/app/billing/organizations/adjust-subscription.component.ts","webpack://@bitwarden/web-vault/./src/app/billing/organizations/adjust-subscription.component.html","webpack://@bitwarden/web-vault/./src/app/billing/organizations/change-plan.component.ts","webpack://@bitwarden/web-vault/./src/app/billing/organizations/change-plan.component.html","webpack://@bitwarden/web-vault/./src/app/billing/organizations/download-license.component.ts","webpack://@bitwarden/web-vault/./src/app/billing/organizations/download-license.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/billing/models/request/organization-sm-subscription-update.request.ts","webpack://@bitwarden/web-vault/./src/app/billing/organizations/sm-adjust-subscription.component.html","webpack://@bitwarden/web-vault/./src/app/billing/organizations/sm-adjust-subscription.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/billing/models/request/sm-subscribe.request.ts","webpack://@bitwarden/web-vault/./src/app/billing/organizations/sm-subscribe-standalone.component.html","webpack://@bitwarden/web-vault/./src/app/billing/organizations/sm-subscribe-standalone.component.ts","webpack://@bitwarden/web-vault/./src/app/billing/organizations/subscription-hidden.component.ts","webpack://@bitwarden/web-vault/./src/app/billing/organizations/organization-subscription-cloud.component.html","webpack://@bitwarden/web-vault/./src/app/billing/organizations/organization-subscription-cloud.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/billing/models/api/billing-sync-config.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/billing/models/view/self-hosted-organization-subscription.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/billing/models/request/billing-sync-config.request.ts","webpack://@bitwarden/web-vault/./src/app/billing/organizations/billing-sync-key.component.ts","webpack://@bitwarden/web-vault/./src/app/billing/organizations/billing-sync-key.component.html","webpack://@bitwarden/web-vault/./src/app/billing/organizations/organization-subscription-selfhost.component.html","webpack://@bitwarden/web-vault/./src/app/billing/organizations/organization-subscription-selfhost.component.ts","webpack://@bitwarden/web-vault/./src/app/billing/organizations/organization-billing-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/billing/organizations/organization-billing.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/progress/progress.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/progress/progress.component.ts"],"sourcesContent":["<div class=\"d-flex page-header\">\n  <h1>\n    {{ \"billingHistory\" | i18n }}\n  </h1>\n  <button\n    type=\"button\"\n    bitButton\n    buttonType=\"secondary\"\n    (click)=\"load()\"\n    class=\"tw-ml-auto\"\n    *ngIf=\"firstLoaded\"\n    [disabled]=\"loading\"\n  >\n    <i class=\"bwi bwi-refresh bwi-fw\" [ngClass]=\"{ 'bwi-spin': loading }\" aria-hidden=\"true\"></i>\n    {{ \"refresh\" | i18n }}\n  </button>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"billing\">\n  <app-billing-history [billing]=\"billing\"></app-billing-history>\n</ng-container>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { concatMap, Subject, takeUntil } from \"rxjs\";\n\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/admin-console/abstractions/organization/organization-api.service.abstraction\";\nimport { BillingHistoryResponse } from \"@bitwarden/common/billing/models/response/billing-history.response\";\n\n@Component({\n  templateUrl: \"organization-billing-history-view.component.html\",\n})\nexport class OrgBillingHistoryViewComponent implements OnInit, OnDestroy {\n  loading = false;\n  firstLoaded = false;\n  billing: BillingHistoryResponse;\n  organizationId: string;\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private organizationApiService: OrganizationApiServiceAbstraction,\n    private route: ActivatedRoute\n  ) {}\n\n  async ngOnInit() {\n    this.route.params\n      .pipe(\n        concatMap(async (params) => {\n          this.organizationId = params.organizationId;\n          await this.load();\n          this.firstLoaded = true;\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n    this.loading = true;\n    this.billing = await this.organizationApiService.getBilling(this.organizationId);\n    this.loading = false;\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\">\n        <div class=\"card-header\">{{ \"billing\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a routerLink=\"subscription\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"subscription\" | i18n }}\n          </a>\n          <a\n            *ngIf=\"showPaymentAndHistory$ | async\"\n            routerLink=\"payment-method\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n          >\n            {{ \"paymentMethod\" | i18n }}\n          </a>\n          <a\n            *ngIf=\"showPaymentAndHistory$ | async\"\n            routerLink=\"history\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n          >\n            {{ \"billingHistory\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { map, Observable, switchMap } from \"rxjs\";\n\nimport { OrganizationService } from \"@bitwarden/common/admin-console/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/platform/abstractions/platform-utils.service\";\n\n@Component({\n  templateUrl: \"organization-billing-tab.component.html\",\n})\nexport class OrganizationBillingTabComponent implements OnInit {\n  showPaymentAndHistory$: Observable<boolean>;\n\n  constructor(\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  ngOnInit() {\n    this.showPaymentAndHistory$ = this.route.params.pipe(\n      switchMap((params) => this.organizationService.get$(params.organizationId)),\n      map(\n        (org) =>\n          !this.platformUtilsService.isSelfHost() &&\n          org.canViewBillingHistory &&\n          org.canEditPaymentMethods\n      )\n    );\n  }\n}\n","<form [formGroup]=\"formGroup\" [bitSubmit]=\"submit\">\n  <bit-dialog>\n    <h1 bitDialogTitle>\n      {{ (hasBillingToken ? \"viewBillingSyncToken\" : \"generateBillingSyncToken\") | i18n }}\n    </h1>\n    <div bitDialogContent>\n      <app-user-verification formControlName=\"verification\" *ngIf=\"!clientSecret\">\n      </app-user-verification>\n\n      <ng-container *ngIf=\"clientSecret && showRotateScreen\">\n        <p>{{ \"rotateBillingSyncTokenTitle\" | i18n }}</p>\n        <bit-callout type=\"warning\">\n          {{ \"rotateBillingSyncTokenWarning\" | i18n }}\n        </bit-callout>\n      </ng-container>\n\n      <div *ngIf=\"clientSecret && !showRotateScreen\">\n        <p>{{ \"copyPasteBillingSync\" | i18n }}</p>\n        <bit-form-field>\n          <bit-label>{{ \"billingSyncKey\" | i18n }}</bit-label>\n          <input\n            bitInput\n            id=\"clientSecret\"\n            type=\"text\"\n            [value]=\"clientSecret\"\n            class=\"tw-font-mono\"\n            disabled\n          />\n          <button\n            bitIconButton=\"bwi-clone\"\n            bitSuffix\n            type=\"button\"\n            [appCopyClick]=\"clientSecret\"\n            [appA11yTitle]=\"'copyValue' | i18n\"\n          ></button>\n        </bit-form-field>\n        <div class=\"tw-mt-2 tw-text-sm tw-text-muted\" *ngIf=\"showLastSyncText\">\n          <b class=\"tw-font-semibold\">{{ \"lastSync\" | i18n }}:</b>\n          {{ lastSyncDate | date : \"medium\" }}\n        </div>\n        <div class=\"tw-mt-2 tw-text-sm tw-text-danger\" *ngIf=\"showAwaitingSyncText\">\n          <i class=\"bwi bwi-error\"></i>\n          {{\n            (daysBetween === 1 ? \"awaitingSyncSingular\" : \"awaitingSyncPlural\") | i18n : daysBetween\n          }}\n        </div>\n      </div>\n    </div>\n    <ng-container bitDialogFooter>\n      <button\n        type=\"submit\"\n        bitButton\n        bitFormButton\n        buttonType=\"primary\"\n        *ngIf=\"!clientSecret || showRotateScreen\"\n      >\n        {{ submitButtonText }}\n      </button>\n      <button bitButton bitDialogClose type=\"button\" *ngIf=\"!showRotateScreen\">\n        {{ \"close\" | i18n }}\n      </button>\n      <button bitButton type=\"button\" *ngIf=\"showRotateScreen\" (click)=\"cancelRotate()\">\n        {{ \"cancel\" | i18n }}\n      </button>\n      <button\n        bitButton\n        type=\"button\"\n        *ngIf=\"clientSecret && !showRotateScreen\"\n        (click)=\"rotateToken()\"\n      >\n        {{ \"rotateToken\" | i18n }}\n      </button>\n    </ng-container>\n  </bit-dialog>\n</form>\n","import { DIALOG_DATA } from \"@angular/cdk/dialog\";\nimport { Component, Inject } from \"@angular/core\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/admin-console/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationApiKeyType } from \"@bitwarden/common/admin-console/enums\";\nimport { OrganizationApiKeyRequest } from \"@bitwarden/common/admin-console/models/request/organization-api-key.request\";\nimport { UserVerificationService } from \"@bitwarden/common/auth/abstractions/user-verification/user-verification.service.abstraction\";\nimport { ApiKeyResponse } from \"@bitwarden/common/auth/models/response/api-key.response\";\nimport { I18nService } from \"@bitwarden/common/platform/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/platform/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/platform/abstractions/platform-utils.service\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\nimport { DialogService } from \"@bitwarden/components\";\n\nexport interface BillingSyncApiModalData {\n  organizationId: string;\n  hasBillingToken: boolean;\n}\n\n@Component({\n  templateUrl: \"billing-sync-api-key.component.html\",\n})\nexport class BillingSyncApiKeyComponent {\n  protected organizationId: string;\n  protected hasBillingToken: boolean;\n\n  protected formGroup = new FormGroup({\n    verification: new FormControl<Verification>(null, Validators.required),\n  });\n\n  showRotateScreen: boolean;\n  clientSecret?: string;\n  keyRevisionDate?: Date;\n  lastSyncDate?: Date;\n\n  constructor(\n    @Inject(DIALOG_DATA) protected data: BillingSyncApiModalData,\n    private userVerificationService: UserVerificationService,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private organizationApiService: OrganizationApiServiceAbstraction,\n    private logService: LogService\n  ) {\n    this.organizationId = data.organizationId;\n    this.hasBillingToken = data.hasBillingToken;\n  }\n\n  copy() {\n    this.platformUtilsService.copyToClipboard(this.clientSecret);\n  }\n\n  submit = async () => {\n    try {\n      const request = this.userVerificationService\n        .buildRequest(this.formGroup.value.verification, OrganizationApiKeyRequest)\n        .then((request) => {\n          request.type = OrganizationApiKeyType.BillingSync;\n          return request;\n        });\n\n      if (this.showRotateScreen) {\n        const response = await request.then((request) => {\n          return this.organizationApiService.rotateApiKey(this.organizationId, request);\n        });\n        await this.load(response);\n        this.showRotateScreen = false;\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"billingSyncApiKeyRotated\")\n        );\n      } else {\n        const response = await request.then((request) => {\n          return this.organizationApiService.getOrCreateApiKey(this.organizationId, request);\n        });\n        await this.load(response);\n      }\n    } catch (e) {\n      this.logService.error(e);\n      throw e;\n    }\n  };\n\n  async load(response: ApiKeyResponse) {\n    this.clientSecret = response.apiKey;\n    this.keyRevisionDate = response.revisionDate;\n    this.hasBillingToken = true;\n    const syncStatus = await this.apiService.getSponsorshipSyncStatus(this.organizationId);\n    this.lastSyncDate = syncStatus.lastSyncDate;\n  }\n\n  cancelRotate() {\n    this.showRotateScreen = false;\n  }\n\n  rotateToken() {\n    this.showRotateScreen = true;\n  }\n\n  private dayDiff(date1: Date, date2: Date): number {\n    const diffTime = Math.abs(date2.getTime() - date1.getTime());\n    return Math.round(diffTime / (1000 * 60 * 60 * 24));\n  }\n\n  get submitButtonText(): string {\n    if (this.showRotateScreen) {\n      return this.i18nService.t(\"rotateToken\");\n    }\n\n    return this.i18nService.t(this.hasBillingToken ? \"continue\" : \"generateToken\");\n  }\n\n  get showLastSyncText(): boolean {\n    // If the keyRevisionDate is later than the lastSyncDate we need to show\n    // a warning that they need to put the billing sync key in their self hosted install\n    return this.lastSyncDate && this.lastSyncDate > this.keyRevisionDate;\n  }\n\n  get showAwaitingSyncText(): boolean {\n    return this.lastSyncDate && this.lastSyncDate <= this.keyRevisionDate;\n  }\n\n  get daysBetween(): number {\n    return this.dayDiff(this.keyRevisionDate, new Date());\n  }\n\n  static open(dialogService: DialogService, data: BillingSyncApiModalData) {\n    return dialogService.open(BillingSyncApiKeyComponent, { data });\n  }\n}\n","export class OrganizationSubscriptionUpdateRequest {\n  /**\n   * The number of seats to add or remove from the subscription.\n   * Applies to both PM and SM request types.\n   */\n  seatAdjustment: number;\n\n  /**\n   * The maximum number of seats that can be auto-scaled for the subscription.\n   * Applies to both PM and SM request types.\n   */\n  maxAutoscaleSeats?: number;\n\n  /**\n   * Build a subscription update request for the Password Manager product type.\n   * @param seatAdjustment - The number of seats to add or remove from the subscription.\n   * @param maxAutoscaleSeats - The maximum number of seats that can be auto-scaled for the subscription.\n   */\n  constructor(seatAdjustment: number, maxAutoscaleSeats?: number) {\n    this.seatAdjustment = seatAdjustment;\n    this.maxAutoscaleSeats = maxAutoscaleSeats;\n  }\n}\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/admin-console/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationSubscriptionUpdateRequest } from \"@bitwarden/common/billing/models/request/organization-subscription-update.request\";\nimport { I18nService } from \"@bitwarden/common/platform/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/platform/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/platform/abstractions/platform-utils.service\";\n\n@Component({\n  selector: \"app-adjust-subscription\",\n  templateUrl: \"adjust-subscription.component.html\",\n})\nexport class AdjustSubscription {\n  @Input() organizationId: string;\n  @Input() maxAutoscaleSeats: number;\n  @Input() currentSeatCount: number;\n  @Input() seatPrice = 0;\n  @Input() interval = \"year\";\n  @Output() onAdjusted = new EventEmitter();\n\n  formPromise: Promise<void>;\n  limitSubscription: boolean;\n  newSeatCount: number;\n  newMaxSeats: number;\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  ngOnInit() {\n    this.limitSubscription = this.maxAutoscaleSeats != null;\n    this.newSeatCount = this.currentSeatCount;\n    this.newMaxSeats = this.maxAutoscaleSeats;\n  }\n\n  async submit() {\n    try {\n      const request = new OrganizationSubscriptionUpdateRequest(\n        this.additionalSeatCount,\n        this.newMaxSeats\n      );\n      this.formPromise = this.organizationApiService.updatePasswordManagerSeats(\n        this.organizationId,\n        request\n      );\n\n      await this.formPromise;\n\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"subscriptionUpdated\")\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.onAdjusted.emit();\n  }\n\n  limitSubscriptionChanged() {\n    if (!this.limitSubscription) {\n      this.newMaxSeats = null;\n    }\n  }\n\n  get additionalSeatCount(): number {\n    return this.newSeatCount ? this.newSeatCount - this.currentSeatCount : 0;\n  }\n\n  get additionalMaxSeatCount(): number {\n    return this.newMaxSeats ? this.newMaxSeats - this.currentSeatCount : 0;\n  }\n\n  get adjustedSeatTotal(): number {\n    return this.additionalSeatCount * this.seatPrice;\n  }\n\n  get maxSeatTotal(): number {\n    return this.additionalMaxSeatCount * this.seatPrice;\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div>\n    <div class=\"row\">\n      <div class=\"form-group col-8\">\n        <label for=\"newSeatCount\">{{ \"subscriptionSeats\" | i18n }}</label>\n        <input\n          id=\"newSeatCount\"\n          class=\"form-control\"\n          type=\"number\"\n          name=\"NewSeatCount\"\n          [(ngModel)]=\"newSeatCount\"\n          min=\"0\"\n          step=\"1\"\n          required\n        />\n        <small class=\"d-block text-muted mb-4\">\n          <strong>{{ \"total\" | i18n }}:</strong> {{ additionalSeatCount || 0 }} &times;\n          {{ seatPrice | currency : \"$\" }} = {{ adjustedSeatTotal | currency : \"$\" }} /\n          {{ interval | i18n }}\n        </small>\n      </div>\n    </div>\n    <div class=\"row mb-4\">\n      <div class=\"form-group col-sm\">\n        <div class=\"form-check\">\n          <input\n            id=\"limitSubscription\"\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            name=\"LimitSubscription\"\n            [(ngModel)]=\"limitSubscription\"\n            (change)=\"limitSubscriptionChanged()\"\n          />\n          <label for=\"limitSubscription\">{{ \"limitSubscription\" | i18n }}</label>\n        </div>\n        <small class=\"d-block text-muted\">{{ \"limitSubscriptionDesc\" | i18n }}</small>\n      </div>\n    </div>\n    <div class=\"row mb-4\" [hidden]=\"!limitSubscription\">\n      <div class=\"form-group col-sm\">\n        <label for=\"maxAutoscaleSeats\">{{ \"maxSeatLimit\" | i18n }}</label>\n        <input\n          id=\"maxAutoscaleSeats\"\n          class=\"form-control col-8\"\n          type=\"number\"\n          name=\"MaxAutoscaleSeats\"\n          [(ngModel)]=\"newMaxSeats\"\n          [min]=\"newSeatCount == null ? 1 : newSeatCount\"\n          step=\"1\"\n          [required]=\"limitSubscription\"\n        />\n        <small class=\"d-block text-muted\">\n          <strong>{{ \"maxSeatCost\" | i18n }}:</strong> {{ additionalMaxSeatCount || 0 }} &times;\n          {{ seatPrice | currency : \"$\" }} = {{ maxSeatTotal | currency : \"$\" }} /\n          {{ interval | i18n }}\n        </small>\n      </div>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"save\" | i18n }}</span>\n    </button>\n  </div>\n</form>\n<app-payment [showMethods]=\"false\"></app-payment>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { PlanType } from \"@bitwarden/common/billing/enums\";\nimport { ProductType } from \"@bitwarden/common/enums\";\nimport { LogService } from \"@bitwarden/common/platform/abstractions/log.service\";\n\n@Component({\n  selector: \"app-change-plan\",\n  templateUrl: \"change-plan.component.html\",\n})\nexport class ChangePlanComponent {\n  @Input() organizationId: string;\n  @Output() onChanged = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  formPromise: Promise<any>;\n  defaultUpgradePlan: PlanType = PlanType.FamiliesAnnually;\n  defaultUpgradeProduct: ProductType = ProductType.Families;\n\n  constructor(private logService: LogService) {}\n\n  async submit() {\n    try {\n      this.onChanged.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n}\n","<div class=\"card card-org-plans\">\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h2 class=\"card-body-header\">{{ \"changeBillingPlan\" | i18n }}</h2>\n    <p class=\"mb-0\">{{ \"changeBillingPlanUpgrade\" | i18n }}</p>\n    <app-organization-plans\n      [showFree]=\"false\"\n      [showCancel]=\"true\"\n      [plan]=\"defaultUpgradePlan\"\n      [product]=\"defaultUpgradeProduct\"\n      [organizationId]=\"organizationId\"\n      (onCanceled)=\"cancel()\"\n    >\n    </app-organization-plans>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/admin-console/abstractions/organization/organization-api.service.abstraction\";\nimport { FileDownloadService } from \"@bitwarden/common/platform/abstractions/file-download/file-download.service\";\nimport { LogService } from \"@bitwarden/common/platform/abstractions/log.service\";\n\n@Component({\n  selector: \"app-download-license\",\n  templateUrl: \"download-license.component.html\",\n})\nexport class DownloadLicenseComponent {\n  @Input() organizationId: string;\n  @Output() onDownloaded = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  installationId: string;\n  formPromise: Promise<unknown>;\n\n  constructor(\n    private fileDownloadService: FileDownloadService,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async submit() {\n    if (this.installationId == null || this.installationId === \"\") {\n      return;\n    }\n\n    try {\n      this.formPromise = this.organizationApiService.getLicense(\n        this.organizationId,\n        this.installationId\n      );\n      const license = await this.formPromise;\n      const licenseString = JSON.stringify(license, null, 2);\n      this.fileDownloadService.download({\n        fileName: \"bitwarden_organization_license.json\",\n        blobData: licenseString,\n      });\n      this.onDownloaded.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h3 class=\"card-body-header\">{{ \"downloadLicense\" | i18n }}</h3>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <div class=\"d-flex\">\n          <label for=\"installationId\">{{ \"enterInstallationId\" | i18n }}</label>\n          <a\n            class=\"ml-auto\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/licensing-on-premise/#organization-account-sharing\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </div>\n        <input\n          id=\"installationId\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"InstallationId\"\n          [(ngModel)]=\"installationId\"\n          required\n        />\n      </div>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n</form>\n","export class OrganizationSmSubscriptionUpdateRequest {\n  /**\n   * The number of seats to add or remove from the subscription.\n   */\n  seatAdjustment: number;\n\n  /**\n   * The maximum number of seats that can be auto-scaled for the subscription.\n   */\n  maxAutoscaleSeats?: number;\n\n  /**\n   * The number of additional service accounts to add or remove from the subscription.\n   */\n  serviceAccountAdjustment: number;\n\n  /**\n   * The maximum number of additional service accounts that can be auto-scaled for the subscription.\n   */\n  maxAutoscaleServiceAccounts?: number;\n}\n","<form [formGroup]=\"formGroup\" [bitSubmit]=\"submit\">\n  <bit-form-field class=\"tw-w-2/3\">\n    <bit-label>{{ \"subscriptionSeats\" | i18n }}</bit-label>\n    <input bitInput id=\"smSeatCount\" formControlName=\"seatCount\" type=\"number\" step=\"1\" min=\"1\" />\n    <bit-hint>\n      <strong>{{ \"total\" | i18n }}:</strong>\n      {{ formGroup.value.seatCount || 0 }} &times; {{ options.seatPrice | currency : \"$\" }} =\n      {{ seatTotalCost | currency : \"$\" }} / {{ options.interval | i18n }}\n    </bit-hint>\n  </bit-form-field>\n  <bit-form-control>\n    <bit-label>{{ \"limitSubscription\" | i18n }}</bit-label>\n    <input type=\"checkbox\" bitCheckbox id=\"limitSmSeats\" formControlName=\"limitSeats\" />\n    <bit-hint>\n      {{ \"limitSmSubscriptionDesc\" | i18n }}\n    </bit-hint>\n  </bit-form-control>\n  <bit-form-field class=\"tw-w-2/3\" *ngIf=\"formGroup.value.limitSeats\">\n    <bit-label>{{ \"maxSeatLimit\" | i18n }}</bit-label>\n    <input\n      bitInput\n      id=\"smSeatLimit\"\n      formControlName=\"maxAutoscaleSeats\"\n      type=\"number\"\n      step=\"1\"\n      [min]=\"formGroup.value.seatCount\"\n    />\n    <bit-hint>\n      <strong>{{ \"maxSeatCost\" | i18n }}:</strong>\n      {{ formGroup.value.maxAutoscaleSeats || 0 }} &times;\n      {{ options.seatPrice | currency : \"$\" }} = {{ maxSeatTotalCost | currency : \"$\" }} /\n      {{ options.interval | i18n }}\n    </bit-hint>\n  </bit-form-field>\n  <bit-form-field class=\"tw-w-2/3\">\n    <bit-label>{{ \"additionalServiceAccounts\" | i18n }}</bit-label>\n    <input\n      bitInput\n      id=\"additionalServiceAccountCount\"\n      formControlName=\"additionalServiceAccounts\"\n      type=\"number\"\n      step=\"1\"\n      min=\"0\"\n    />\n    <bit-hint>\n      <div>\n        {{ \"includedServiceAccounts\" | i18n : options.baseServiceAccountCount }}\n        {{ \"addAdditionalServiceAccounts\" | i18n : (monthlyServiceAccountPrice | currency : \"$\") }}\n      </div>\n      <div>\n        <strong>{{ \"total\" | i18n }}:</strong>\n        {{ formGroup.value.additionalServiceAccounts || 0 }} &times;\n        {{ options.additionalServiceAccountPrice | currency : \"$\" }} =\n        {{ serviceAccountTotalCost | currency : \"$\" }} / {{ options.interval | i18n }}\n      </div>\n    </bit-hint>\n  </bit-form-field>\n  <bit-form-control>\n    <bit-label>{{ \"limitServiceAccounts\" | i18n }}</bit-label>\n    <input\n      type=\"checkbox\"\n      bitCheckbox\n      id=\"limitServiceAccounts\"\n      formControlName=\"limitServiceAccounts\"\n    />\n    <bit-hint>\n      {{ \"limitServiceAccountsDesc\" | i18n }}\n    </bit-hint>\n  </bit-form-control>\n  <bit-form-field class=\"tw-w-2/3\" *ngIf=\"formGroup.value.limitServiceAccounts\">\n    <bit-label>{{ \"serviceAccountLimit\" | i18n }}</bit-label>\n    <input\n      bitInput\n      id=\"additionalServiceAccountLimit\"\n      formControlName=\"maxAutoscaleServiceAccounts\"\n      type=\"number\"\n      step=\"1\"\n      [min]=\"formGroup.value.additionalServiceAccounts\"\n    />\n    <bit-hint>\n      <div>\n        {{ \"includedServiceAccounts\" | i18n : options.baseServiceAccountCount }}\n      </div>\n      <strong>{{ \"maxServiceAccountCost\" | i18n }}:</strong>\n      {{ maxAdditionalServiceAccounts }} &times;\n      {{ options.additionalServiceAccountPrice | currency : \"$\" }} =\n      {{ maxServiceAccountTotalCost | currency : \"$\" }} / {{ options.interval | i18n }}\n    </bit-hint>\n  </bit-form-field>\n  <button type=\"submit\" bitButton buttonType=\"primary\" bitFormButton>\n    {{ \"save\" | i18n }}\n  </button>\n  <bit-error-summary [formGroup]=\"formGroup\" class=\"tw-mt-2\"></bit-error-summary>\n</form>\n","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from \"@angular/core\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/admin-console/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationSmSubscriptionUpdateRequest } from \"@bitwarden/common/billing/models/request/organization-sm-subscription-update.request\";\nimport { I18nService } from \"@bitwarden/common/platform/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/platform/abstractions/platform-utils.service\";\n\nexport interface SecretsManagerSubscriptionOptions {\n  interval: \"year\" | \"month\";\n\n  /**\n   * The current number of seats the organization subscribes to.\n   */\n  seatCount: number;\n\n  /**\n   * Optional auto-scaling limit for the number of seats the organization can subscribe to.\n   */\n  maxAutoscaleSeats: number;\n\n  /**\n   * The price per seat for the subscription.\n   */\n  seatPrice: number;\n\n  /**\n   * The number of service accounts that are included in the base subscription.\n   */\n  baseServiceAccountCount: number;\n\n  /**\n   * The current number of additional service accounts the organization subscribes to.\n   */\n  additionalServiceAccounts: number;\n\n  /**\n   * Optional auto-scaling limit for the number of additional service accounts the organization can subscribe to.\n   */\n  maxAutoscaleServiceAccounts: number;\n\n  /**\n   * The price per additional service account for the subscription.\n   */\n  additionalServiceAccountPrice: number;\n}\n\n@Component({\n  selector: \"app-sm-adjust-subscription\",\n  templateUrl: \"sm-adjust-subscription.component.html\",\n})\nexport class SecretsManagerAdjustSubscriptionComponent implements OnInit, OnDestroy {\n  @Input() organizationId: string;\n  @Input() options: SecretsManagerSubscriptionOptions;\n  @Output() onAdjusted = new EventEmitter();\n\n  private destroy$ = new Subject<void>();\n\n  formGroup = this.formBuilder.group({\n    seatCount: [0, [Validators.required, Validators.min(1)]],\n    limitSeats: [false],\n    maxAutoscaleSeats: [null as number | null],\n    additionalServiceAccounts: [0, [Validators.required, Validators.min(0)]],\n    limitServiceAccounts: [false],\n    maxAutoscaleServiceAccounts: [null as number | null],\n  });\n\n  get monthlyServiceAccountPrice(): number {\n    return this.options.interval == \"month\"\n      ? this.options.additionalServiceAccountPrice\n      : this.options.additionalServiceAccountPrice / 12;\n  }\n\n  get serviceAccountTotalCost(): number {\n    return Math.abs(\n      this.formGroup.value.additionalServiceAccounts * this.options.additionalServiceAccountPrice\n    );\n  }\n\n  get seatTotalCost(): number {\n    return Math.abs(this.formGroup.value.seatCount * this.options.seatPrice);\n  }\n\n  get maxAdditionalServiceAccounts(): number {\n    const maxTotalServiceAccounts = this.formGroup.value.maxAutoscaleServiceAccounts ?? 0;\n    return Math.max(0, maxTotalServiceAccounts - this.options.baseServiceAccountCount);\n  }\n\n  get maxServiceAccountTotalCost(): number {\n    return this.maxAdditionalServiceAccounts * this.options.additionalServiceAccountPrice;\n  }\n\n  get maxSeatTotalCost(): number {\n    return Math.abs((this.formGroup.value.maxAutoscaleSeats ?? 0) * this.options.seatPrice);\n  }\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private organizationApiService: OrganizationApiServiceAbstraction,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  ngOnInit() {\n    this.formGroup.valueChanges.pipe(takeUntil(this.destroy$)).subscribe((value) => {\n      const maxAutoscaleSeatsControl = this.formGroup.controls.maxAutoscaleSeats;\n      const maxAutoscaleServiceAccountsControl =\n        this.formGroup.controls.maxAutoscaleServiceAccounts;\n\n      if (value.limitSeats) {\n        maxAutoscaleSeatsControl.setValidators([Validators.min(value.seatCount)]);\n        maxAutoscaleSeatsControl.enable({ emitEvent: false });\n      } else {\n        maxAutoscaleSeatsControl.disable({ emitEvent: false });\n      }\n\n      if (value.limitServiceAccounts) {\n        maxAutoscaleServiceAccountsControl.setValidators([\n          Validators.min(value.additionalServiceAccounts + this.options.baseServiceAccountCount),\n        ]);\n        maxAutoscaleServiceAccountsControl.enable({ emitEvent: false });\n      } else {\n        maxAutoscaleServiceAccountsControl.disable({ emitEvent: false });\n      }\n    });\n\n    this.formGroup.patchValue({\n      seatCount: this.options.seatCount,\n      maxAutoscaleSeats: this.options.maxAutoscaleSeats,\n      additionalServiceAccounts: this.options.additionalServiceAccounts,\n      maxAutoscaleServiceAccounts: this.options.maxAutoscaleServiceAccounts,\n      limitSeats: this.options.maxAutoscaleSeats != null,\n      limitServiceAccounts: this.options.maxAutoscaleServiceAccounts != null,\n    });\n  }\n\n  submit = async () => {\n    this.formGroup.markAllAsTouched();\n\n    if (this.formGroup.invalid) {\n      return;\n    }\n\n    const request = new OrganizationSmSubscriptionUpdateRequest();\n    request.seatAdjustment = this.formGroup.value.seatCount - this.options.seatCount;\n    request.serviceAccountAdjustment =\n      this.formGroup.value.additionalServiceAccounts - this.options.additionalServiceAccounts;\n    request.maxAutoscaleSeats = this.formGroup.value.limitSeats\n      ? this.formGroup.value.maxAutoscaleSeats\n      : null;\n    request.maxAutoscaleServiceAccounts = this.formGroup.value.limitServiceAccounts\n      ? this.formGroup.value.maxAutoscaleServiceAccounts\n      : null;\n\n    await this.organizationApiService.updateSecretsManagerSubscription(\n      this.organizationId,\n      request\n    );\n\n    await this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"subscriptionUpdated\")\n    );\n\n    this.onAdjusted.emit();\n  };\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","export class SecretsManagerSubscribeRequest {\n  additionalSmSeats: number;\n  additionalServiceAccounts: number;\n}\n","<form [formGroup]=\"formGroup\" [bitSubmit]=\"submit\" *ngIf=\"plan\">\n  <sm-subscribe\n    [formGroup]=\"formGroup\"\n    [selectedPlan]=\"plan\"\n    [upgradeOrganization]=\"false\"\n    [customerDiscount]=\"customerDiscount\"\n    [showSubmitButton]=\"true\"\n  ></sm-subscribe>\n</form>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\n\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/admin-console/abstractions/organization/organization-api.service.abstraction\";\nimport { InternalOrganizationServiceAbstraction } from \"@bitwarden/common/admin-console/abstractions/organization/organization.service.abstraction\";\nimport { OrganizationData } from \"@bitwarden/common/admin-console/models/data/organization.data\";\nimport { Organization } from \"@bitwarden/common/admin-console/models/domain/organization\";\nimport { SecretsManagerSubscribeRequest } from \"@bitwarden/common/billing/models/request/sm-subscribe.request\";\nimport { PlanResponse } from \"@bitwarden/common/billing/models/response/plan.response\";\nimport { BillingCustomerDiscount } from \"@bitwarden/common/billing/models/response/subscription.response\";\nimport { I18nService } from \"@bitwarden/common/platform/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/platform/abstractions/platform-utils.service\";\n\nimport { secretsManagerSubscribeFormFactory } from \"../shared\";\n\n@Component({\n  selector: \"sm-subscribe-standalone\",\n  templateUrl: \"sm-subscribe-standalone.component.html\",\n})\nexport class SecretsManagerSubscribeStandaloneComponent {\n  @Input() plan: PlanResponse;\n  @Input() organization: Organization;\n  @Input() customerDiscount: BillingCustomerDiscount;\n  @Output() onSubscribe = new EventEmitter<void>();\n\n  formGroup = secretsManagerSubscribeFormFactory(this.formBuilder);\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private organizationApiService: OrganizationApiServiceAbstraction,\n    private organizationService: InternalOrganizationServiceAbstraction\n  ) {}\n\n  submit = async () => {\n    const request = new SecretsManagerSubscribeRequest();\n    request.additionalSmSeats = this.plan.hasAdditionalSeatsOption\n      ? this.formGroup.value.userSeats\n      : 0;\n    request.additionalServiceAccounts = this.plan.hasAdditionalServiceAccountOption\n      ? this.formGroup.value.additionalServiceAccounts\n      : 0;\n\n    const profileOrganization = await this.organizationApiService.subscribeToSecretsManager(\n      this.organization.id,\n      request\n    );\n    const organizationData = new OrganizationData(profileOrganization, {\n      isMember: this.organization.isMember,\n      isProviderUser: this.organization.isProviderUser,\n    });\n    await this.organizationService.upsert(organizationData);\n\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"subscriptionUpdated\"));\n\n    this.onSubscribe.emit();\n  };\n}\n","import { Component, Input } from \"@angular/core\";\n\nimport { svgIcon } from \"@bitwarden/components\";\n\nconst SubscriptionHiddenIcon = svgIcon`\n<svg width=\"216\" height=\"231\" viewBox=\"0 0 216 231\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path d=\"M133.356 85.6618C133.136 85.43 132.871 85.2457 132.577 85.1198C132.283 84.9939 131.968 84.93 131.648 84.9318H87.8482C87.5289 84.93 87.2113 84.9939 86.9175 85.1198C86.6237 85.2457 86.359 85.43 86.14 85.6618C85.9083 85.8808 85.7239 86.1473 85.598 86.4411C85.4721 86.7349 85.4082 87.0506 85.41 87.37V116.57C85.4192 118.793 85.8499 120.994 86.6802 123.056C87.4705 125.091 88.5326 127.011 89.8375 128.761C91.1789 130.515 92.6808 132.137 94.3233 133.612C95.8472 135.01 97.4532 136.318 99.1304 137.528C100.59 138.565 102.123 139.547 103.729 140.474C105.335 141.401 106.469 142.027 107.131 142.354C107.799 142.682 108.339 142.941 108.741 143.113C109.055 143.264 109.4 143.339 109.748 143.332C110.091 143.337 110.431 143.257 110.737 143.102C111.146 142.923 111.679 142.671 112.354 142.343C113.03 142.014 114.179 141.386 115.756 140.463C117.333 139.539 118.884 138.554 120.355 137.517C122.034 136.306 123.642 134.999 125.169 133.601C126.814 132.128 128.316 130.504 129.655 128.75C130.958 126.998 132.021 125.08 132.813 123.045C133.645 120.983 134.075 118.782 134.083 116.559V87.3591C134.085 87.0415 134.021 86.7276 133.895 86.4356C133.769 86.1436 133.586 85.8808 133.356 85.6618ZM127.71 116.836C127.71 127.421 109.748 136.514 109.748 136.514V91.1879H127.71V116.836Z\" fill=\"rgb(var(--color-secondary-700))\"/>\n  <path d=\"M24.6216 122.3C24.7144 123.4 25.6819 124.217 26.7825 124.125C27.8832 124.032 28.7002 123.064 28.6074 121.964L24.6216 122.3ZM151.501 45.7445C152.57 45.4679 153.213 44.3768 152.936 43.3074L148.429 25.8809C148.152 24.8115 147.061 24.1688 145.992 24.4454C144.922 24.722 144.28 25.8131 144.556 26.8825L148.563 42.3728L133.073 46.3793C132.003 46.6559 131.361 47.747 131.637 48.8164C131.914 49.8858 133.005 50.5285 134.074 50.2519L151.501 45.7445ZM28.6074 121.964C26.6788 99.0874 34.4658 75.5543 51.9661 58.054L49.1377 55.2256C30.7695 73.5938 22.5982 98.2999 24.6216 122.3L28.6074 121.964ZM51.9661 58.054C78.5404 31.4797 119.036 27.3026 149.985 45.5315L152.015 42.0849C119.534 22.9534 77.0327 27.3306 49.1377 55.2256L51.9661 58.054Z\" fill=\"rgb(var(--color-secondary-700))\"/>\n  <path d=\"M67.4747 185.062C66.4089 185.352 65.7801 186.451 66.0701 187.517L70.797 204.885C71.0871 205.951 72.1862 206.58 73.252 206.29C74.3179 205.999 74.9467 204.9 74.6567 203.834L70.455 188.396L85.8934 184.194C86.9592 183.904 87.5881 182.805 87.298 181.739C87.008 180.674 85.9088 180.045 84.843 180.335L67.4747 185.062ZM192.478 100.283C192.286 99.1952 191.248 98.4697 190.16 98.6625C189.072 98.8552 188.347 99.8931 188.54 100.981L192.478 100.283ZM166.138 172.225C139.813 198.55 99.8271 202.897 68.9932 185.255L67.0068 188.727C99.3669 207.242 141.333 202.687 168.966 175.054L166.138 172.225ZM188.54 100.981C192.985 126.07 185.516 152.847 166.138 172.225L168.966 175.054C189.307 154.713 197.142 126.603 192.478 100.283L188.54 100.981Z\" fill=\"rgb(var(--color-secondary-700))\"/>\n  <path d=\"M37.726 108.132C39.283 92.1931 46.1655 76.6765 58.3734 64.4686C75.2893 47.5527 98.5583 40.8618 120.5 44.396\" stroke=\"rgb(var(--color-secondary-700))\" stroke-width=\"2\" stroke-linecap=\"round\"/>\n  <path d=\"M180.595 119.132C179.653 136.119 172.693 152.834 159.717 165.811C144.44 181.088 123.982 188.025 104 186.623\" stroke=\"rgb(var(--color-secondary-700))\" stroke-width=\"2\" stroke-linecap=\"round\"/>\n  <rect x=\"153.5\" y=\"56.1317\" width=\"49\" height=\"34\" rx=\"2.5\" stroke=\"rgb(var(--color-secondary-700))\" stroke-width=\"3\"/>\n  <path d=\"M153.5 63.6317V63.6317C153.5 66.9454 156.186 69.6317 159.5 69.6317H172.509M202.5 63.6317V63.6317C202.5 66.9454 199.814 69.6317 196.5 69.6317H183.491\" stroke=\"rgb(var(--color-secondary-700))\" stroke-width=\"3\"/>\n  <mask id=\"path-8-inside-1_1000_26057\" fill=\"white\">\n    <rect x=\"172\" y=\"65.6317\" width=\"12\" height=\"9\" rx=\"1.25\"/>\n  </mask>\n  <rect x=\"172\" y=\"65.6317\" width=\"12\" height=\"9\" rx=\"1.25\" stroke=\"rgb(var(--color-secondary-700))\" stroke-width=\"6\" mask=\"url(#path-8-inside-1_1000_26057)\"/>\n  <path d=\"M187 54.6317C187 54.6317 187 53.6317 187 52.6317C187 51.6317 186.053 50.6317 185.105 50.6317C184.158 50.6317 171.842 50.6317 170.895 50.6317C169.947 50.6317 169 51.6317 169 52.6317C169 53.6317 169 54.6317 169 54.6317\" stroke=\"rgb(var(--color-secondary-700))\" stroke-width=\"3\"/>\n  <circle cx=\"48\" cy=\"141\" r=\"10.5\" fill=\"rgb(var(--color-background))\" stroke=\"rgb(var(--color-secondary-700))\" stroke-width=\"3\"/>\n  <path d=\"M64.9935 168.5H64.9126H64.8318H64.7512H64.6708H64.5905H64.5104H64.4304H64.3506H64.2709H64.1914H64.1121H64.0329H63.9538H63.8749H63.7962H63.7176H63.6392H63.5609H63.4828H63.4048H63.3269H63.2492H63.1717H63.0943H63.017H62.9399H62.8629H62.7861H62.7094H62.6329H62.5565H62.4802H62.4041H62.3281H62.2523H62.1766H62.101H62.0256H61.9503H61.8751H61.8001H61.7252H61.6504H61.5758H61.5013H61.4269H61.3527H61.2786H61.2046H61.1308H61.0571H60.9835H60.91H60.8367H60.7635H60.6904H60.6175H60.5446H60.4719H60.3993H60.3269H60.2545H60.1823H60.1102H60.0382H59.9664H59.8946H59.823H59.7515H59.6801H59.6088H59.5376H59.4666H59.3956H59.3248H59.2541H59.1835H59.113H59.0426H58.9724H58.9022H58.8322H58.7622H58.6924H58.6226H58.553H58.4835H58.4141H58.3448H58.2756H58.2065H58.1375H58.0686H57.9998H57.9311H57.8625H57.794H57.7256H57.6572H57.589H57.5209H57.4529H57.385H57.3172H57.2494H57.1818H57.1142H57.0468H56.9794H56.9121H56.8449H56.7779H56.7108H56.6439H56.5771H56.5103H56.4437H56.3771H56.3106H56.2442H56.1779H56.1117H56.0455H55.9794H55.9134H55.8475H55.7817H55.7159H55.6502H55.5846H55.5191H55.4537H55.3883H55.323H55.2578H55.1926H55.1275H55.0625H54.9976H54.9328H54.868H54.8032H54.7386H54.674H54.6095H54.5451H54.4807H54.4164H54.3521H54.2879H54.2238H54.1598H54.0958H54.0318H53.968H53.9042H53.8404H53.7767H53.7131H53.6495H53.586H53.5226H53.4592H53.3958H53.3325H53.2693H53.2061H53.143H53.0799H53.0169H52.9539H52.891H52.8281H52.7653H52.7025H52.6398H52.5771H52.5145H52.4519H52.3894H52.3269H52.2645H52.202H52.1397H52.0774H52.0151H51.9528H51.8907H51.8285H51.7664H51.7043H51.6423H51.5803H51.5183H51.4564H51.3945H51.3326H51.2708H51.209H51.1472H51.0855H51.0238H50.9621H50.9005H50.8389H50.7773H50.7157H50.6542H50.5927H50.5312H50.4698H50.4084H50.347H50.2856H50.2243H50.1629H50.1016H50.0404H49.9791H49.9178H49.8566H49.7954H49.7342H49.6731H49.6119H49.5508H49.4896H49.4285H49.3674H49.3064H49.2453H49.1842H49.1232H49.0622H49.0011H48.9401H48.8791H48.8181H48.7571H48.6962H48.6352H48.5742H48.5133H48.4523H48.3913H48.3304H48.2694H48.2085H48.1475H48.0866H48.0257H47.9647H47.9038H47.8428H47.7819H47.7209H47.6599H47.599H47.538H47.477H47.416H47.3551H47.2941H47.2331H47.172H47.111H47.05H46.9889H46.9279H46.8668H46.8057H46.7446H46.6835H46.6224H46.5612H46.5001H46.4389H46.3777H46.3165H46.2553H46.194H46.1328H46.0715H46.0102H45.9489H45.8875H45.8261H45.7647H45.7033H45.6418H45.5804H45.5189H45.4573H45.3958H45.3342H45.2726H45.2109H45.1493H45.0876H45.0258H44.9641H44.9023H44.8404H44.7786H44.7166H44.6547H44.5927H44.5307H44.4687H44.4066H44.3445H44.2823H44.2201H44.1578H44.0956H44.0332H43.9709H43.9084H43.846H43.7835H43.7209H43.6583H43.5957H43.533H43.4703H43.4075H43.3447H43.2818H43.2189H43.1559H43.0929H43.0298H42.9666H42.9034H42.8402H42.7769H42.7135H42.6501H42.5867H42.5231H42.4596H42.3959H42.3322H42.2685H42.2046H42.1408H42.0768H42.0128H41.9487H41.8846H41.8204H41.7562H41.6918H41.6274H41.563H41.4985H41.4339H41.3692H41.3045H41.2397H41.1748H41.1098H41.0448H40.9797H40.9146H40.8493H40.784H40.7186H40.6532H40.5876H40.522H40.4563H40.3905H40.3247H40.2588H40.1928H40.1267H40.0605H39.9942H39.9279H39.8615H39.795H39.7284H39.6617H39.5949H39.5281H39.4611H39.3941H39.327H39.2598H39.1925H39.1251H39.0576H38.9901H38.9224H38.8547H38.7868H38.7189H38.6508H38.5827H38.5145H38.4461H38.3777H38.3092H38.2406H38.1719H38.103H38.0341H37.9651H37.896H37.8267H37.7574H37.688H37.6184H37.5488H37.479H37.4092H37.3392H37.2691H37.199H37.1287H37.0583H36.9878H36.9171H36.8464H36.7755H36.7046H36.6335H36.5623H36.491H36.4196H36.3481H36.2764H36.2046H36.1328H36.0607H35.9886H35.9164H35.844H35.7715H35.6989H35.6262H35.5533H35.4803H35.4072H35.334H35.2606H35.1872H35.1135H35.0398H34.9659H34.8919H34.8178H34.7436H34.6692H34.5947H34.52H34.4452H34.3703H34.2952H34.2201H34.1447H34.0693H33.9937H33.9179H33.8421H33.7661H33.6899H33.6136H33.5372H33.4606H33.3839H33.3071H33.2301H33.1529H33.0756H32.9982H32.9206H32.8429H32.765H32.687H32.6088H32.5305H32.452H32.3734H32.2946H32.2157H32.1367H32.0574H31.978H31.8985H31.8188H31.739H31.659H31.5788H31.4985H31.418H31.3374H31.2566H31.1757H31.0946H31.0133H30.9318H30.8503H30.7685H30.6866H30.6045H30.5222H30.4398H30.3572H30.2745H30.1915C30.0489 168.5 29.9693 168.466 29.9164 168.433C29.8553 168.394 29.7779 168.322 29.702 168.192C29.5361 167.906 29.4608 167.48 29.5197 167.111C30.9235 158.322 38.6474 151.574 47.9925 151.574C57.3375 151.574 65.0615 158.322 66.4652 167.111C66.5751 167.799 66.4037 168.054 66.3124 168.149C66.1888 168.278 65.8364 168.5 64.9935 168.5Z\" fill=\"rgb(var(--color-background))\" stroke=\"rgb(var(--color-secondary-700))\" stroke-width=\"3\"/>\n  <circle cx=\"20\" cy=\"141\" r=\"10.5\" fill=\"rgb(var(--color-background))\" stroke=\"rgb(var(--color-secondary-700))\" stroke-width=\"3\"/>\n  <path d=\"M36.9935 168.5H36.9126H36.8318H36.7512H36.6708H36.5905H36.5104H36.4304H36.3506H36.2709H36.1914H36.1121H36.0329H35.9538H35.8749H35.7962H35.7176H35.6392H35.5609H35.4828H35.4048H35.3269H35.2492H35.1717H35.0943H35.017H34.9399H34.8629H34.7861H34.7094H34.6329H34.5565H34.4802H34.4041H34.3281H34.2523H34.1766H34.101H34.0256H33.9503H33.8751H33.8001H33.7252H33.6504H33.5758H33.5013H33.4269H33.3527H33.2786H33.2046H33.1308H33.0571H32.9835H32.91H32.8367H32.7635H32.6904H32.6175H32.5446H32.4719H32.3993H32.3269H32.2545H32.1823H32.1102H32.0382H31.9664H31.8946H31.823H31.7515H31.6801H31.6088H31.5376H31.4666H31.3956H31.3248H31.2541H31.1835H31.113H31.0426H30.9724H30.9022H30.8322H30.7622H30.6924H30.6226H30.553H30.4835H30.4141H30.3448H30.2756H30.2065H30.1375H30.0686H29.9998H29.9311H29.8625H29.794H29.7256H29.6572H29.589H29.5209H29.4529H29.385H29.3172H29.2494H29.1818H29.1142H29.0468H28.9794H28.9121H28.8449H28.7779H28.7108H28.6439H28.5771H28.5103H28.4437H28.3771H28.3106H28.2442H28.1779H28.1117H28.0455H27.9794H27.9134H27.8475H27.7817H27.7159H27.6502H27.5846H27.5191H27.4537H27.3883H27.323H27.2578H27.1926H27.1275H27.0625H26.9976H26.9328H26.868H26.8032H26.7386H26.674H26.6095H26.5451H26.4807H26.4164H26.3521H26.2879H26.2238H26.1598H26.0958H26.0318H25.968H25.9042H25.8404H25.7767H25.7131H25.6495H25.586H25.5226H25.4592H25.3958H25.3325H25.2693H25.2061H25.143H25.0799H25.0169H24.9539H24.891H24.8281H24.7653H24.7025H24.6398H24.5771H24.5145H24.4519H24.3894H24.3269H24.2645H24.202H24.1397H24.0774H24.0151H23.9528H23.8907H23.8285H23.7664H23.7043H23.6423H23.5803H23.5183H23.4564H23.3945H23.3326H23.2708H23.209H23.1472H23.0855H23.0238H22.9621H22.9005H22.8389H22.7773H22.7157H22.6542H22.5927H22.5312H22.4698H22.4084H22.347H22.2856H22.2243H22.1629H22.1016H22.0404H21.9791H21.9178H21.8566H21.7954H21.7342H21.6731H21.6119H21.5508H21.4896H21.4285H21.3674H21.3064H21.2453H21.1842H21.1232H21.0622H21.0011H20.9401H20.8791H20.8181H20.7571H20.6962H20.6352H20.5742H20.5133H20.4523H20.3913H20.3304H20.2694H20.2085H20.1475H20.0866H20.0257H19.9647H19.9038H19.8428H19.7819H19.7209H19.6599H19.599H19.538H19.477H19.416H19.3551H19.2941H19.2331H19.172H19.111H19.05H18.9889H18.9279H18.8668H18.8057H18.7446H18.6835H18.6224H18.5612H18.5001H18.4389H18.3777H18.3165H18.2553H18.194H18.1328H18.0715H18.0102H17.9489H17.8875H17.8261H17.7647H17.7033H17.6418H17.5804H17.5189H17.4573H17.3958H17.3342H17.2726H17.2109H17.1493H17.0876H17.0258H16.9641H16.9023H16.8404H16.7786H16.7166H16.6547H16.5927H16.5307H16.4687H16.4066H16.3445H16.2823H16.2201H16.1578H16.0956H16.0332H15.9709H15.9084H15.846H15.7835H15.7209H15.6583H15.5957H15.533H15.4703H15.4075H15.3447H15.2818H15.2189H15.1559H15.0929H15.0298H14.9666H14.9034H14.8402H14.7769H14.7135H14.6501H14.5867H14.5231H14.4596H14.3959H14.3322H14.2685H14.2046H14.1408H14.0768H14.0128H13.9487H13.8846H13.8204H13.7562H13.6918H13.6274H13.563H13.4985H13.4339H13.3692H13.3045H13.2397H13.1748H13.1098H13.0448H12.9797H12.9146H12.8493H12.784H12.7186H12.6532H12.5876H12.522H12.4563H12.3905H12.3247H12.2588H12.1928H12.1267H12.0605H11.9942H11.9279H11.8615H11.795H11.7284H11.6617H11.5949H11.5281H11.4611H11.3941H11.327H11.2598H11.1925H11.1251H11.0576H10.9901H10.9224H10.8547H10.7868H10.7189H10.6508H10.5827H10.5145H10.4461H10.3777H10.3092H10.2406H10.1719H10.103H10.0341H9.9651H9.89597H9.82674H9.75741H9.68798H9.61843H9.54879H9.47904H9.40918H9.33921H9.26914H9.19896H9.12867H9.05826H8.98775H8.91713H8.8464H8.77555H8.70459H8.63351H8.56232H8.49102H8.4196H8.34807H8.27641H8.20464H8.13276H8.06075H7.98862H7.91638H7.84401H7.77152H7.69891H7.62617H7.55332H7.48034H7.40723H7.334H7.26064H7.18716H7.11355H7.03981H6.96594H6.89195H6.81782H6.74356H6.66918H6.59466H6.52H6.44522H6.3703H6.29525H6.22006H6.14474H6.06928H5.99368H5.91795H5.84208H5.76607H5.68992H5.61363H5.5372H5.46062H5.38391H5.30705H5.23005H5.15291H5.07562H4.99819H4.92061H4.84288H4.76501H4.68699H4.60882H4.5305H4.45203H4.37342H4.29465H4.21573H4.13665H4.05743H3.97805H3.89851H3.81882H3.73898H3.65898H3.57882H3.49851H3.41804H3.33741H3.25662H3.17566H3.09455H3.01328H2.93185H2.85025H2.76849H2.68657H2.60448H2.52223H2.43981H2.35722H2.27447H2.19155C2.04893 168.5 1.96927 168.466 1.91645 168.433C1.85532 168.394 1.77792 168.322 1.702 168.192C1.53613 167.906 1.46078 167.48 1.51975 167.111C2.92347 158.322 10.6474 151.574 19.9925 151.574C29.3375 151.574 37.0615 158.322 38.4652 167.111C38.5751 167.799 38.4037 168.054 38.3124 168.149C38.1888 168.278 37.8364 168.5 36.9935 168.5Z\" fill=\"rgb(var(--color-background))\" stroke=\"rgb(var(--color-secondary-700))\" stroke-width=\"3\"/>\n  <circle cx=\"34\" cy=\"154\" r=\"10.5\" fill=\"rgb(var(--color-background))\" stroke=\"rgb(var(--color-secondary-700))\" stroke-width=\"3\"/>\n  <path d=\"M50.9935 181.5H50.9126H50.8318H50.7512H50.6708H50.5905H50.5104H50.4304H50.3506H50.2709H50.1914H50.1121H50.0329H49.9538H49.8749H49.7962H49.7176H49.6392H49.5609H49.4828H49.4048H49.3269H49.2492H49.1717H49.0943H49.017H48.9399H48.8629H48.7861H48.7094H48.6329H48.5565H48.4802H48.4041H48.3281H48.2523H48.1766H48.101H48.0256H47.9503H47.8751H47.8001H47.7252H47.6504H47.5758H47.5013H47.4269H47.3527H47.2786H47.2046H47.1308H47.0571H46.9835H46.91H46.8367H46.7635H46.6904H46.6175H46.5446H46.4719H46.3993H46.3269H46.2545H46.1823H46.1102H46.0382H45.9664H45.8946H45.823H45.7515H45.6801H45.6088H45.5376H45.4666H45.3956H45.3248H45.2541H45.1835H45.113H45.0426H44.9724H44.9022H44.8322H44.7622H44.6924H44.6226H44.553H44.4835H44.4141H44.3448H44.2756H44.2065H44.1375H44.0686H43.9998H43.9311H43.8625H43.794H43.7256H43.6572H43.589H43.5209H43.4529H43.385H43.3172H43.2494H43.1818H43.1142H43.0468H42.9794H42.9121H42.8449H42.7779H42.7108H42.6439H42.5771H42.5103H42.4437H42.3771H42.3106H42.2442H42.1779H42.1117H42.0455H41.9794H41.9134H41.8475H41.7817H41.7159H41.6502H41.5846H41.5191H41.4537H41.3883H41.323H41.2578H41.1926H41.1275H41.0625H40.9976H40.9328H40.868H40.8032H40.7386H40.674H40.6095H40.5451H40.4807H40.4164H40.3521H40.2879H40.2238H40.1598H40.0958H40.0318H39.968H39.9042H39.8404H39.7767H39.7131H39.6495H39.586H39.5226H39.4592H39.3958H39.3325H39.2693H39.2061H39.143H39.0799H39.0169H38.9539H38.891H38.8281H38.7653H38.7025H38.6398H38.5771H38.5145H38.4519H38.3894H38.3269H38.2645H38.202H38.1397H38.0774H38.0151H37.9528H37.8907H37.8285H37.7664H37.7043H37.6423H37.5803H37.5183H37.4564H37.3945H37.3326H37.2708H37.209H37.1472H37.0855H37.0238H36.9621H36.9005H36.8389H36.7773H36.7157H36.6542H36.5927H36.5312H36.4698H36.4084H36.347H36.2856H36.2243H36.1629H36.1016H36.0404H35.9791H35.9178H35.8566H35.7954H35.7342H35.6731H35.6119H35.5508H35.4896H35.4285H35.3674H35.3064H35.2453H35.1842H35.1232H35.0622H35.0011H34.9401H34.8791H34.8181H34.7571H34.6962H34.6352H34.5742H34.5133H34.4523H34.3913H34.3304H34.2694H34.2085H34.1475H34.0866H34.0257H33.9647H33.9038H33.8428H33.7819H33.7209H33.6599H33.599H33.538H33.477H33.416H33.3551H33.2941H33.2331H33.172H33.111H33.05H32.9889H32.9279H32.8668H32.8057H32.7446H32.6835H32.6224H32.5612H32.5001H32.4389H32.3777H32.3165H32.2553H32.194H32.1328H32.0715H32.0102H31.9489H31.8875H31.8261H31.7647H31.7033H31.6418H31.5804H31.5189H31.4573H31.3958H31.3342H31.2726H31.2109H31.1493H31.0876H31.0258H30.9641H30.9023H30.8404H30.7786H30.7166H30.6547H30.5927H30.5307H30.4687H30.4066H30.3445H30.2823H30.2201H30.1578H30.0956H30.0332H29.9709H29.9084H29.846H29.7835H29.7209H29.6583H29.5957H29.533H29.4703H29.4075H29.3447H29.2818H29.2189H29.1559H29.0929H29.0298H28.9666H28.9034H28.8402H28.7769H28.7135H28.6501H28.5867H28.5231H28.4596H28.3959H28.3322H28.2685H28.2046H28.1408H28.0768H28.0128H27.9487H27.8846H27.8204H27.7562H27.6918H27.6274H27.563H27.4985H27.4339H27.3692H27.3045H27.2397H27.1748H27.1098H27.0448H26.9797H26.9146H26.8493H26.784H26.7186H26.6532H26.5876H26.522H26.4563H26.3905H26.3247H26.2588H26.1928H26.1267H26.0605H25.9942H25.9279H25.8615H25.795H25.7284H25.6617H25.5949H25.5281H25.4611H25.3941H25.327H25.2598H25.1925H25.1251H25.0576H24.9901H24.9224H24.8547H24.7868H24.7189H24.6508H24.5827H24.5145H24.4461H24.3777H24.3092H24.2406H24.1719H24.103H24.0341H23.9651H23.896H23.8267H23.7574H23.688H23.6184H23.5488H23.479H23.4092H23.3392H23.2691H23.199H23.1287H23.0583H22.9878H22.9171H22.8464H22.7755H22.7046H22.6335H22.5623H22.491H22.4196H22.3481H22.2764H22.2046H22.1328H22.0607H21.9886H21.9164H21.844H21.7715H21.6989H21.6262H21.5533H21.4803H21.4072H21.334H21.2606H21.1872H21.1135H21.0398H20.9659H20.8919H20.8178H20.7436H20.6692H20.5947H20.52H20.4452H20.3703H20.2952H20.2201H20.1447H20.0693H19.9937H19.9179H19.8421H19.7661H19.6899H19.6136H19.5372H19.4606H19.3839H19.3071H19.2301H19.1529H19.0756H18.9982H18.9206H18.8429H18.765H18.687H18.6088H18.5305H18.452H18.3734H18.2946H18.2157H18.1367H18.0574H17.978H17.8985H17.8188H17.739H17.659H17.5788H17.4985H17.418H17.3374H17.2566H17.1757H17.0946H17.0133H16.9318H16.8503H16.7685H16.6866H16.6045H16.5222H16.4398H16.3572H16.2745H16.1915C16.045 181.5 15.9628 181.465 15.9092 181.432C15.8479 181.394 15.772 181.324 15.6978 181.198C15.5354 180.922 15.4617 180.509 15.5193 180.153C16.9196 171.496 24.6325 164.823 33.9925 164.823C43.3524 164.823 51.0654 171.496 52.4657 180.153C52.574 180.823 52.4052 181.064 52.319 181.152C52.1962 181.279 51.8413 181.5 50.9935 181.5Z\" fill=\"rgb(var(--color-background))\" stroke=\"rgb(var(--color-secondary-700))\" stroke-width=\"3\"/>\n</svg>\n`;\n\n@Component({\n  selector: \"app-org-subscription-hidden\",\n  template: `<div class=\"tw-flex tw-flex-col tw-items-center tw-text-info\">\n    <bit-icon [icon]=\"subscriptionHiddenIcon\"></bit-icon>\n    <p class=\"tw-font-bold\">{{ \"billingManagedByProvider\" | i18n : providerName }}</p>\n    <p>{{ \"billingContactProviderForAssistance\" | i18n }}</p>\n  </div>`,\n})\nexport class SubscriptionHiddenComponent {\n  @Input() providerName: string;\n  subscriptionHiddenIcon = SubscriptionHiddenIcon;\n}\n","<div class=\"tw-mb-2\">\n  <h1 bitTypography=\"h1\">\n    {{ \"subscription\" | i18n }}\n    <small *ngIf=\"firstLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"tw-sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i class=\"bwi bwi-spinner bwi-spin text-muted\" title=\"{{ 'loading' | i18n }}\"></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n\n<app-org-subscription-hidden\n  *ngIf=\"firstLoaded && !userOrg.canViewSubscription\"\n  [providerName]=\"userOrg.providerName\"\n></app-org-subscription-hidden>\n\n<ng-container *ngIf=\"sub && firstLoaded\">\n  <bit-callout\n    type=\"warning\"\n    title=\"{{ 'canceled' | i18n }}\"\n    *ngIf=\"subscription && subscription.cancelled\"\n  >\n    {{ \"subscriptionCanceled\" | i18n }}</bit-callout\n  >\n  <bit-callout\n    type=\"warning\"\n    title=\"{{ 'pendingCancellation' | i18n }}\"\n    *ngIf=\"subscriptionMarkedForCancel\"\n  >\n    <p>{{ \"subscriptionPendingCanceled\" | i18n }}</p>\n    <button bitButton buttonType=\"secondary\" [bitAction]=\"reinstate\" type=\"button\">\n      {{ \"reinstateSubscription\" | i18n }}\n    </button>\n  </bit-callout>\n\n  <dl class=\"tw-grid tw-grid-flow-col tw-grid-rows-2\">\n    <dt>{{ \"billingPlan\" | i18n }}</dt>\n    <dd>{{ sub.plan.name }}</dd>\n    <ng-container *ngIf=\"subscription\">\n      <dt>{{ \"status\" | i18n }}</dt>\n      <dd>\n        <span class=\"tw-capitalize\">{{\n          isSponsoredSubscription ? \"sponsored\" : subscription.status || \"-\"\n        }}</span>\n        <span bitBadge badgeType=\"warning\" *ngIf=\"subscriptionMarkedForCancel\">{{\n          \"pendingCancellation\" | i18n\n        }}</span>\n      </dd>\n      <dt [ngClass]=\"{ 'tw-text-danger': isExpired }\">\n        {{ \"subscriptionExpiration\" | i18n }}\n      </dt>\n      <dd [ngClass]=\"{ 'tw-text-danger': isExpired }\">\n        {{ nextInvoice ? (nextInvoice.date | date : \"mediumDate\") : \"-\" }}\n      </dd>\n    </ng-container>\n  </dl>\n  <ng-container *ngIf=\"userOrg.canEditSubscription\">\n    <div class=\"tw-flex-col\">\n      <strong class=\"tw-block tw-border-0 tw-border-b tw-border-solid tw-border-secondary-300\">{{\n        \"details\" | i18n\n      }}</strong>\n      <bit-table>\n        <ng-template body>\n          <ng-container *ngIf=\"subscription\">\n            <tr bitRow *ngFor=\"let i of subscriptionLineItems\">\n              <td bitCell [ngClass]=\"{ 'tw-pl-20': i.addonSubscriptionItem }\">\n                <span *ngIf=\"!i.addonSubscriptionItem\"\n                  >{{ productName(i.bitwardenProduct) }} -</span\n                >\n                {{ i.name }} {{ i.quantity > 1 ? \"&times;\" + i.quantity : \"\" }} @\n                {{ i.amount | currency : \"$\" }}\n              </td>\n              <td bitCell class=\"tw-text-right\">\n                {{ i.quantity * i.amount | currency : \"$\" }} /{{ i.interval | i18n }}\n              </td>\n            </tr>\n          </ng-container>\n          <ng-container *ngIf=\"userOrg.isFreeOrg\">\n            <tr bitRow *ngIf=\"userOrg.usePasswordManager\">\n              <td bitCell>{{ \"passwordManager\" | i18n }} - {{ \"freeOrganization\" | i18n }}</td>\n              <td bitCell class=\"tw-text-right\">{{ \"free\" | i18n }}</td>\n            </tr>\n            <tr bitRow *ngIf=\"userOrg.useSecretsManager && !sub.secretsManagerBeta\">\n              <td bitCell>{{ \"secretsManager\" | i18n }} - {{ \"freeOrganization\" | i18n }}</td>\n              <td bitCell class=\"tw-text-right\">{{ \"free\" | i18n }}</td>\n            </tr>\n          </ng-container>\n          <tr bitRow *ngIf=\"sub.secretsManagerBeta\">\n            <td bitCell>\n              {{ \"secretsManager\" | i18n }} -\n              {{ \"beta\" | i18n }}\n              ({{ \"annually\" | i18n }}) @\n              {{ 0 | currency : \"$\" }}\n              <span bitBadge badgeType=\"warning\" class=\"tw-ml-2\">{{\n                \"betaEnding\" | i18n | uppercase\n              }}</span>\n            </td>\n            <td bitCell class=\"tw-text-right\">{{ 0 | currency : \"$\" }} /{{ \"year\" | i18n }}</td>\n          </tr>\n        </ng-template>\n      </bit-table>\n      <bit-callout\n        *ngIf=\"sub.secretsManagerBeta && !userOrg.isFreeOrg\"\n        type=\"warning\"\n        class=\"tw-mt-4 tw-block\"\n      >\n        {{ smBetaEndedDesc }}\n      </bit-callout>\n    </div>\n  </ng-container>\n\n  <ng-container *ngIf=\"userOrg.canEditSubscription\">\n    <div class=\"tw-mt-7\">\n      <button\n        bitButton\n        buttonType=\"secondary\"\n        type=\"button\"\n        (click)=\"changePlan()\"\n        *ngIf=\"showChangePlanButton\"\n      >\n        {{ \"changeBillingPlan\" | i18n }}\n      </button>\n      <app-change-plan\n        [organizationId]=\"organizationId\"\n        (onChanged)=\"closeChangePlan()\"\n        (onCanceled)=\"closeChangePlan()\"\n        *ngIf=\"showChangePlan\"\n      ></app-change-plan>\n    </div>\n  </ng-container>\n\n  <ng-container *ngIf=\"showSecretsManagerSubscribe\">\n    <div class=\"tw-mt-7\">\n      <sm-subscribe-standalone\n        [plan]=\"sub.secretsManagerPlan\"\n        [organization]=\"userOrg\"\n        [customerDiscount]=\"customerDiscount\"\n        (onSubscribe)=\"subscriptionAdjusted()\"\n      ></sm-subscribe-standalone>\n    </div>\n  </ng-container>\n\n  <ng-container *ngIf=\"userOrg.canEditSubscription\">\n    <h2 bitTypography=\"h2\" class=\"tw-mt-7\">{{ \"manageSubscription\" | i18n }}</h2>\n    <p bitTypography=\"body1\">{{ subscriptionDesc }}</p>\n    <ng-container\n      *ngIf=\"\n        subscription && canAdjustSeats && !subscription.cancelled && !subscriptionMarkedForCancel\n      \"\n    >\n      <h3 bitTypography=\"h3\" class=\"tw-mt-7\">{{ \"passwordManager\" | i18n }}</h3>\n      <app-adjust-subscription\n        [seatPrice]=\"seatPrice\"\n        [organizationId]=\"organizationId\"\n        [interval]=\"billingInterval\"\n        [currentSeatCount]=\"seats\"\n        [maxAutoscaleSeats]=\"maxAutoscaleSeats\"\n        (onAdjusted)=\"subscriptionAdjusted()\"\n      >\n      </app-adjust-subscription>\n    </ng-container>\n    <button\n      bitButton\n      buttonType=\"danger\"\n      type=\"button\"\n      [bitAction]=\"removeSponsorship\"\n      *ngIf=\"isSponsoredSubscription\"\n    >\n      {{ \"removeSponsorship\" | i18n }}\n    </button>\n    <h4 bitTypography=\"h4\" class=\"tw-mt-9\">{{ \"storage\" | i18n }}</h4>\n    <p bitTypography=\"body1\">\n      {{ \"subscriptionStorage\" | i18n : sub.maxStorageGb || 0 : sub.storageName || \"0 MB\" }}\n    </p>\n    <bit-progress [barWidth]=\"storagePercentage\" bgColor=\"success\"></bit-progress>\n    <ng-container *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\">\n      <div class=\"tw-mt-3\">\n        <div class=\"tw-flex tw-space-x-2\" *ngIf=\"!showAdjustStorage\">\n          <button bitButton buttonType=\"secondary\" type=\"button\" (click)=\"adjustStorage(true)\">\n            {{ \"addStorage\" | i18n }}\n          </button>\n          <button bitButton buttonType=\"secondary\" type=\"button\" (click)=\"adjustStorage(false)\">\n            {{ \"removeStorage\" | i18n }}\n          </button>\n        </div>\n        <app-adjust-storage\n          [storageGbPrice]=\"storageGbPrice\"\n          [add]=\"adjustStorageAdd\"\n          [organizationId]=\"organizationId\"\n          [interval]=\"billingInterval\"\n          (onAdjusted)=\"closeStorage(true)\"\n          (onCanceled)=\"closeStorage(false)\"\n          *ngIf=\"showAdjustStorage\"\n        ></app-adjust-storage>\n      </div>\n    </ng-container>\n    <ng-container *ngIf=\"showAdjustSecretsManager\">\n      <h3 bitTypography=\"h3\" class=\"tw-mt-9\">{{ \"secretsManager\" | i18n }}</h3>\n      <app-sm-adjust-subscription\n        [organizationId]=\"organizationId\"\n        [options]=\"smOptions\"\n        (onAdjusted)=\"subscriptionAdjusted()\"\n      ></app-sm-adjust-subscription>\n    </ng-container>\n  </ng-container>\n\n  <h2 bitTypography=\"h2\" class=\"tw-mt-7\">{{ \"selfHostingTitle\" | i18n }}</h2>\n  <p bitTypography=\"body1\">\n    {{ \"selfHostingEnterpriseOrganizationSectionCopy\" | i18n }}\n  </p>\n  <div class=\"tw-flex tw-space-x-2\">\n    <button\n      bitButton\n      buttonType=\"secondary\"\n      type=\"button\"\n      (click)=\"downloadLicense()\"\n      *ngIf=\"canDownloadLicense\"\n      [disabled]=\"showDownloadLicense\"\n    >\n      {{ \"downloadLicense\" | i18n }}\n    </button>\n    <button\n      bitButton\n      buttonType=\"secondary\"\n      type=\"button\"\n      (click)=\"manageBillingSync()\"\n      *ngIf=\"canManageBillingSync\"\n    >\n      {{ (hasBillingSyncToken ? \"manageBillingSync\" : \"setUpBillingSync\") | i18n }}\n    </button>\n  </div>\n  <div class=\"tw-mt-3\" *ngIf=\"showDownloadLicense\">\n    <app-download-license\n      [organizationId]=\"organizationId\"\n      (onDownloaded)=\"closeDownloadLicense()\"\n      (onCanceled)=\"closeDownloadLicense()\"\n    ></app-download-license>\n  </div>\n  <ng-container *ngIf=\"userOrg.canEditSubscription\">\n    <h2 bitTypography=\"h2\" class=\"tw-mt-7\">{{ \"additionalOptions\" | i18n }}</h2>\n    <p bitTypography=\"body1\">\n      {{ \"additionalOptionsDesc\" | i18n }}\n    </p>\n    <div class=\"tw-flex tw-space-x-2\">\n      <button\n        bitButton\n        buttonType=\"danger\"\n        [bitAction]=\"cancel\"\n        type=\"button\"\n        *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\"\n      >\n        {{ \"cancelSubscription\" | i18n }}\n      </button>\n    </div>\n  </ng-container>\n</ng-container>\n","import { DatePipe } from \"@angular/common\";\nimport { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { concatMap, firstValueFrom, Subject, takeUntil } from \"rxjs\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/admin-console/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/admin-console/abstractions/organization/organization.service.abstraction\";\nimport { OrganizationApiKeyType } from \"@bitwarden/common/admin-console/enums\";\nimport { Organization } from \"@bitwarden/common/admin-console/models/domain/organization\";\nimport { BitwardenProductType, PlanType } from \"@bitwarden/common/billing/enums\";\nimport { OrganizationSubscriptionResponse } from \"@bitwarden/common/billing/models/response/organization-subscription.response\";\nimport { BillingSubscriptionItemResponse } from \"@bitwarden/common/billing/models/response/subscription.response\";\nimport { I18nService } from \"@bitwarden/common/platform/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/platform/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/platform/abstractions/platform-utils.service\";\nimport { Utils } from \"@bitwarden/common/platform/misc/utils\";\nimport { DialogService } from \"@bitwarden/components\";\n\nimport { BillingSyncApiKeyComponent } from \"./billing-sync-api-key.component\";\nimport { SecretsManagerSubscriptionOptions } from \"./sm-adjust-subscription.component\";\n\n@Component({\n  templateUrl: \"organization-subscription-cloud.component.html\",\n})\nexport class OrganizationSubscriptionCloudComponent implements OnInit, OnDestroy {\n  sub: OrganizationSubscriptionResponse;\n  lineItems: BillingSubscriptionItemResponse[] = [];\n  organizationId: string;\n  userOrg: Organization;\n  showChangePlan = false;\n  showDownloadLicense = false;\n  adjustStorageAdd = true;\n  showAdjustStorage = false;\n  hasBillingSyncToken: boolean;\n  showAdjustSecretsManager = false;\n\n  showSecretsManagerSubscribe = false;\n\n  firstLoaded = false;\n  loading: boolean;\n\n  private readonly _smBetaEndingDate = new Date(2023, 7, 15);\n  private readonly _smGracePeriodEndingDate = new Date(2023, 10, 14);\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private logService: LogService,\n    private organizationService: OrganizationService,\n    private organizationApiService: OrganizationApiServiceAbstraction,\n    private route: ActivatedRoute,\n    private dialogService: DialogService,\n    private datePipe: DatePipe\n  ) {}\n\n  async ngOnInit() {\n    if (this.route.snapshot.queryParamMap.get(\"upgrade\")) {\n      this.changePlan();\n    }\n\n    this.route.params\n      .pipe(\n        concatMap(async (params) => {\n          this.organizationId = params.organizationId;\n          await this.load();\n          this.firstLoaded = true;\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  productName(product: BitwardenProductType) {\n    switch (product) {\n      case BitwardenProductType.PasswordManager:\n        return this.i18nService.t(\"passwordManager\");\n      case BitwardenProductType.SecretsManager:\n        return this.i18nService.t(\"secretsManager\");\n      default:\n        return this.i18nService.t(\"passwordManager\");\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n    this.loading = true;\n    this.userOrg = this.organizationService.get(this.organizationId);\n    if (this.userOrg.canViewSubscription) {\n      this.sub = await this.organizationApiService.getSubscription(this.organizationId);\n      this.lineItems = this.sub?.subscription?.items?.sort(sortSubscriptionItems) ?? [];\n    }\n\n    const apiKeyResponse = await this.organizationApiService.getApiKeyInformation(\n      this.organizationId\n    );\n    this.hasBillingSyncToken = apiKeyResponse.data.some(\n      (i) => i.keyType === OrganizationApiKeyType.BillingSync\n    );\n\n    this.showSecretsManagerSubscribe =\n      this.userOrg.canEditSubscription &&\n      !this.userOrg.hasProvider &&\n      !this.userOrg.useSecretsManager &&\n      !this.subscription?.cancelled &&\n      !this.subscriptionMarkedForCancel;\n\n    this.showAdjustSecretsManager =\n      this.userOrg.canEditSubscription &&\n      this.userOrg.useSecretsManager &&\n      this.subscription != null &&\n      this.sub.secretsManagerPlan?.hasAdditionalSeatsOption &&\n      !this.sub.secretsManagerBeta &&\n      !this.subscription.cancelled &&\n      !this.subscriptionMarkedForCancel;\n\n    this.loading = false;\n  }\n\n  get subscription() {\n    return this.sub != null ? this.sub.subscription : null;\n  }\n\n  get nextInvoice() {\n    return this.sub != null ? this.sub.upcomingInvoice : null;\n  }\n\n  get customerDiscount() {\n    return this.sub != null ? this.sub.customerDiscount : null;\n  }\n\n  get subscriptionLineItems() {\n    return this.lineItems.map((lineItem: BillingSubscriptionItemResponse) => ({\n      name: lineItem.name,\n      amount: this.discount(lineItem.amount),\n      quantity: lineItem.quantity,\n      interval: lineItem.interval,\n      sponsoredSubscriptionItem: lineItem.sponsoredSubscriptionItem,\n      addonSubscriptionItem: lineItem.addonSubscriptionItem,\n      bitwardenProduct: lineItem.bitwardenProduct,\n    }));\n  }\n\n  get isExpired() {\n    const nextInvoice = this.nextInvoice;\n\n    if (nextInvoice == null) {\n      return false;\n    }\n\n    return new Date(nextInvoice.date).getTime() < Date.now();\n  }\n\n  get storagePercentage() {\n    return this.sub != null && this.sub.maxStorageGb\n      ? +(100 * (this.sub.storageGb / this.sub.maxStorageGb)).toFixed(2)\n      : 0;\n  }\n\n  get storageProgressWidth() {\n    return this.storagePercentage < 5 ? 5 : 0;\n  }\n\n  get billingInterval() {\n    const monthly = !this.sub.plan.isAnnual;\n    return monthly ? \"month\" : \"year\";\n  }\n\n  discount = (price: number) => {\n    const discount =\n      !!this.customerDiscount && this.customerDiscount.active\n        ? price * (this.customerDiscount.percentOff / 100)\n        : 0;\n\n    return price - discount;\n  };\n\n  get storageGbPrice() {\n    return this.discount(this.sub.plan.additionalStoragePricePerGb);\n  }\n\n  get seatPrice() {\n    return this.discount(this.sub.plan.seatPrice);\n  }\n\n  get seats() {\n    return this.sub.seats;\n  }\n\n  get smOptions(): SecretsManagerSubscriptionOptions {\n    return {\n      seatCount: this.sub.smSeats,\n      maxAutoscaleSeats: this.sub.maxAutoscaleSmSeats,\n      seatPrice: this.discount(this.sub.secretsManagerPlan.seatPrice),\n      maxAutoscaleServiceAccounts: this.sub.maxAutoscaleSmServiceAccounts,\n      additionalServiceAccounts:\n        this.sub.smServiceAccounts - this.sub.secretsManagerPlan.baseServiceAccount,\n      interval: this.sub.secretsManagerPlan.isAnnual ? \"year\" : \"month\",\n      additionalServiceAccountPrice: this.discount(\n        this.sub.secretsManagerPlan.additionalPricePerServiceAccount\n      ),\n      baseServiceAccountCount: this.sub.secretsManagerPlan.baseServiceAccount,\n    };\n  }\n\n  get maxAutoscaleSeats() {\n    return this.sub.maxAutoscaleSeats;\n  }\n\n  get canAdjustSeats() {\n    return this.sub.plan.hasAdditionalSeatsOption;\n  }\n\n  get isAdmin() {\n    return this.userOrg.isAdmin;\n  }\n\n  get isSponsoredSubscription(): boolean {\n    return this.sub.subscription?.items.some((i) => i.sponsoredSubscriptionItem);\n  }\n\n  get canDownloadLicense() {\n    return (\n      (this.sub.planType !== PlanType.Free && this.subscription == null) ||\n      (this.subscription != null && !this.subscription.cancelled)\n    );\n  }\n\n  get canManageBillingSync() {\n    return (\n      this.sub.planType === PlanType.EnterpriseAnnually ||\n      this.sub.planType === PlanType.EnterpriseMonthly ||\n      this.sub.planType === PlanType.EnterpriseAnnually2019 ||\n      this.sub.planType === PlanType.EnterpriseMonthly2019\n    );\n  }\n\n  get subscriptionDesc() {\n    if (this.sub.planType === PlanType.Free) {\n      return this.i18nService.t(\"subscriptionFreePlan\", this.sub.seats.toString());\n    } else if (\n      this.sub.planType === PlanType.FamiliesAnnually ||\n      this.sub.planType === PlanType.FamiliesAnnually2019\n    ) {\n      if (this.isSponsoredSubscription) {\n        return this.i18nService.t(\"subscriptionSponsoredFamiliesPlan\", this.sub.seats.toString());\n      } else {\n        return this.i18nService.t(\"subscriptionFamiliesPlan\", this.sub.seats.toString());\n      }\n    } else if (this.sub.maxAutoscaleSeats === this.sub.seats && this.sub.seats != null) {\n      return this.i18nService.t(\"subscriptionMaxReached\", this.sub.seats.toString());\n    } else if (this.sub.maxAutoscaleSeats == null) {\n      return this.i18nService.t(\"subscriptionUserSeatsUnlimitedAutoscale\");\n    } else {\n      return this.i18nService.t(\n        \"subscriptionUserSeatsLimitedAutoscale\",\n        this.sub.maxAutoscaleSeats.toString()\n      );\n    }\n  }\n\n  get subscriptionMarkedForCancel() {\n    return (\n      this.subscription != null && !this.subscription.cancelled && this.subscription.cancelAtEndDate\n    );\n  }\n\n  get smBetaEndedDesc() {\n    return this.i18nService.translate(\n      \"smBetaEndedDesc\",\n      this.datePipe.transform(this._smBetaEndingDate),\n      Utils.daysRemaining(this._smGracePeriodEndingDate).toString()\n    );\n  }\n\n  cancel = async () => {\n    if (this.loading) {\n      return;\n    }\n\n    const confirmed = await this.dialogService.openSimpleDialog({\n      title: { key: \"cancelSubscription\" },\n      content: { key: \"cancelConfirmation\" },\n      type: \"warning\",\n    });\n\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      await this.organizationApiService.cancel(this.organizationId);\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"canceledSubscription\")\n      );\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  };\n\n  reinstate = async () => {\n    if (this.loading) {\n      return;\n    }\n\n    const confirmed = await this.dialogService.openSimpleDialog({\n      title: { key: \"reinstateSubscription\" },\n      content: { key: \"reinstateConfirmation\" },\n      type: \"warning\",\n    });\n\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      await this.organizationApiService.reinstate(this.organizationId);\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"reinstated\"));\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  };\n\n  async changePlan() {\n    this.showChangePlan = !this.showChangePlan;\n  }\n\n  closeChangePlan() {\n    this.showChangePlan = false;\n  }\n\n  downloadLicense() {\n    this.showDownloadLicense = !this.showDownloadLicense;\n  }\n\n  async manageBillingSync() {\n    const dialogRef = BillingSyncApiKeyComponent.open(this.dialogService, {\n      organizationId: this.organizationId,\n      hasBillingToken: this.hasBillingSyncToken,\n    });\n\n    await firstValueFrom(dialogRef.closed);\n    this.load();\n  }\n\n  closeDownloadLicense() {\n    this.showDownloadLicense = false;\n  }\n\n  subscriptionAdjusted() {\n    this.load();\n  }\n\n  adjustStorage(add: boolean) {\n    this.adjustStorageAdd = add;\n    this.showAdjustStorage = true;\n  }\n\n  closeStorage(load: boolean) {\n    this.showAdjustStorage = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  removeSponsorship = async () => {\n    const confirmed = await this.dialogService.openSimpleDialog({\n      title: { key: \"removeSponsorship\" },\n      content: { key: \"removeSponsorshipConfirmation\" },\n      acceptButtonText: { key: \"remove\" },\n      type: \"warning\",\n    });\n\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      await this.apiService.deleteRemoveSponsorship(this.organizationId);\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removeSponsorshipSuccess\")\n      );\n      await this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  };\n\n  get showChangePlanButton() {\n    return this.subscription == null && this.sub.planType === PlanType.Free && !this.showChangePlan;\n  }\n}\n\n/**\n * Helper to sort subscription items by product type and then by addon status\n */\nfunction sortSubscriptionItems(\n  a: BillingSubscriptionItemResponse,\n  b: BillingSubscriptionItemResponse\n) {\n  if (a.bitwardenProduct == b.bitwardenProduct) {\n    if (a.addonSubscriptionItem == b.addonSubscriptionItem) {\n      return 0;\n    }\n    // sort addon items to the bottom\n    if (a.addonSubscriptionItem) {\n      return 1;\n    }\n    return -1;\n  }\n  return a.bitwardenProduct - b.bitwardenProduct;\n}\n","import { BaseResponse } from \"../../../models/response/base.response\";\n\nexport class BillingSyncConfigApi extends BaseResponse {\n  billingSyncKey: string;\n  lastLicenseSync: Date;\n\n  constructor(data: any) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.billingSyncKey = this.getResponseProperty(\"BillingSyncKey\");\n\n    const lastLicenseSyncString = this.getResponseProperty(\"LastLicenseSync\");\n    if (lastLicenseSyncString) {\n      this.lastLicenseSync = new Date(lastLicenseSyncString);\n    }\n  }\n}\n","import { View } from \"../../../models/view/view\";\nimport { OrganizationSubscriptionResponse } from \"../response/organization-subscription.response\";\n\nexport class SelfHostedOrganizationSubscriptionView implements View {\n  planName: string;\n\n  /**\n   * Date the subscription expires, including the grace period.\n   */\n  expirationWithGracePeriod?: Date;\n\n  /**\n   * Date the subscription expires, excluding the grace period.\n   * This will be `null` for older (< v12) license files because they do not include this date.\n   * In this case, you have to rely on the `expirationWithGracePeriod` instead.\n   */\n  expirationWithoutGracePeriod?: Date;\n\n  constructor(response: OrganizationSubscriptionResponse) {\n    if (response == null) {\n      return;\n    }\n\n    this.planName = response.plan.name;\n    this.expirationWithGracePeriod =\n      response.expiration != null ? new Date(response.expiration) : null;\n    this.expirationWithoutGracePeriod =\n      response.expirationWithoutGracePeriod != null\n        ? new Date(response.expirationWithoutGracePeriod)\n        : null;\n  }\n\n  /**\n   * The subscription has separate expiration dates for the subscription and the end of grace period.\n   */\n  get hasSeparateGracePeriod() {\n    return this.expirationWithGracePeriod != null && this.expirationWithoutGracePeriod != null;\n  }\n\n  /**\n   * True if the subscription has an expiration date.\n   */\n  get hasExpiration() {\n    return this.expirationWithGracePeriod != null;\n  }\n\n  /**\n   * True if the subscription has an expiration date that has past, but may still be within the grace period.\n   * For older licenses (< v12), this will always be false because they do not include the `expirationWithoutGracePeriod`.\n   */\n  get isExpiredWithoutGracePeriod() {\n    return this.hasSeparateGracePeriod && this.expirationWithoutGracePeriod < new Date();\n  }\n\n  /**\n   * True if the subscription has an expiration date that has past, including the grace period.\n   */\n  get isExpiredAndOutsideGracePeriod() {\n    return this.hasExpiration && this.expirationWithGracePeriod < new Date();\n  }\n}\n","export class BillingSyncConfigRequest {\n  constructor(private billingSyncKey: string) {}\n}\n","import { DIALOG_DATA, DialogRef } from \"@angular/cdk/dialog\";\nimport { Component, Inject } from \"@angular/core\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { OrganizationConnectionType } from \"@bitwarden/common/admin-console/enums\";\nimport { OrganizationConnectionRequest } from \"@bitwarden/common/admin-console/models/request/organization-connection.request\";\nimport { OrganizationConnectionResponse } from \"@bitwarden/common/admin-console/models/response/organization-connection.response\";\nimport { BillingSyncConfigApi } from \"@bitwarden/common/billing/models/api/billing-sync-config.api\";\nimport { BillingSyncConfigRequest } from \"@bitwarden/common/billing/models/request/billing-sync-config.request\";\nimport { LogService } from \"@bitwarden/common/platform/abstractions/log.service\";\nimport { DialogService } from \"@bitwarden/components\";\n\nexport interface BillingSyncKeyModalData {\n  entityId: string;\n  existingConnectionId: string;\n  billingSyncKey: string;\n  setParentConnection: (connection: OrganizationConnectionResponse<BillingSyncConfigApi>) => void;\n}\n\n@Component({\n  templateUrl: \"billing-sync-key.component.html\",\n})\nexport class BillingSyncKeyComponent {\n  protected entityId: string;\n  protected existingConnectionId: string;\n  protected billingSyncKey: string;\n  protected setParentConnection: (\n    connection: OrganizationConnectionResponse<BillingSyncConfigApi>\n  ) => void;\n\n  protected formGroup: FormGroup;\n\n  constructor(\n    private dialogRef: DialogRef,\n    @Inject(DIALOG_DATA) protected data: BillingSyncKeyModalData,\n    private apiService: ApiService,\n    private logService: LogService\n  ) {\n    this.entityId = data.entityId;\n    this.existingConnectionId = data.existingConnectionId;\n    this.billingSyncKey = data.billingSyncKey;\n    this.setParentConnection = data.setParentConnection;\n\n    this.formGroup = new FormGroup({\n      billingSyncKey: new FormControl<string>(this.billingSyncKey, Validators.required),\n    });\n  }\n\n  submit = async () => {\n    try {\n      const request = new OrganizationConnectionRequest(\n        this.entityId,\n        OrganizationConnectionType.CloudBillingSync,\n        true,\n        new BillingSyncConfigRequest(this.formGroup.value.billingSyncKey)\n      );\n\n      const response =\n        this.existingConnectionId == null\n          ? await this.apiService.createOrganizationConnection(request, BillingSyncConfigApi)\n          : await this.apiService.updateOrganizationConnection(\n              request,\n              BillingSyncConfigApi,\n              this.existingConnectionId\n            );\n\n      this.existingConnectionId = response?.id;\n      this.billingSyncKey = response?.config?.billingSyncKey;\n      this.setParentConnection(response);\n      this.dialogRef.close();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  };\n\n  deleteConnection = async () => {\n    await this.apiService.deleteOrganizationConnection(this.existingConnectionId);\n    this.setParentConnection(null);\n    this.dialogRef.close();\n  };\n\n  static open(dialogService: DialogService, data: BillingSyncKeyModalData) {\n    return dialogService.open(BillingSyncKeyComponent, { data });\n  }\n}\n","<form [formGroup]=\"formGroup\" [bitSubmit]=\"submit\">\n  <bit-dialog>\n    <h1 bitDialogTitle>\n      {{ \"manageBillingSync\" | i18n }}\n    </h1>\n    <div bitDialogContent>\n      <p>{{ \"billingSyncKeyDesc\" | i18n }}</p>\n      <bit-form-field>\n        <bit-label>\n          {{ \"billingSyncKey\" | i18n }}\n        </bit-label>\n        <input\n          bitInput\n          id=\"billingSyncKey\"\n          type=\"text\"\n          formControlName=\"billingSyncKey\"\n          appAutofocus\n          appInputVerbatim\n        />\n      </bit-form-field>\n    </div>\n    <ng-container bitDialogFooter>\n      <button type=\"submit\" bitButton bitFormButton buttonType=\"primary\">\n        {{ \"save\" | i18n }}\n      </button>\n      <button bitButton bitDialogClose type=\"button\">\n        {{ \"cancel\" | i18n }}\n      </button>\n      <button\n        class=\"tw-ml-auto\"\n        type=\"button\"\n        buttonType=\"danger\"\n        bitIconButton=\"bwi-trash\"\n        bitFormButton\n        [bitAction]=\"deleteConnection\"\n        appA11yTitle=\"{{ 'delete' | i18n }}\"\n      ></button>\n    </ng-container>\n  </bit-dialog>\n</form>\n","<div class=\"page-header\">\n  <h1>\n    {{ \"subscription\" | i18n }}\n    <small *ngIf=\"firstLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n\n<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i class=\"bwi bwi-spinner bwi-spin text-muted\" title=\"{{ 'loading' | i18n }}\"></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n\n<app-org-subscription-hidden\n  *ngIf=\"firstLoaded && !userOrg.canViewSubscription\"\n  [providerName]=\"userOrg.providerName\"\n></app-org-subscription-hidden>\n\n<ng-container *ngIf=\"subscription && firstLoaded\">\n  <dl>\n    <dt>{{ \"billingPlan\" | i18n }}</dt>\n    <dd>{{ subscription.planName }}</dd>\n    <ng-container *ngIf=\"billingSyncSetUp\">\n      <dt>{{ \"lastLicenseSync\" | i18n }}</dt>\n      <dd>\n        {{ lastLicenseSync != null ? (lastLicenseSync | date : \"medium\") : (\"never\" | i18n) }}\n      </dd>\n    </ng-container>\n    <dt>\n      <span [ngClass]=\"{ 'tw-text-danger': showAsExpired }\">{{\n        \"subscriptionExpiration\" | i18n\n      }}</span>\n      <a\n        href=\"https://bitwarden.com/help/licensing-on-premise/#update-organization-license\"\n        target=\"_blank\"\n        [appA11yTitle]=\"'licensePaidFeaturesHelp' | i18n\"\n        rel=\"noopener\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n        <span class=\"sr-only\">{{ \"licensePaidFeaturesHelp\" | i18n }}</span>\n      </a>\n    </dt>\n    <dd *ngIf=\"subscription.hasExpiration\" [ngClass]=\"{ 'tw-text-danger': showAsExpired }\">\n      {{\n        (subscription.hasSeparateGracePeriod\n          ? subscription.expirationWithoutGracePeriod\n          : subscription.expirationWithGracePeriod\n        ) | date : \"mediumDate\"\n      }}\n      <div *ngIf=\"subscription.hasSeparateGracePeriod\" class=\"tw-text-muted\">\n        {{\n          \"selfHostGracePeriodHelp\"\n            | i18n : (subscription.expirationWithGracePeriod | date : \"mediumDate\")\n        }}\n      </div>\n    </dd>\n    <dd *ngIf=\"!subscription.hasExpiration\">{{ \"neverExpires\" | i18n }}</dd>\n  </dl>\n\n  <a\n    bitButton\n    buttonType=\"secondary\"\n    href=\"{{ this.cloudWebVaultUrl }}\"\n    target=\"_blank\"\n    rel=\"noopener\"\n  >\n    {{ \"launchCloudSubscription\" | i18n }}\n  </a>\n  <form [formGroup]=\"form\">\n    <bit-radio-group formControlName=\"updateMethod\">\n      <h2 class=\"mt-5\">\n        {{ \"licenseAndBillingManagement\" | i18n }}\n      </h2>\n      <bit-radio-button\n        id=\"automatic-sync\"\n        [value]=\"licenseOptions.SYNC\"\n        [disabled]=\"disableLicenseSyncControl\"\n        class=\"tw-block\"\n      >\n        <bit-label\n          >{{ \"automaticSync\" | i18n }}\n          <a\n            href=\"https://bitwarden.com/help/families-for-enterprise-self-hosted/\"\n            target=\"_blank\"\n            rel=\"noopener\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n            <span class=\"sr-only\">{{ \"billingSyncHelp\" | i18n }}</span>\n          </a>\n        </bit-label>\n        <bit-hint>\n          {{ \"billingSyncDesc\" | i18n }}\n        </bit-hint>\n      </bit-radio-button>\n      <ng-container *ngIf=\"updateMethod === licenseOptions.SYNC\">\n        <button\n          bitButton\n          buttonType=\"secondary\"\n          type=\"button\"\n          (click)=\"manageBillingSyncSelfHosted()\"\n        >\n          {{ \"manageBillingSync\" | i18n }}\n        </button>\n        <button\n          bitButton\n          buttonType=\"primary\"\n          type=\"button\"\n          [bitAction]=\"syncLicense\"\n          [disabled]=\"!billingSyncEnabled\"\n        >\n          {{ \"syncLicense\" | i18n }}\n        </button>\n      </ng-container>\n\n      <bit-radio-button id=\"manual-upload\" [value]=\"licenseOptions.UPLOAD\" class=\"tw-mt-6 tw-block\">\n        <bit-label>{{ \"manualUpload\" | i18n }}</bit-label>\n        <bit-hint>\n          {{ \"manualUploadDesc\" | i18n }}\n        </bit-hint>\n      </bit-radio-button>\n      <ng-container *ngIf=\"updateMethod === licenseOptions.UPLOAD\">\n        <h3 class=\"tw-font-semibold\">{{ \"uploadLicense\" | i18n }}</h3>\n        <app-update-license\n          [organizationId]=\"organizationId\"\n          [showCancel]=\"false\"\n          (onUpdated)=\"licenseUploaded()\"\n        ></app-update-license>\n      </ng-container>\n    </bit-radio-group>\n  </form>\n</ng-container>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { FormControl, FormGroup } from \"@angular/forms\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { concatMap, Subject, takeUntil } from \"rxjs\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/admin-console/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/admin-console/abstractions/organization/organization.service.abstraction\";\nimport { OrganizationConnectionType } from \"@bitwarden/common/admin-console/enums\";\nimport { Organization } from \"@bitwarden/common/admin-console/models/domain/organization\";\nimport { OrganizationConnectionResponse } from \"@bitwarden/common/admin-console/models/response/organization-connection.response\";\nimport { BillingSyncConfigApi } from \"@bitwarden/common/billing/models/api/billing-sync-config.api\";\nimport { SelfHostedOrganizationSubscriptionView } from \"@bitwarden/common/billing/models/view/self-hosted-organization-subscription.view\";\nimport { EnvironmentService } from \"@bitwarden/common/platform/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/platform/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/platform/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/platform/abstractions/platform-utils.service\";\nimport { DialogService } from \"@bitwarden/components\";\n\nimport { BillingSyncKeyComponent } from \"./billing-sync-key.component\";\n\nenum LicenseOptions {\n  SYNC = 0,\n  UPLOAD = 1,\n}\n\n@Component({\n  templateUrl: \"organization-subscription-selfhost.component.html\",\n})\nexport class OrganizationSubscriptionSelfhostComponent implements OnInit, OnDestroy {\n  subscription: SelfHostedOrganizationSubscriptionView;\n  organizationId: string;\n  userOrg: Organization;\n  cloudWebVaultUrl: string;\n\n  licenseOptions = LicenseOptions;\n  form = new FormGroup({\n    updateMethod: new FormControl(LicenseOptions.UPLOAD),\n  });\n\n  disableLicenseSyncControl = false;\n\n  firstLoaded = false;\n  loading = false;\n\n  private _existingBillingSyncConnection: OrganizationConnectionResponse<BillingSyncConfigApi>;\n\n  private destroy$ = new Subject<void>();\n\n  set existingBillingSyncConnection(value: OrganizationConnectionResponse<BillingSyncConfigApi>) {\n    this._existingBillingSyncConnection = value;\n\n    this.form\n      .get(\"updateMethod\")\n      .setValue(this.billingSyncEnabled ? LicenseOptions.SYNC : LicenseOptions.UPLOAD);\n  }\n\n  get existingBillingSyncConnection() {\n    return this._existingBillingSyncConnection;\n  }\n\n  get billingSyncEnabled() {\n    return this.existingBillingSyncConnection?.enabled;\n  }\n\n  /**\n   * Render the subscription as expired.\n   */\n  get showAsExpired() {\n    return this.subscription.hasSeparateGracePeriod\n      ? this.subscription.isExpiredWithoutGracePeriod\n      : this.subscription.isExpiredAndOutsideGracePeriod;\n  }\n\n  constructor(\n    private messagingService: MessagingService,\n    private apiService: ApiService,\n    private organizationService: OrganizationService,\n    private route: ActivatedRoute,\n    private organizationApiService: OrganizationApiServiceAbstraction,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private environmentService: EnvironmentService,\n    private dialogService: DialogService\n  ) {\n    this.cloudWebVaultUrl = this.environmentService.getCloudWebVaultUrl();\n  }\n\n  async ngOnInit() {\n    this.route.params\n      .pipe(\n        concatMap(async (params) => {\n          this.organizationId = params.organizationId;\n          await this.load();\n          await this.loadOrganizationConnection();\n          this.firstLoaded = true;\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n    this.loading = true;\n    this.userOrg = this.organizationService.get(this.organizationId);\n    if (this.userOrg.canViewSubscription) {\n      const subscriptionResponse = await this.organizationApiService.getSubscription(\n        this.organizationId\n      );\n      this.subscription = new SelfHostedOrganizationSubscriptionView(subscriptionResponse);\n    }\n\n    this.loading = false;\n  }\n\n  async loadOrganizationConnection() {\n    if (!this.firstLoaded) {\n      const cloudCommunicationEnabled = await this.apiService.getCloudCommunicationsEnabled();\n      this.disableLicenseSyncControl = !cloudCommunicationEnabled;\n    }\n\n    if (this.disableLicenseSyncControl) {\n      return;\n    }\n\n    this.existingBillingSyncConnection = await this.apiService.getOrganizationConnection(\n      this.organizationId,\n      OrganizationConnectionType.CloudBillingSync,\n      BillingSyncConfigApi\n    );\n  }\n\n  licenseUploaded() {\n    this.load();\n    this.messagingService.send(\"updatedOrgLicense\");\n  }\n\n  manageBillingSyncSelfHosted() {\n    BillingSyncKeyComponent.open(this.dialogService, {\n      entityId: this.organizationId,\n      existingConnectionId: this.existingBillingSyncConnection?.id,\n      billingSyncKey: this.existingBillingSyncConnection?.config?.billingSyncKey,\n      setParentConnection: (connection: OrganizationConnectionResponse<BillingSyncConfigApi>) => {\n        this.existingBillingSyncConnection = connection;\n      },\n    });\n  }\n\n  syncLicense = async () => {\n    this.form.get(\"updateMethod\").setValue(LicenseOptions.SYNC);\n    await this.organizationApiService.selfHostedSyncLicense(this.organizationId);\n\n    this.load();\n    await this.loadOrganizationConnection();\n    this.messagingService.send(\"updatedOrgLicense\");\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"licenseSyncSuccess\"));\n  };\n\n  get billingSyncSetUp() {\n    return this.existingBillingSyncConnection?.id != null;\n  }\n\n  get updateMethod() {\n    return this.form.get(\"updateMethod\").value;\n  }\n\n  get lastLicenseSync() {\n    return this.existingBillingSyncConnection?.config?.lastLicenseSync;\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { canAccessBillingTab } from \"@bitwarden/common/admin-console/abstractions/organization/organization.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/admin-console/models/domain/organization\";\n\nimport { OrganizationPermissionsGuard } from \"../../admin-console/organizations/guards/org-permissions.guard\";\nimport { WebPlatformUtilsService } from \"../../core/web-platform-utils.service\";\nimport { PaymentMethodComponent } from \"../shared\";\n\nimport { OrgBillingHistoryViewComponent } from \"./organization-billing-history-view.component\";\nimport { OrganizationBillingTabComponent } from \"./organization-billing-tab.component\";\nimport { OrganizationSubscriptionCloudComponent } from \"./organization-subscription-cloud.component\";\nimport { OrganizationSubscriptionSelfhostComponent } from \"./organization-subscription-selfhost.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: OrganizationBillingTabComponent,\n    canActivate: [OrganizationPermissionsGuard],\n    data: { organizationPermissions: canAccessBillingTab },\n    children: [\n      { path: \"\", pathMatch: \"full\", redirectTo: \"subscription\" },\n      {\n        path: \"subscription\",\n        component: WebPlatformUtilsService.isSelfHost()\n          ? OrganizationSubscriptionSelfhostComponent\n          : OrganizationSubscriptionCloudComponent,\n        data: { titleId: \"subscription\" },\n      },\n      {\n        path: \"payment-method\",\n        component: PaymentMethodComponent,\n        canActivate: [OrganizationPermissionsGuard],\n        data: {\n          titleId: \"paymentMethod\",\n          organizationPermissions: (org: Organization) => org.canEditPaymentMethods,\n        },\n      },\n      {\n        path: \"history\",\n        component: OrgBillingHistoryViewComponent,\n        canActivate: [OrganizationPermissionsGuard],\n        data: {\n          titleId: \"billingHistory\",\n          organizationPermissions: (org: Organization) => org.canViewBillingHistory,\n        },\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OrganizationBillingRoutingModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { UserVerificationModule } from \"../../auth/shared/components/user-verification\";\nimport { BillingSharedModule } from \"../shared\";\n\nimport { AdjustSubscription } from \"./adjust-subscription.component\";\nimport { BillingSyncApiKeyComponent } from \"./billing-sync-api-key.component\";\nimport { BillingSyncKeyComponent } from \"./billing-sync-key.component\";\nimport { ChangePlanComponent } from \"./change-plan.component\";\nimport { DownloadLicenseComponent } from \"./download-license.component\";\nimport { OrgBillingHistoryViewComponent } from \"./organization-billing-history-view.component\";\nimport { OrganizationBillingRoutingModule } from \"./organization-billing-routing.module\";\nimport { OrganizationBillingTabComponent } from \"./organization-billing-tab.component\";\nimport { OrganizationPlansComponent } from \"./organization-plans.component\";\nimport { OrganizationSubscriptionCloudComponent } from \"./organization-subscription-cloud.component\";\nimport { OrganizationSubscriptionSelfhostComponent } from \"./organization-subscription-selfhost.component\";\nimport { SecretsManagerAdjustSubscriptionComponent } from \"./sm-adjust-subscription.component\";\nimport { SecretsManagerSubscribeStandaloneComponent } from \"./sm-subscribe-standalone.component\";\nimport { SubscriptionHiddenComponent } from \"./subscription-hidden.component\";\n\n@NgModule({\n  imports: [\n    OrganizationBillingRoutingModule,\n    UserVerificationModule,\n    BillingSharedModule,\n    OrganizationPlansComponent,\n  ],\n  declarations: [\n    AdjustSubscription,\n    BillingSyncApiKeyComponent,\n    BillingSyncKeyComponent,\n    ChangePlanComponent,\n    DownloadLicenseComponent,\n    OrganizationBillingTabComponent,\n    OrganizationSubscriptionCloudComponent,\n    OrganizationSubscriptionSelfhostComponent,\n    OrgBillingHistoryViewComponent,\n    SecretsManagerAdjustSubscriptionComponent,\n    SecretsManagerSubscribeStandaloneComponent,\n    SubscriptionHiddenComponent,\n  ],\n})\nexport class OrganizationBillingModule {}\n","<div [ngClass]=\"outerBarStyles\">\n  <div\n    [ngClass]=\"innerBarStyles\"\n    role=\"progressbar\"\n    aria-valuemin=\"0\"\n    aria-valuemax=\"100\"\n    attr.aria-valuenow=\"{{ barWidth }}\"\n    [ngStyle]=\"{ width: barWidth + '%' }\"\n  >\n    <div\n      *ngIf=\"displayText\"\n      class=\"tw-flex tw-h-full tw-flex-wrap tw-items-center tw-overflow-hidden\"\n    >\n      <!-- If text is too long to fit, wrap it below to hide -->\n      <div class=\"tw-h-full\">&nbsp;</div>\n      <div class=\"tw-pr-1\">{{ textContent }}</div>\n    </div>\n  </div>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\ntype SizeTypes = \"small\" | \"default\" | \"large\";\ntype BackgroundTypes = \"danger\" | \"primary\" | \"success\" | \"warning\";\n\nconst SizeClasses: Record<SizeTypes, string[]> = {\n  small: [\"tw-h-1\"],\n  default: [\"tw-h-4\"],\n  large: [\"tw-h-6\"],\n};\n\nconst BackgroundClasses: Record<BackgroundTypes, string[]> = {\n  danger: [\"tw-bg-danger-500\"],\n  primary: [\"tw-bg-primary-500\"],\n  success: [\"tw-bg-success-500\"],\n  warning: [\"tw-bg-warning-500\"],\n};\n\n@Component({\n  selector: \"bit-progress\",\n  templateUrl: \"./progress.component.html\",\n})\nexport class ProgressComponent {\n  @Input() barWidth = 0;\n  @Input() bgColor: BackgroundTypes = \"primary\";\n  @Input() showText = true;\n  @Input() size: SizeTypes = \"default\";\n  @Input() text?: string;\n\n  get displayText() {\n    return this.showText && this.size !== \"small\";\n  }\n\n  get outerBarStyles() {\n    return [\"tw-overflow-hidden\", \"tw-rounded\", \"tw-bg-secondary-100\"].concat(\n      SizeClasses[this.size]\n    );\n  }\n\n  get innerBarStyles() {\n    return [\n      \"tw-flex\",\n      \"tw-justify-center\",\n      \"tw-items-center\",\n      \"tw-whitespace-nowrap\",\n      \"tw-text-xs\",\n      \"tw-font-semibold\",\n      \"tw-text-contrast\",\n      \"tw-transition-all\",\n    ]\n      .concat(SizeClasses[this.size])\n      .concat(BackgroundClasses[this.bgColor]);\n  }\n\n  get textContent() {\n    return this.text || this.barWidth + \"%\";\n  }\n}\n"],"names":["load","OrgBillingHistoryViewComponent","constructor","organizationApiService","route","loading","firstLoaded","destroy$","Subject","ngOnInit","this","params","pipe","concatMap","organizationId","takeUntil","subscribe","ngOnDestroy","next","complete","billing","getBilling","OrganizationBillingTabComponent","organizationService","platformUtilsService","showPaymentAndHistory$","switchMap","get$","map","org","isSelfHost","canViewBillingHistory","canEditPaymentMethods","cancelRotate","rotateToken","BillingSyncApiKeyComponent","data","userVerificationService","apiService","i18nService","logService","formGroup","verification","required","submit","request","buildRequest","value","then","type","BillingSync","showRotateScreen","response","rotateApiKey","showToast","t","getOrCreateApiKey","e","error","hasBillingToken","copy","copyToClipboard","clientSecret","apiKey","keyRevisionDate","revisionDate","syncStatus","getSponsorshipSyncStatus","lastSyncDate","dayDiff","date1","date2","diffTime","Math","abs","getTime","round","submitButtonText","showLastSyncText","showAwaitingSyncText","daysBetween","Date","static","dialogService","open","OrganizationSubscriptionUpdateRequest","seatAdjustment","maxAutoscaleSeats","AdjustSubscription","seatPrice","interval","onAdjusted","limitSubscription","newSeatCount","currentSeatCount","newMaxSeats","additionalSeatCount","formPromise","updatePasswordManagerSeats","emit","limitSubscriptionChanged","additionalMaxSeatCount","adjustedSeatTotal","maxSeatTotal","ChangePlanComponent","onChanged","onCanceled","defaultUpgradePlan","FamiliesAnnually","defaultUpgradeProduct","Families","cancel","DownloadLicenseComponent","fileDownloadService","onDownloaded","installationId","getLicense","license","licenseString","JSON","stringify","download","fileName","blobData","OrganizationSmSubscriptionUpdateRequest","SecretsManagerAdjustSubscriptionComponent","monthlyServiceAccountPrice","options","additionalServiceAccountPrice","serviceAccountTotalCost","additionalServiceAccounts","seatTotalCost","seatCount","maxAdditionalServiceAccounts","maxTotalServiceAccounts","maxAutoscaleServiceAccounts","max","baseServiceAccountCount","maxServiceAccountTotalCost","maxSeatTotalCost","formBuilder","group","min","limitSeats","limitServiceAccounts","markAllAsTouched","invalid","serviceAccountAdjustment","updateSecretsManagerSubscription","valueChanges","maxAutoscaleSeatsControl","controls","maxAutoscaleServiceAccountsControl","setValidators","enable","emitEvent","disable","patchValue","SecretsManagerSubscribeRequest","SecretsManagerSubscribeStandaloneComponent","onSubscribe","additionalSmSeats","plan","hasAdditionalSeatsOption","userSeats","hasAdditionalServiceAccountOption","profileOrganization","subscribeToSecretsManager","organization","id","organizationData","isMember","isProviderUser","upsert","SubscriptionHiddenIcon","SubscriptionHiddenComponent","subscriptionHiddenIcon","changePlan","closeChangePlan","subscriptionAdjusted","adjustStorage","closeStorage","downloadLicense","manageBillingSync","closeDownloadLicense","OrganizationSubscriptionCloudComponent","datePipe","lineItems","showChangePlan","showDownloadLicense","adjustStorageAdd","showAdjustStorage","showAdjustSecretsManager","showSecretsManagerSubscribe","_smBetaEndingDate","_smGracePeriodEndingDate","discount","price","customerDiscount","active","percentOff","openSimpleDialog","title","key","content","reinstate","removeSponsorship","acceptButtonText","deleteRemoveSponsorship","snapshot","queryParamMap","get","productName","product","PasswordManager","SecretsManager","userOrg","canViewSubscription","sub","getSubscription","subscription","items","sort","sortSubscriptionItems","apiKeyResponse","getApiKeyInformation","hasBillingSyncToken","some","i","keyType","canEditSubscription","hasProvider","useSecretsManager","cancelled","subscriptionMarkedForCancel","secretsManagerPlan","secretsManagerBeta","nextInvoice","upcomingInvoice","subscriptionLineItems","lineItem","name","amount","quantity","sponsoredSubscriptionItem","addonSubscriptionItem","bitwardenProduct","isExpired","date","now","storagePercentage","maxStorageGb","storageGb","toFixed","storageProgressWidth","billingInterval","isAnnual","storageGbPrice","additionalStoragePricePerGb","seats","smOptions","smSeats","maxAutoscaleSmSeats","maxAutoscaleSmServiceAccounts","smServiceAccounts","baseServiceAccount","additionalPricePerServiceAccount","canAdjustSeats","isAdmin","isSponsoredSubscription","canDownloadLicense","planType","Free","canManageBillingSync","EnterpriseAnnually","EnterpriseMonthly","EnterpriseAnnually2019","EnterpriseMonthly2019","subscriptionDesc","toString","FamiliesAnnually2019","cancelAtEndDate","smBetaEndedDesc","translate","transform","daysRemaining","dialogRef","firstValueFrom","closed","add","showChangePlanButton","a","b","BillingSyncConfigApi","super","billingSyncKey","getResponseProperty","lastLicenseSyncString","lastLicenseSync","SelfHostedOrganizationSubscriptionView","planName","expirationWithGracePeriod","expiration","expirationWithoutGracePeriod","hasSeparateGracePeriod","hasExpiration","isExpiredWithoutGracePeriod","isExpiredAndOutsideGracePeriod","BillingSyncConfigRequest","BillingSyncKeyComponent","entityId","CloudBillingSync","existingConnectionId","createOrganizationConnection","updateOrganizationConnection","config","setParentConnection","close","deleteConnection","deleteOrganizationConnection","manageBillingSyncSelfHosted","licenseUploaded","LicenseOptions","OrganizationSubscriptionSelfhostComponent","existingBillingSyncConnection","_existingBillingSyncConnection","form","setValue","billingSyncEnabled","SYNC","UPLOAD","enabled","showAsExpired","messagingService","environmentService","licenseOptions","updateMethod","disableLicenseSyncControl","syncLicense","selfHostedSyncLicense","loadOrganizationConnection","send","cloudWebVaultUrl","getCloudWebVaultUrl","subscriptionResponse","cloudCommunicationEnabled","getCloudCommunicationsEnabled","getOrganizationConnection","connection","billingSyncSetUp","routes","path","component","canActivate","organizationPermissions","children","pathMatch","redirectTo","titleId","OrganizationBillingRoutingModule","forChild","OrganizationBillingModule","SizeClasses","small","default","large","BackgroundClasses","danger","primary","success","warning","ProgressComponent","barWidth","bgColor","showText","size","displayText","outerBarStyles","concat","innerBarStyles","textContent","text"],"sourceRoot":""}