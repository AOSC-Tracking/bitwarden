{"version":3,"file":"74.4747f3da643d9068c504.js","mappings":"k0BAaE,0B,gBACE,S,gBACF,S,MAF0B,gDACxB,+E,yBAEF,uC,sBACE,wC,2BASM,qBAA0D,SAAY,S,yBAA9B,uBAAkB,sB,0CA6D5D,SACE,0CACE,oDACE,iDAAW,S,gBAA2B,QACtC,iDAOA,mDAKE,mGACD,QACD,kDAAU,U,iBAAwC,QACpD,mCACA,gEACA,mCACF,iCAEA,sDACE,iDAAW,U,iBAAkC,QAC7C,gDAOA,iDAKE,mGACD,QACH,iCACF,8B,0BAtCiB,0CAaT,6CAEQ,wDAEW,0CAAyB,eAKrC,mDAaT,4C,2BA5FR,SACE,wCACE,4CACE,S,gBACF,QAEA,4CACE,0CACE,kDASF,mCACA,2CACE,kDACE,U,iBACF,QACF,mCACF,iCAEA,8CACE,U,iBACF,QAEA,8CACE,2CACE,kDASF,mCACA,2CACE,kDAA2E,U,iBAEzE,QACJ,mCACF,iCAEA,8CACE,U,iBACF,QACF,+BACA,sCAEA,6DA0CF,8B,sBA7FM,gFAUI,+DAA8C,yEAO9C,yFAMJ,kGAUI,4DAA2C,sEAM8B,iDAO7E,kGAKW,gF,gFArFvB,oBAEE,6DAAY,QAAAA,SAAQ,IAKpB,iCACE,gCAAI,S,gBAA0B,QAChC,wBAEA,kDAGA,8DAKA,qCACE,qCACE,gDACE,+CAA2C,U,iBAAyB,QACpE,4CACE,qDACF,+BACF,6BACF,2BACF,yBACA,mCACE,sCACE,yDAkGA,6CAME,wC,iBACA,wCAAM,U,iBAA4B,QACpC,6BACF,2BACF,yBACF,sB,oCAzIE,oCAA4B,0BAKtB,0CAGgE,0CAKnE,2CAM8C,0CAEnB,0CAOX,oDAqGb,yDAA6C,0CAGT,+CAC9B,4C,ECnHP,MAAMC,UAAyC,IACpDC,YACEC,EACAC,EACAC,EACAC,EACAC,EACQC,EACRC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEAC,MACEZ,EACAC,EACAC,EACAC,EACAC,EACAE,EACAC,EACAC,EACAC,EACAC,EACAC,GAnBM,KAAAN,MAAAA,CAqBV,CAEcQ,uBACZ,OAAO,CACT,CAEMC,W,yGAEJC,KAAKV,MAAMW,OAAOA,OAAOC,OAAOC,WAAiBD,GAAW,EAAD,gCACzDF,KAAKI,eAAiBF,EAAOE,cAC/B,YACM,EAAML,SAAQ,UACtB,G,CAEAM,gBACE,OAAIL,KAAKM,sBACAN,KAAKZ,cAAcmB,2BAA2BP,KAAKQ,aAAcR,KAAKI,gBAEtEJ,KAAKZ,cAAcqB,sBAAsBT,KAAKI,eAAgBJ,KAAKU,OAE9E,CAEAC,cACE,OAAOd,MAAMc,YAAY,MAC3B,CAEMC,e,+CACEZ,KAAKX,uBAAuBwB,QAChC,KAAUC,iCACV,KACA,KACAd,KAAKI,eAET,G,mCA7DWrB,GAAgC,yI,mBAAhCA,EAAgC,svDDtB7C,cACA,wCA6IA,e,MAxIG,oC,sJEEH,MAAMgC,EAAiB,CACrB,CACEC,KAAM,GACNC,UAAWlC,EACXmC,YAAa,CAAC,KACdC,KAAM,CACJC,QAAS,cACTC,wBAA0BC,GAAsBA,EAAIC,yBAQnD,MAAMC,G,iCAAAA,EAAoC,E,mBAApCA,I,uBAFD,KAAaC,SAASV,MCX3B,MAAMW,G,iCAAAA,EAA6B,E,mBAA7BA,I,uBAHD,IAAc,IAAuBF,I","sources":["webpack://@bitwarden/web-vault/./src/app/tools/vault-export/export.component.html","webpack://@bitwarden/web-vault/./src/app/admin-console/organizations/tools/vault-export/org-vault-export.component.ts","webpack://@bitwarden/web-vault/./src/app/admin-console/organizations/tools/vault-export/org-vault-export-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/admin-console/organizations/tools/vault-export/org-vault-export.module.ts"],"sourcesContent":["<!-- Please remove this disable statement when editing this file! -->\n<!-- eslint-disable tailwindcss/no-custom-classname -->\n<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  [formGroup]=\"exportForm\"\n  *ngIf=\"exportForm\"\n>\n  <div class=\"page-header\">\n    <h1>{{ \"exportVault\" | i18n }}</h1>\n  </div>\n\n  <app-callout type=\"error\" title=\"{{ 'vaultExportDisabled' | i18n }}\" *ngIf=\"disabledByPolicy\">\n    {{ \"personalVaultExportPolicyInEffect\" | i18n }}\n  </app-callout>\n  <app-export-scope-callout\n    [organizationId]=\"organizationId\"\n    *ngIf=\"!disabledByPolicy\"\n  ></app-export-scope-callout>\n\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <bit-form-field>\n        <bit-label class=\"tw-text-lg\" for=\"format\">{{ \"fileFormat\" | i18n }}</bit-label>\n        <select bitInput name=\"format\" formControlName=\"format\">\n          <option *ngFor=\"let f of formatOptions\" [value]=\"f.value\">{{ f.name }}</option>\n        </select>\n      </bit-form-field>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"form-group col-6\">\n      <ng-container *ngIf=\"format === 'encrypted_json'\">\n        <div role=\"radiogroup\" aria-labelledby=\"exportTypeHeading\">\n          <label id=\"exportTypeHeading\" class=\"tw-semi-bold tw-text-lg\">\n            {{ \"exportTypeHeading\" | i18n }}\n          </label>\n\n          <div appBoxRow name=\"FileTypeOptions\" class=\"tw-flex tw-items-center\">\n            <div>\n              <input\n                type=\"radio\"\n                class=\"radio\"\n                name=\"fileEncryptionType\"\n                id=\"AccountEncrypted\"\n                [value]=\"encryptedExportType.AccountEncrypted\"\n                formControlName=\"fileEncryptionType\"\n                [checked]=\"fileEncryptionType === encryptedExportType.AccountEncrypted\"\n              />\n            </div>\n            <div>\n              <label class=\"tw-semi-bold tw-text-md tw-my-1 tw-ml-1\" for=\"AccountEncrypted\">\n                {{ \"accountRestricted\" | i18n }}\n              </label>\n            </div>\n          </div>\n\n          <div class=\"tw-regular ml-3 pb-2 tw-text-sm\">\n            {{ \"accountRestrictedOptionDescription\" | i18n }}\n          </div>\n\n          <div class=\"tw-flex tw-items-center\">\n            <div>\n              <input\n                type=\"radio\"\n                class=\"radio\"\n                name=\"fileEncryptionType\"\n                id=\"FileEncrypted\"\n                [value]=\"encryptedExportType.FileEncrypted\"\n                formControlName=\"fileEncryptionType\"\n                [checked]=\"fileEncryptionType === encryptedExportType.FileEncrypted\"\n              />\n            </div>\n            <div>\n              <label class=\"tw-semi-bold tw-text-md tw-my-1 tw-ml-1\" for=\"FileEncrypted\">{{\n                \"passwordProtected\" | i18n\n              }}</label>\n            </div>\n          </div>\n\n          <div class=\"tw-regular ml-3 tw-text-sm\">\n            {{ \"passwordProtectedOptionDescription\" | i18n }}\n          </div>\n        </div>\n        <br />\n\n        <ng-container *ngIf=\"fileEncryptionType == encryptedExportType.FileEncrypted\">\n          <div class=\"tw-mb-3\">\n            <bit-form-field>\n              <bit-label>{{ \"filePassword\" | i18n }}</bit-label>\n              <input\n                bitInput\n                type=\"password\"\n                id=\"filePassword\"\n                formControlName=\"filePassword\"\n                name=\"password\"\n              />\n              <button\n                type=\"button\"\n                bitSuffix\n                bitIconButton\n                bitPasswordInputToggle\n                [(toggled)]=\"showFilePassword\"\n              ></button>\n              <bit-hint>{{ \"exportPasswordDescription\" | i18n }}</bit-hint>\n            </bit-form-field>\n            <app-password-strength [password]=\"filePassword\" [showText]=\"true\">\n            </app-password-strength>\n          </div>\n\n          <bit-form-field>\n            <bit-label>{{ \"confirmFilePassword\" | i18n }}</bit-label>\n            <input\n              bitInput\n              type=\"password\"\n              id=\"confirmFilePassword\"\n              formControlName=\"confirmFilePassword\"\n              name=\"confirmFilePassword\"\n            />\n            <button\n              type=\"button\"\n              bitSuffix\n              bitIconButton\n              bitPasswordInputToggle\n              [(toggled)]=\"showFilePassword\"\n            ></button>\n          </bit-form-field>\n        </ng-container>\n      </ng-container>\n\n      <button\n        type=\"submit\"\n        class=\"btn btn-primary btn-submit\"\n        [disabled]=\"form.loading || disabledByPolicy\"\n        [ngClass]=\"{ manual: disabledByPolicy }\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"confirmFormat\" | i18n }}</span>\n      </button>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { EventCollectionService } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { PolicyService } from \"@bitwarden/common/admin-console/abstractions/policy/policy.service.abstraction\";\nimport { UserVerificationService } from \"@bitwarden/common/auth/abstractions/user-verification/user-verification.service.abstraction\";\nimport { EventType } from \"@bitwarden/common/enums\";\nimport { CryptoService } from \"@bitwarden/common/platform/abstractions/crypto.service\";\nimport { FileDownloadService } from \"@bitwarden/common/platform/abstractions/file-download/file-download.service\";\nimport { I18nService } from \"@bitwarden/common/platform/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/platform/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/platform/abstractions/platform-utils.service\";\nimport { DialogService } from \"@bitwarden/components\";\nimport { VaultExportServiceAbstraction } from \"@bitwarden/exporter/vault-export\";\n\nimport { ExportComponent } from \"../../../../tools/vault-export/export.component\";\n\n@Component({\n  selector: \"app-org-export\",\n  templateUrl: \"../../../../tools/vault-export/export.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class OrganizationVaultExportComponent extends ExportComponent {\n  constructor(\n    cryptoService: CryptoService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    exportService: VaultExportServiceAbstraction,\n    eventCollectionService: EventCollectionService,\n    private route: ActivatedRoute,\n    policyService: PolicyService,\n    logService: LogService,\n    userVerificationService: UserVerificationService,\n    formBuilder: UntypedFormBuilder,\n    fileDownloadService: FileDownloadService,\n    dialogService: DialogService\n  ) {\n    super(\n      cryptoService,\n      i18nService,\n      platformUtilsService,\n      exportService,\n      eventCollectionService,\n      policyService,\n      logService,\n      userVerificationService,\n      formBuilder,\n      fileDownloadService,\n      dialogService\n    );\n  }\n\n  protected get disabledByPolicy(): boolean {\n    return false;\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n    });\n    await super.ngOnInit();\n  }\n\n  getExportData() {\n    if (this.isFileEncryptedExport) {\n      return this.exportService.getPasswordProtectedExport(this.filePassword, this.organizationId);\n    } else {\n      return this.exportService.getOrganizationExport(this.organizationId, this.format);\n    }\n  }\n\n  getFileName() {\n    return super.getFileName(\"org\");\n  }\n\n  async collectEvent(): Promise<void> {\n    await this.eventCollectionService.collect(\n      EventType.Organization_ClientExportedVault,\n      null,\n      null,\n      this.organizationId\n    );\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { Organization } from \"@bitwarden/common/admin-console/models/domain/organization\";\n\nimport { OrganizationPermissionsGuard } from \"../../guards/org-permissions.guard\";\n\nimport { OrganizationVaultExportComponent } from \"./org-vault-export.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: OrganizationVaultExportComponent,\n    canActivate: [OrganizationPermissionsGuard],\n    data: {\n      titleId: \"exportVault\",\n      organizationPermissions: (org: Organization) => org.canAccessImportExport,\n    },\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n})\nexport class OrganizationVaultExportRoutingModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { LooseComponentsModule, SharedModule } from \"../../../../shared\";\n\nimport { OrganizationVaultExportRoutingModule } from \"./org-vault-export-routing.module\";\nimport { OrganizationVaultExportComponent } from \"./org-vault-export.component\";\n\n@NgModule({\n  imports: [SharedModule, LooseComponentsModule, OrganizationVaultExportRoutingModule],\n  declarations: [OrganizationVaultExportComponent],\n})\nexport class OrganizationVaultExportModule {}\n"],"names":["submit","OrganizationVaultExportComponent","constructor","cryptoService","i18nService","platformUtilsService","exportService","eventCollectionService","route","policyService","logService","userVerificationService","formBuilder","fileDownloadService","dialogService","super","disabledByPolicy","ngOnInit","this","parent","params","subscribe","organizationId","getExportData","isFileEncryptedExport","getPasswordProtectedExport","filePassword","getOrganizationExport","format","getFileName","collectEvent","collect","Organization_ClientExportedVault","routes","path","component","canActivate","data","titleId","organizationPermissions","org","canAccessImportExport","OrganizationVaultExportRoutingModule","forChild","OrganizationVaultExportModule"],"sourceRoot":""}