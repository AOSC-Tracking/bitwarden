{"version":3,"file":"74.555133792ea8b7f58415.js","mappings":"o4BASE,0B,gBACE,S,gBACF,S,MAF2B,gDACzB,+E,yBAEF,uC,sBACE,wC,0BAQE,yB,yBAEE,oBAAc,e,2BANpB,0BACE,uCAAW,S,gBAAyB,QACpC,2CACE,6C,gBACA,qD,kBAMF,2BACF,0B,sBAVa,wCAEG,6CAEI,sD,0BAWhB,yB,yBAA4C,uBAAiB,e,0CA+B/D,SACE,sCACE,gDACE,6CAAW,S,gBAA2B,QACtC,6CAOA,+CAKE,mGACD,QACD,8CAAU,U,iBAAwC,QACpD,+BACA,4DAAoE,sBACtE,6BACA,gDACE,6CAAW,U,iBAAkC,QAC7C,4CAOA,6CAKE,mGACD,QACH,6BACF,0B,0BApCiB,0CAaT,6CAEQ,wDAEW,0CAAyB,eAGrC,mDAaT,4C,2BA/DR,SACE,gDACE,yCAAW,S,gBAAgC,QAE3C,qDAOE,4CAAW,U,iBAAgC,QAC3C,4CAAU,U,iBAAiD,QAC7D,6BAEA,uDAOE,6CAAW,U,iBAAgC,QAC3C,4CAAU,U,iBAAiD,QAC7D,6BACF,2BAEA,wDAwCF,0B,sBAjEe,+CAMT,+DAGW,iDACD,kEAOV,4DAGW,iDACD,kEAIC,gF,0CAhEnB,oBAEE,6DAAY,QAAAA,SAAQ,IAKpB,gCAAuB,S,gBAA0B,QAEjD,iDAGA,4DAKA,uD,kBAaA,8CACE,yCAAW,U,iBAAyB,QACpC,4CACE,oDACF,2BACF,yBAEA,sDAqEA,wCAOE,U,iBACF,QACF,sB,oCAhHE,oCAA4B,0BAIL,0CAEgD,0CAKpE,2CAGc,kEAcJ,0CAEiB,0CAIf,mDAyEb,oCAAwB,+BAGxB,4D,ECzFG,MAAMC,UAAyC,IACpDC,YACEC,EACAC,EACAC,EACAC,EACQC,EACRC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEAC,MACEb,EACAC,EACAC,EACAC,EACAE,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAtBM,KAAAR,MAAAA,CAwBV,CAEcU,uBACZ,OAAO,CACT,CAEMC,W,yGAEJC,KAAKZ,MAAMa,OAAOA,OAAOC,OAAOC,WAAiBD,GAAW,EAAD,gCACzDF,KAAKI,eAAiBF,EAAOE,cAC/B,YACM,EAAML,SAAQ,UACtB,G,CAEAM,gBACE,OAAIL,KAAKM,sBACAN,KAAKd,cAAcqB,2BAA2BP,KAAKQ,aAAcR,KAAKI,gBAEtEJ,KAAKd,cAAcuB,sBAAsBT,KAAKI,eAAgBJ,KAAKU,OAE9E,CAEAC,cACE,OAAOd,MAAMc,YAAY,MAC3B,CAEMC,e,+CACEZ,KAAKb,uBAAuB0B,QAChC,KAAUC,iCACV,KACA,KACAd,KAAKI,eAET,G,mCA/DWtB,GAAgC,qJ,mBAAhCA,EAAgC,q7CDxB7C,0BAoHA,e,KA/GG,0B,uJEIH,MAAMiC,EAAiB,CACrB,CACEC,KAAM,GACNC,UAAWnC,EACXoC,YAAa,CAAC,KACdC,KAAM,CACJC,QAAS,cACTC,wBAA0BC,GAAsBA,EAAIC,yBAQnD,MAAMC,G,iCAAAA,EAAoC,E,mBAApCA,I,uBAFD,KAAaC,SAASV,MCX3B,MAAMW,G,iCAAAA,EAA6B,E,mBAA7BA,I,uBAHD,IAAc,IAAuBF,I","sources":["webpack://@bitwarden/web-vault/./src/app/tools/vault-export/export.component.html","webpack://@bitwarden/web-vault/./src/app/admin-console/organizations/tools/vault-export/org-vault-export.component.ts","webpack://@bitwarden/web-vault/./src/app/admin-console/organizations/tools/vault-export/org-vault-export-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/admin-console/organizations/tools/vault-export/org-vault-export.module.ts"],"sourcesContent":["<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  [formGroup]=\"exportForm\"\n  *ngIf=\"exportForm\"\n>\n  <h1 bitTypography=\"h1\">{{ \"exportVault\" | i18n }}</h1>\n\n  <bit-callout type=\"danger\" title=\"{{ 'vaultExportDisabled' | i18n }}\" *ngIf=\"disabledByPolicy\">\n    {{ \"personalVaultExportPolicyInEffect\" | i18n }}\n  </bit-callout>\n  <app-export-scope-callout\n    [organizationId]=\"organizationId\"\n    *ngIf=\"!disabledByPolicy\"\n  ></app-export-scope-callout>\n\n  <bit-form-field *ngIf=\"flexibleCollectionsEnabled$ | async\">\n    <bit-label>{{ \"exportFrom\" | i18n }}</bit-label>\n    <bit-select formControlName=\"vaultSelector\">\n      <bit-option [label]=\"'myVault' | i18n\" value=\"myVault\" icon=\"bwi-user\" />\n      <bit-option\n        *ngFor=\"let o of organizations$ | async\"\n        [value]=\"o.id\"\n        [label]=\"o.name\"\n        icon=\"bwi-business\"\n      />\n    </bit-select>\n  </bit-form-field>\n\n  <bit-form-field>\n    <bit-label>{{ \"fileFormat\" | i18n }}</bit-label>\n    <bit-select formControlName=\"format\">\n      <bit-option *ngFor=\"let f of formatOptions\" [value]=\"f.value\" [label]=\"f.name\" />\n    </bit-select>\n  </bit-form-field>\n\n  <ng-container *ngIf=\"format === 'encrypted_json'\">\n    <bit-radio-group formControlName=\"fileEncryptionType\" aria-label=\"exportTypeHeading\">\n      <bit-label>{{ \"exportTypeHeading\" | i18n }}</bit-label>\n\n      <bit-radio-button\n        id=\"AccountEncrypted\"\n        name=\"fileEncryptionType\"\n        class=\"tw-block\"\n        [value]=\"encryptedExportType.AccountEncrypted\"\n        checked=\"fileEncryptionType === encryptedExportType.AccountEncrypted\"\n      >\n        <bit-label>{{ \"accountRestricted\" | i18n }}</bit-label>\n        <bit-hint>{{ \"accountRestrictedOptionDescription\" | i18n }}</bit-hint>\n      </bit-radio-button>\n\n      <bit-radio-button\n        id=\"FileEncrypted\"\n        name=\"fileEncryptionType\"\n        class=\"tw-block\"\n        [value]=\"encryptedExportType.FileEncrypted\"\n        checked=\"fileEncryptionType === encryptedExportType.FileEncrypted\"\n      >\n        <bit-label>{{ \"passwordProtected\" | i18n }}</bit-label>\n        <bit-hint>{{ \"passwordProtectedOptionDescription\" | i18n }}</bit-hint>\n      </bit-radio-button>\n    </bit-radio-group>\n\n    <ng-container *ngIf=\"fileEncryptionType == encryptedExportType.FileEncrypted\">\n      <div class=\"tw-mb-3\">\n        <bit-form-field>\n          <bit-label>{{ \"filePassword\" | i18n }}</bit-label>\n          <input\n            bitInput\n            type=\"password\"\n            id=\"filePassword\"\n            formControlName=\"filePassword\"\n            name=\"password\"\n          />\n          <button\n            type=\"button\"\n            bitSuffix\n            bitIconButton\n            bitPasswordInputToggle\n            [(toggled)]=\"showFilePassword\"\n          ></button>\n          <bit-hint>{{ \"exportPasswordDescription\" | i18n }}</bit-hint>\n        </bit-form-field>\n        <app-password-strength [password]=\"filePassword\" [showText]=\"true\"> </app-password-strength>\n      </div>\n      <bit-form-field>\n        <bit-label>{{ \"confirmFilePassword\" | i18n }}</bit-label>\n        <input\n          bitInput\n          type=\"password\"\n          id=\"confirmFilePassword\"\n          formControlName=\"confirmFilePassword\"\n          name=\"confirmFilePassword\"\n        />\n        <button\n          type=\"button\"\n          bitSuffix\n          bitIconButton\n          bitPasswordInputToggle\n          [(toggled)]=\"showFilePassword\"\n        ></button>\n      </bit-form-field>\n    </ng-container>\n  </ng-container>\n\n  <button\n    bitButton\n    type=\"submit\"\n    buttonType=\"primary\"\n    [loading]=\"form.loading\"\n    [disabled]=\"disabledByPolicy\"\n  >\n    {{ \"confirmFormat\" | i18n }}\n  </button>\n</form>\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { EventCollectionService } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { OrganizationService } from \"@bitwarden/common/admin-console/abstractions/organization/organization.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/admin-console/abstractions/policy/policy.service.abstraction\";\nimport { UserVerificationService } from \"@bitwarden/common/auth/abstractions/user-verification/user-verification.service.abstraction\";\nimport { EventType } from \"@bitwarden/common/enums\";\nimport { ConfigServiceAbstraction } from \"@bitwarden/common/platform/abstractions/config/config.service.abstraction\";\nimport { FileDownloadService } from \"@bitwarden/common/platform/abstractions/file-download/file-download.service\";\nimport { I18nService } from \"@bitwarden/common/platform/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/platform/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/platform/abstractions/platform-utils.service\";\nimport { DialogService } from \"@bitwarden/components\";\nimport { VaultExportServiceAbstraction } from \"@bitwarden/exporter/vault-export\";\n\nimport { ExportComponent } from \"../../../../tools/vault-export/export.component\";\n\n@Component({\n  selector: \"app-org-export\",\n  templateUrl: \"../../../../tools/vault-export/export.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class OrganizationVaultExportComponent extends ExportComponent {\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    exportService: VaultExportServiceAbstraction,\n    eventCollectionService: EventCollectionService,\n    private route: ActivatedRoute,\n    policyService: PolicyService,\n    logService: LogService,\n    userVerificationService: UserVerificationService,\n    formBuilder: UntypedFormBuilder,\n    fileDownloadService: FileDownloadService,\n    dialogService: DialogService,\n    organizationService: OrganizationService,\n    configService: ConfigServiceAbstraction\n  ) {\n    super(\n      i18nService,\n      platformUtilsService,\n      exportService,\n      eventCollectionService,\n      policyService,\n      logService,\n      userVerificationService,\n      formBuilder,\n      fileDownloadService,\n      dialogService,\n      organizationService,\n      configService\n    );\n  }\n\n  protected get disabledByPolicy(): boolean {\n    return false;\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n    });\n    await super.ngOnInit();\n  }\n\n  getExportData() {\n    if (this.isFileEncryptedExport) {\n      return this.exportService.getPasswordProtectedExport(this.filePassword, this.organizationId);\n    } else {\n      return this.exportService.getOrganizationExport(this.organizationId, this.format);\n    }\n  }\n\n  getFileName() {\n    return super.getFileName(\"org\");\n  }\n\n  async collectEvent(): Promise<void> {\n    await this.eventCollectionService.collect(\n      EventType.Organization_ClientExportedVault,\n      null,\n      null,\n      this.organizationId\n    );\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { Organization } from \"@bitwarden/common/admin-console/models/domain/organization\";\n\nimport { OrganizationPermissionsGuard } from \"../../guards/org-permissions.guard\";\n\nimport { OrganizationVaultExportComponent } from \"./org-vault-export.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: OrganizationVaultExportComponent,\n    canActivate: [OrganizationPermissionsGuard],\n    data: {\n      titleId: \"exportVault\",\n      organizationPermissions: (org: Organization) => org.canAccessImportExport,\n    },\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n})\nexport class OrganizationVaultExportRoutingModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { LooseComponentsModule, SharedModule } from \"../../../../shared\";\n\nimport { OrganizationVaultExportRoutingModule } from \"./org-vault-export-routing.module\";\nimport { OrganizationVaultExportComponent } from \"./org-vault-export.component\";\n\n@NgModule({\n  imports: [SharedModule, LooseComponentsModule, OrganizationVaultExportRoutingModule],\n  declarations: [OrganizationVaultExportComponent],\n})\nexport class OrganizationVaultExportModule {}\n"],"names":["submit","OrganizationVaultExportComponent","constructor","i18nService","platformUtilsService","exportService","eventCollectionService","route","policyService","logService","userVerificationService","formBuilder","fileDownloadService","dialogService","organizationService","configService","super","disabledByPolicy","ngOnInit","this","parent","params","subscribe","organizationId","getExportData","isFileEncryptedExport","getPasswordProtectedExport","filePassword","getOrganizationExport","format","getFileName","collectEvent","collect","Organization_ClientExportedVault","routes","path","component","canActivate","data","titleId","organizationPermissions","org","canAccessImportExport","OrganizationVaultExportRoutingModule","forChild","OrganizationVaultExportModule"],"sourceRoot":""}