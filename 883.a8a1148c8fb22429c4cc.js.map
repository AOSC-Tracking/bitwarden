{"version":3,"file":"883.a8a1148c8fb22429c4cc.js","mappings":"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","sources":["webpack://@bitwarden/web-vault/../../libs/common/src/models/request/storage.request.ts","webpack://@bitwarden/web-vault/./src/app/billing/shared/adjust-storage.component.html","webpack://@bitwarden/web-vault/./src/app/billing/shared/adjust-storage.component.ts","webpack://@bitwarden/web-vault/./src/app/billing/shared/billing-history.component.html","webpack://@bitwarden/web-vault/./src/app/billing/shared/billing-history.component.ts","webpack://@bitwarden/web-vault/./src/app/billing/shared/update-license.component.html","webpack://@bitwarden/web-vault/./src/app/billing/shared/update-license.component.ts"],"sourcesContent":["export class StorageRequest {\n  storageGbAdjustment: number;\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h3 class=\"card-body-header\">{{ (add ? \"addStorage\" : \"removeStorage\") | i18n }}</h3>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <label for=\"storageAdjustment\">{{\n          (add ? \"gbStorageAdd\" : \"gbStorageRemove\") | i18n\n        }}</label>\n        <input\n          id=\"storageAdjustment\"\n          class=\"form-control\"\n          type=\"number\"\n          name=\"StorageGbAdjustment\"\n          [(ngModel)]=\"storageAdjustment\"\n          min=\"0\"\n          max=\"99\"\n          step=\"1\"\n          required\n        />\n      </div>\n    </div>\n    <div *ngIf=\"add\" class=\"mb-3\">\n      <strong>{{ \"total\" | i18n }}:</strong> {{ storageAdjustment || 0 }} GB &times;\n      {{ storageGbPrice | currency : \"$\" }} = {{ adjustedStorageTotal | currency : \"$\" }} /{{\n        interval | i18n\n      }}\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n      {{ \"cancel\" | i18n }}\n    </button>\n    <small class=\"d-block text-muted mt-3\">\n      {{ (add ? \"storageAddNote\" : \"storageRemoveNote\") | i18n }}\n    </small>\n  </div>\n</form>\n<app-payment [showMethods]=\"false\"></app-payment>\n","import { Component, EventEmitter, Input, Output, ViewChild } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/admin-console/abstractions/organization/organization-api.service.abstraction\";\nimport { PaymentResponse } from \"@bitwarden/common/billing/models/response/payment.response\";\nimport { StorageRequest } from \"@bitwarden/common/models/request/storage.request\";\nimport { I18nService } from \"@bitwarden/common/platform/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/platform/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/platform/abstractions/platform-utils.service\";\n\nimport { PaymentComponent } from \"./payment.component\";\n\n@Component({\n  selector: \"app-adjust-storage\",\n  templateUrl: \"adjust-storage.component.html\",\n})\nexport class AdjustStorageComponent {\n  @Input() storageGbPrice = 0;\n  @Input() add = true;\n  @Input() organizationId: string;\n  @Input() interval = \"year\";\n  @Output() onAdjusted = new EventEmitter<number>();\n  @Output() onCanceled = new EventEmitter();\n\n  @ViewChild(PaymentComponent, { static: true }) paymentComponent: PaymentComponent;\n\n  storageAdjustment = 0;\n  formPromise: Promise<PaymentResponse | void>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async submit() {\n    try {\n      const request = new StorageRequest();\n      request.storageGbAdjustment = this.storageAdjustment;\n      if (!this.add) {\n        request.storageGbAdjustment *= -1;\n      }\n\n      let paymentFailed = false;\n      const action = async () => {\n        let response: Promise<PaymentResponse>;\n        if (this.organizationId == null) {\n          response = this.formPromise = this.apiService.postAccountStorage(request);\n        } else {\n          response = this.formPromise = this.organizationApiService.updateStorage(\n            this.organizationId,\n            request\n          );\n        }\n        const result = await response;\n        if (result != null && result.paymentIntentClientSecret != null) {\n          try {\n            await this.paymentComponent.handleStripeCardPayment(\n              result.paymentIntentClientSecret,\n              null\n            );\n          } catch {\n            paymentFailed = true;\n          }\n        }\n      };\n      this.formPromise = action();\n      await this.formPromise;\n      this.onAdjusted.emit(this.storageAdjustment);\n      if (paymentFailed) {\n        this.platformUtilsService.showToast(\n          \"warning\",\n          null,\n          this.i18nService.t(\"couldNotChargeCardPayInvoice\"),\n          { timeout: 10000 }\n        );\n        this.router.navigate([\"../billing\"], { relativeTo: this.activatedRoute });\n      } else {\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"adjustedStorage\", request.storageGbAdjustment.toString())\n        );\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n\n  get adjustedStorageTotal(): number {\n    return this.storageGbPrice * this.storageAdjustment;\n  }\n}\n","<h2 class=\"mt-3\">{{ \"invoices\" | i18n }}</h2>\n<p *ngIf=\"!invoices || !invoices.length\">{{ \"noInvoices\" | i18n }}</p>\n<table class=\"table mb-2\" *ngIf=\"invoices && invoices.length\">\n  <tbody>\n    <tr *ngFor=\"let i of invoices\">\n      <td>{{ i.date | date : \"mediumDate\" }}</td>\n      <td>\n        <a\n          href=\"{{ i.pdfUrl }}\"\n          target=\"_blank\"\n          rel=\"noopener\"\n          class=\"mr-2\"\n          appA11yTitle=\"{{ 'downloadInvoice' | i18n }}\"\n        >\n          <i class=\"bwi bwi-file-pdf\" aria-hidden=\"true\"></i\n        ></a>\n        <a href=\"{{ i.url }}\" target=\"_blank\" rel=\"noopener\" title=\"{{ 'viewInvoice' | i18n }}\">\n          {{ \"invoiceNumber\" | i18n : i.number }}</a\n        >\n      </td>\n      <td>{{ i.amount | currency : \"$\" }}</td>\n      <td>\n        <span *ngIf=\"i.paid\">\n          <i class=\"bwi bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"paid\" | i18n }}\n        </span>\n        <span *ngIf=\"!i.paid\">\n          <i class=\"bwi bwi-exclamation-circle text-muted\" aria-hidden=\"true\"></i>\n          {{ \"unpaid\" | i18n }}\n        </span>\n      </td>\n    </tr>\n  </tbody>\n</table>\n<h2 class=\"spaced-header\">{{ \"transactions\" | i18n }}</h2>\n<p *ngIf=\"!transactions || !transactions.length\">{{ \"noTransactions\" | i18n }}</p>\n<table class=\"table mb-2\" *ngIf=\"transactions && transactions.length\">\n  <tbody>\n    <tr *ngFor=\"let t of transactions\">\n      <td>{{ t.createdDate | date : \"mediumDate\" }}</td>\n      <td>\n        <span *ngIf=\"t.type === transactionType.Charge || t.type === transactionType.Credit\">\n          {{ \"chargeNoun\" | i18n }}\n        </span>\n        <span *ngIf=\"t.type === transactionType.Refund\">{{ \"refundNoun\" | i18n }}</span>\n      </td>\n      <td>\n        <i\n          class=\"bwi bwi-fw\"\n          *ngIf=\"t.paymentMethodType\"\n          aria-hidden=\"true\"\n          [ngClass]=\"paymentMethodClasses(t.paymentMethodType)\"\n        ></i>\n        {{ t.details }}\n      </td>\n      <td\n        [ngClass]=\"{ 'text-strike': t.refunded }\"\n        title=\"{{ (t.refunded ? 'refunded' : '') | i18n }}\"\n      >\n        {{ t.amount | currency : \"$\" }}\n      </td>\n    </tr>\n  </tbody>\n</table>\n<small class=\"text-muted\">* {{ \"chargesStatement\" | i18n : \"BITWARDEN\" }}</small>\n","import { Component, Input } from \"@angular/core\";\n\nimport { PaymentMethodType, TransactionType } from \"@bitwarden/common/billing/enums\";\nimport { BillingHistoryResponse } from \"@bitwarden/common/billing/models/response/billing-history.response\";\n\n@Component({\n  selector: \"app-billing-history\",\n  templateUrl: \"billing-history.component.html\",\n})\nexport class BillingHistoryComponent {\n  @Input()\n  billing: BillingHistoryResponse;\n\n  paymentMethodType = PaymentMethodType;\n  transactionType = TransactionType;\n\n  get invoices() {\n    return this.billing != null ? this.billing.invoices : null;\n  }\n\n  get transactions() {\n    return this.billing != null ? this.billing.transactions : null;\n  }\n\n  paymentMethodClasses(type: PaymentMethodType) {\n    switch (type) {\n      case PaymentMethodType.Card:\n        return [\"bwi-credit-card\"];\n      case PaymentMethodType.BankAccount:\n      case PaymentMethodType.WireTransfer:\n        return [\"bwi-bank\"];\n      case PaymentMethodType.BitPay:\n        return [\"bwi-bitcoin text-warning\"];\n      case PaymentMethodType.PayPal:\n        return [\"bwi-paypal text-primary\"];\n      default:\n        return [];\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"form-group\">\n    <label for=\"file\" class=\"sr-only\">{{ \"licenseFile\" | i18n }}</label>\n    <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required />\n    <small class=\"form-text text-muted\">{{\n      \"licenseFileDesc\"\n        | i18n\n          : (!organizationId\n              ? \"bitwarden_premium_license.json\"\n              : \"bitwarden_organization_license.json\")\n    }}</small>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"submit\" | i18n }}</span>\n  </button>\n  <button *ngIf=\"showCancel\" type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n    {{ \"cancel\" | i18n }}\n  </button>\n</form>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/admin-console/abstractions/organization/organization-api.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/platform/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/platform/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/platform/abstractions/platform-utils.service\";\n\n@Component({\n  selector: \"app-update-license\",\n  templateUrl: \"update-license.component.html\",\n})\nexport class UpdateLicenseComponent {\n  @Input() organizationId: string;\n  @Input() showCancel = true;\n  @Output() onUpdated = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  formPromise: Promise<void>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async submit() {\n    const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n    const files = fileEl.files;\n    if (files == null || files.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectFile\")\n      );\n      return;\n    }\n\n    try {\n      const fd = new FormData();\n      fd.append(\"license\", files[0]);\n\n      let updatePromise: Promise<void | unknown> = null;\n      if (this.organizationId == null) {\n        updatePromise = this.apiService.postAccountLicense(fd);\n      } else {\n        updatePromise = this.organizationApiService.updateLicense(this.organizationId, fd);\n      }\n\n      this.formPromise = updatePromise.then(() => {\n        return this.apiService.refreshIdentityToken();\n      });\n\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"licenseUploadSuccess\")\n      );\n      this.onUpdated.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n}\n"],"names":["StorageRequest","AdjustStorageComponent","constructor","apiService","i18nService","platformUtilsService","router","activatedRoute","logService","organizationApiService","storageGbPrice","add","interval","onAdjusted","onCanceled","storageAdjustment","submit","request","storageGbAdjustment","this","paymentFailed","action","response","organizationId","formPromise","postAccountStorage","updateStorage","result","paymentIntentClientSecret","paymentComponent","handleStripeCardPayment","emit","showToast","t","timeout","navigate","relativeTo","toString","e","error","cancel","adjustedStorageTotal","BillingHistoryComponent","paymentMethodType","transactionType","invoices","billing","transactions","paymentMethodClasses","type","Card","BankAccount","WireTransfer","BitPay","PayPal","UpdateLicenseComponent","showCancel","onUpdated","files","document","getElementById","length","fd","FormData","append","updatePromise","postAccountLicense","updateLicense","then","refreshIdentityToken"],"sourceRoot":""}