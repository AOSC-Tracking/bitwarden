{"version":3,"file":"466.f694591bb3c150dc9da1.js","mappings":"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","sources":["webpack://@bitwarden/web-vault/./src/app/reports/pages/exposed-passwords-report.component.html","webpack://@bitwarden/web-vault/./src/app/admin-console/organizations/tools/exposed-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/inactive-two-factor-report.component.html","webpack://@bitwarden/web-vault/./src/app/admin-console/organizations/tools/inactive-two-factor-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/reused-passwords-report.component.html","webpack://@bitwarden/web-vault/./src/app/admin-console/organizations/tools/reused-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/unsecured-websites-report.component.html","webpack://@bitwarden/web-vault/./src/app/admin-console/organizations/tools/unsecured-websites-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/weak-passwords-report.component.html","webpack://@bitwarden/web-vault/./src/app/admin-console/organizations/tools/weak-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/admin-console/organizations/guards/is-paid-org.guard.ts","webpack://@bitwarden/web-vault/./src/app/admin-console/organizations/manage/events.component.html","webpack://@bitwarden/web-vault/./src/app/admin-console/organizations/manage/events.component.ts","webpack://@bitwarden/web-vault/./src/app/admin-console/organizations/reporting/reporting.component.html","webpack://@bitwarden/web-vault/./src/app/admin-console/organizations/reporting/reporting.component.ts","webpack://@bitwarden/web-vault/./src/app/admin-console/organizations/reporting/reports-home.component.html","webpack://@bitwarden/web-vault/./src/app/admin-console/organizations/reporting/reports-home.component.ts","webpack://@bitwarden/web-vault/./src/app/admin-console/organizations/reporting/organization-reporting-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/admin-console/organizations/reporting/organization-reporting.module.ts"],"sourcesContent":["<div class=\"page-header\">\n  <h1>{{ \"exposedPasswordsReport\" | i18n }}</h1>\n</div>\n<p>{{ \"exposedPasswordsReportDesc\" | i18n }}</p>\n<button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"loading\" (click)=\"load()\">\n  {{ \"checkExposedPasswords\" | i18n }}\n</button>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noExposedPasswords\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'exposedPasswordsFound' | i18n }}\" [useAlertRole]=\"true\">\n      {{ \"exposedPasswordsFoundDesc\" | i18n : (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <ng-container *ngIf=\"!organization || canManageCipher(c); else cantManage\">\n              <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n                c.name\n              }}</a>\n            </ng-container>\n            <ng-template #cantManage>\n              <span>{{ c.name }}</span>\n            </ng-template>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td>\n            <app-org-badge\n              *ngIf=\"!organization\"\n              [disabled]=\"disabled\"\n              [organizationId]=\"c.organizationId\"\n              [organizationName]=\"c.organizationId | orgNameFromId : (organizations$ | async)\"\n              appStopProp\n            >\n            </app-org-badge>\n          </td>\n          <td class=\"text-right\">\n            <span bitBadge badgeType=\"warning\">\n              {{ \"exposedXTimes\" | i18n : (exposedPasswordMap.get(c.id) | number) }}\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { OrganizationService } from \"@bitwarden/common/admin-console/abstractions/organization/organization.service.abstraction\";\nimport { CipherService } from \"@bitwarden/common/vault/abstractions/cipher.service\";\nimport { Cipher } from \"@bitwarden/common/vault/models/domain/cipher\";\nimport { CipherView } from \"@bitwarden/common/vault/models/view/cipher.view\";\nimport { PasswordRepromptService } from \"@bitwarden/vault\";\n\n// eslint-disable-next-line no-restricted-imports\nimport { ExposedPasswordsReportComponent as BaseExposedPasswordsReportComponent } from \"../../../reports/pages/exposed-passwords-report.component\";\n\n@Component({\n  selector: \"app-org-exposed-passwords-report\",\n  templateUrl: \"../../../reports/pages/exposed-passwords-report.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class ExposedPasswordsReportComponent extends BaseExposedPasswordsReportComponent {\n  manageableCiphers: Cipher[];\n\n  constructor(\n    cipherService: CipherService,\n    auditService: AuditService,\n    modalService: ModalService,\n    organizationService: OrganizationService,\n    private route: ActivatedRoute,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(cipherService, auditService, organizationService, modalService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      this.manageableCiphers = await this.cipherService.getAll();\n    });\n  }\n\n  getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n  }\n\n  canManageCipher(c: CipherView): boolean {\n    return this.manageableCiphers.some((x) => x.id === c.id);\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"inactive2faReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"inactive2faReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noInactive2fa\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'inactive2faFound' | i18n }}\">\n      {{ \"inactive2faFoundDesc\" | i18n : (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n              c.name\n            }}</a>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td>\n            <app-org-badge\n              *ngIf=\"!organization\"\n              [disabled]=\"disabled\"\n              [organizationId]=\"c.organizationId\"\n              [organizationName]=\"c.organizationId | orgNameFromId : (organizations$ | async)\"\n              appStopProp\n            >\n            </app-org-badge>\n          </td>\n          <td class=\"text-right\">\n            <a\n              bitBadge\n              href=\"{{ cipherDocs.get(c.id) }}\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              *ngIf=\"cipherDocs.has(c.id)\"\n            >\n              {{ \"instructions\" | i18n }}</a\n            >\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { OrganizationService } from \"@bitwarden/common/admin-console/abstractions/organization/organization.service.abstraction\";\nimport { LogService } from \"@bitwarden/common/platform/abstractions/log.service\";\nimport { CipherService } from \"@bitwarden/common/vault/abstractions/cipher.service\";\nimport { CipherView } from \"@bitwarden/common/vault/models/view/cipher.view\";\nimport { PasswordRepromptService } from \"@bitwarden/vault\";\n\n// eslint-disable-next-line no-restricted-imports\nimport { InactiveTwoFactorReportComponent as BaseInactiveTwoFactorReportComponent } from \"../../../reports/pages/inactive-two-factor-report.component\";\n\n@Component({\n  selector: \"app-inactive-two-factor-report\",\n  templateUrl: \"../../../reports/pages/inactive-two-factor-report.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class InactiveTwoFactorReportComponent extends BaseInactiveTwoFactorReportComponent {\n  constructor(\n    cipherService: CipherService,\n    modalService: ModalService,\n    private route: ActivatedRoute,\n    logService: LogService,\n    passwordRepromptService: PasswordRepromptService,\n    organizationService: OrganizationService\n  ) {\n    super(cipherService, organizationService, modalService, logService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      await super.ngOnInit();\n    });\n  }\n\n  getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"reusedPasswordsReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"reusedPasswordsReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noReusedPasswords\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'reusedPasswordsFound' | i18n }}\">\n      {{ \"reusedPasswordsFoundDesc\" | i18n : (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <ng-container *ngIf=\"!organization || canManageCipher(c); else cantManage\">\n              <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n                c.name\n              }}</a>\n            </ng-container>\n            <ng-template #cantManage>\n              <span>{{ c.name }}</span>\n            </ng-template>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td>\n            <app-org-badge\n              *ngIf=\"!organization\"\n              [disabled]=\"disabled\"\n              [organizationId]=\"c.organizationId\"\n              [organizationName]=\"c.organizationId | orgNameFromId : (organizations$ | async)\"\n              appStopProp\n            >\n            </app-org-badge>\n          </td>\n          <td class=\"text-right\">\n            <span bitBadge badgeType=\"warning\">\n              {{ \"reusedXTimes\" | i18n : passwordUseMap.get(c.login.password) }}\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { OrganizationService } from \"@bitwarden/common/admin-console/abstractions/organization/organization.service.abstraction\";\nimport { CipherService } from \"@bitwarden/common/vault/abstractions/cipher.service\";\nimport { Cipher } from \"@bitwarden/common/vault/models/domain/cipher\";\nimport { CipherView } from \"@bitwarden/common/vault/models/view/cipher.view\";\nimport { PasswordRepromptService } from \"@bitwarden/vault\";\n\n// eslint-disable-next-line no-restricted-imports\nimport { ReusedPasswordsReportComponent as BaseReusedPasswordsReportComponent } from \"../../../reports/pages/reused-passwords-report.component\";\n\n@Component({\n  selector: \"app-reused-passwords-report\",\n  templateUrl: \"../../../reports/pages/reused-passwords-report.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class ReusedPasswordsReportComponent extends BaseReusedPasswordsReportComponent {\n  manageableCiphers: Cipher[];\n\n  constructor(\n    cipherService: CipherService,\n    modalService: ModalService,\n    private route: ActivatedRoute,\n    organizationService: OrganizationService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(cipherService, organizationService, modalService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      this.manageableCiphers = await this.cipherService.getAll();\n      await super.ngOnInit();\n    });\n  }\n\n  getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n  }\n\n  canManageCipher(c: CipherView): boolean {\n    return this.manageableCiphers.some((x) => x.id === c.id);\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"unsecuredWebsitesReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"unsecuredWebsitesReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noUnsecuredWebsites\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'unsecuredWebsitesFound' | i18n }}\">\n      {{ \"unsecuredWebsitesFoundDesc\" | i18n : (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n              c.name\n            }}</a>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td>\n            <app-org-badge\n              *ngIf=\"!organization\"\n              [disabled]=\"disabled\"\n              [organizationId]=\"c.organizationId\"\n              [organizationName]=\"c.organizationId | orgNameFromId : (organizations$ | async)\"\n              appStopProp\n            >\n            </app-org-badge>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { OrganizationService } from \"@bitwarden/common/admin-console/abstractions/organization/organization.service.abstraction\";\nimport { CipherService } from \"@bitwarden/common/vault/abstractions/cipher.service\";\nimport { CipherView } from \"@bitwarden/common/vault/models/view/cipher.view\";\nimport { PasswordRepromptService } from \"@bitwarden/vault\";\n\n// eslint-disable-next-line no-restricted-imports\nimport { UnsecuredWebsitesReportComponent as BaseUnsecuredWebsitesReportComponent } from \"../../../reports/pages/unsecured-websites-report.component\";\n\n@Component({\n  selector: \"app-unsecured-websites-report\",\n  templateUrl: \"../../../reports/pages/unsecured-websites-report.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class UnsecuredWebsitesReportComponent extends BaseUnsecuredWebsitesReportComponent {\n  constructor(\n    cipherService: CipherService,\n    modalService: ModalService,\n    private route: ActivatedRoute,\n    organizationService: OrganizationService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(cipherService, organizationService, modalService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      await super.ngOnInit();\n    });\n  }\n\n  getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"weakPasswordsReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"weakPasswordsReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noWeakPasswords\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'weakPasswordsFound' | i18n }}\">\n      {{ \"weakPasswordsFoundDesc\" | i18n : (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <ng-container *ngIf=\"!organization || canManageCipher(c); else cantManage\">\n              <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n                c.name\n              }}</a>\n            </ng-container>\n            <ng-template #cantManage>\n              <span>{{ c.name }}</span>\n            </ng-template>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td>\n            <app-org-badge\n              *ngIf=\"!organization\"\n              [disabled]=\"disabled\"\n              [organizationId]=\"c.organizationId\"\n              [organizationName]=\"c.organizationId | orgNameFromId : (organizations$ | async)\"\n              appStopProp\n            >\n            </app-org-badge>\n          </td>\n          <td class=\"text-right\">\n            <span bitBadge [badgeType]=\"passwordStrengthMap.get(c.id)[1]\">\n              {{ passwordStrengthMap.get(c.id)[0] | i18n }}\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { OrganizationService } from \"@bitwarden/common/admin-console/abstractions/organization/organization.service.abstraction\";\nimport { PasswordStrengthServiceAbstraction } from \"@bitwarden/common/tools/password-strength\";\nimport { CipherService } from \"@bitwarden/common/vault/abstractions/cipher.service\";\nimport { Cipher } from \"@bitwarden/common/vault/models/domain/cipher\";\nimport { CipherView } from \"@bitwarden/common/vault/models/view/cipher.view\";\nimport { PasswordRepromptService } from \"@bitwarden/vault\";\n\n// eslint-disable-next-line no-restricted-imports\nimport { WeakPasswordsReportComponent as BaseWeakPasswordsReportComponent } from \"../../../reports/pages/weak-passwords-report.component\";\n\n@Component({\n  selector: \"app-weak-passwords-report\",\n  templateUrl: \"../../../reports/pages/weak-passwords-report.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class WeakPasswordsReportComponent extends BaseWeakPasswordsReportComponent {\n  manageableCiphers: Cipher[];\n\n  constructor(\n    cipherService: CipherService,\n    passwordStrengthService: PasswordStrengthServiceAbstraction,\n    modalService: ModalService,\n    private route: ActivatedRoute,\n    organizationService: OrganizationService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(\n      cipherService,\n      passwordStrengthService,\n      organizationService,\n      modalService,\n      passwordRepromptService\n    );\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      this.manageableCiphers = await this.cipherService.getAll();\n      await super.ngOnInit();\n    });\n  }\n\n  getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n  }\n\n  canManageCipher(c: CipherView): boolean {\n    return this.manageableCiphers.some((x) => x.id === c.id);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from \"@angular/router\";\n\nimport { OrganizationService } from \"@bitwarden/common/admin-console/abstractions/organization/organization.service.abstraction\";\nimport { MessagingService } from \"@bitwarden/common/platform/abstractions/messaging.service\";\nimport { DialogService } from \"@bitwarden/components\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class IsPaidOrgGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private organizationService: OrganizationService,\n    private messagingService: MessagingService,\n    private dialogService: DialogService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const org = this.organizationService.get(route.params.organizationId);\n\n    if (org == null) {\n      return this.router.createUrlTree([\"/\"]);\n    }\n\n    if (org.isFreeOrg) {\n      // Users without billing permission can't access billing\n      if (!org.canEditSubscription) {\n        await this.dialogService.openSimpleDialog({\n          title: { key: \"upgradeOrganization\" },\n          content: { key: \"notAvailableForFreeOrganization\" },\n          acceptButtonText: { key: \"ok\" },\n          cancelButtonText: null,\n          type: \"info\",\n        });\n        return false;\n      } else {\n        this.messagingService.send(\"upgradeOrganization\", { organizationId: org.id });\n      }\n    }\n\n    return !org.isFreeOrg;\n  }\n}\n","<div class=\"tw-mb-4\">\n  <h1>{{ \"eventLogs\" | i18n }}</h1>\n  <div class=\"tw-mt-4 tw-flex tw-items-center\">\n    <bit-form-field>\n      <bit-label>{{ \"from\" | i18n }}</bit-label>\n      <input\n        bitInput\n        type=\"datetime-local\"\n        placeholder=\"{{ 'startDate' | i18n }}\"\n        [(ngModel)]=\"start\"\n        (change)=\"dirtyDates = true\"\n      />\n    </bit-form-field>\n    <span class=\"tw-mx-2\">-</span>\n    <bit-form-field>\n      <bit-label>{{ \"to\" | i18n }}</bit-label>\n      <input\n        bitInput\n        type=\"datetime-local\"\n        placeholder=\"{{ 'endDate' | i18n }}\"\n        [(ngModel)]=\"end\"\n        (change)=\"dirtyDates = true\"\n      />\n    </bit-form-field>\n    <form #refreshForm [appApiAction]=\"refreshPromise\">\n      <button\n        class=\"tw-mx-3 tw-mt-1\"\n        type=\"button\"\n        bitButton\n        buttonType=\"primary\"\n        (click)=\"loadEvents(true)\"\n        [disabled]=\"loaded && refreshForm.loading\"\n      >\n        {{ \"update\" | i18n }}\n      </button>\n    </form>\n    <form #exportForm [appApiAction]=\"exportPromise\">\n      <button\n        type=\"button\"\n        class=\"tw-mt-1\"\n        bitButton\n        [ngClass]=\"{ loading: exportForm.loading }\"\n        (click)=\"exportEvents()\"\n        [disabled]=\"(loaded && exportForm.loading) || dirtyDates\"\n      >\n        <span>{{ \"export\" | i18n }}</span>\n        <i\n          class=\"bwi bwi-fw\"\n          aria-hidden=\"true\"\n          [ngClass]=\"{\n            'bwi-sign-in': !exportForm.loading,\n            'bwi-spinner bwi-spin': exportForm.loading\n          }\"\n        ></i>\n      </button>\n    </form>\n  </div>\n</div>\n<ng-container *ngIf=\"!loaded\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"loaded\">\n  <p *ngIf=\"!events || !events.length\">{{ \"noEventsInList\" | i18n }}</p>\n  <bit-table *ngIf=\"events && events.length\">\n    <ng-container header>\n      <tr>\n        <th bitCell>{{ \"timestamp\" | i18n }}</th>\n        <th bitCell>{{ \"client\" | i18n }}</th>\n        <th bitCell>{{ \"member\" | i18n }}</th>\n        <th bitCell>{{ \"event\" | i18n }}</th>\n      </tr>\n    </ng-container>\n    <ng-template body>\n      <tr bitRow *ngFor=\"let e of events\" alignContent=\"top\">\n        <td bitCell class=\"tw-whitespace-nowrap\">{{ e.date | date : \"medium\" }}</td>\n        <td bitCell>\n          <span title=\"{{ e.appName }}, {{ e.ip }}\">{{ e.appName }}</span>\n        </td>\n        <td bitCell>\n          <span title=\"{{ e.userEmail }}\">{{ e.userName }}</span>\n        </td>\n        <td bitCell [innerHTML]=\"e.message\"></td>\n      </tr>\n    </ng-template>\n  </bit-table>\n  <button\n    #moreBtn\n    [appApiAction]=\"morePromise\"\n    type=\"button\"\n    bitButton\n    buttonType=\"primary\"\n    (click)=\"loadEvents(false)\"\n    [disabled]=\"loaded && $any(moreBtn).loading\"\n    *ngIf=\"continuationToken\"\n  >\n    <i\n      class=\"bwi bwi-spinner bwi-spin\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n      *ngIf=\"moreBtn.loading\"\n    ></i>\n    <span>{{ \"loadMore\" | i18n }}</span>\n  </button>\n</ng-container>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { concatMap, Subject, takeUntil } from \"rxjs\";\n\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { OrganizationService } from \"@bitwarden/common/admin-console/abstractions/organization/organization.service.abstraction\";\nimport { OrganizationUserService } from \"@bitwarden/common/admin-console/abstractions/organization-user/organization-user.service\";\nimport { ProviderService } from \"@bitwarden/common/admin-console/abstractions/provider.service\";\nimport { Organization } from \"@bitwarden/common/admin-console/models/domain/organization\";\nimport { EventSystemUser } from \"@bitwarden/common/enums\";\nimport { EventResponse } from \"@bitwarden/common/models/response/event.response\";\nimport { FileDownloadService } from \"@bitwarden/common/platform/abstractions/file-download/file-download.service\";\nimport { I18nService } from \"@bitwarden/common/platform/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/platform/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/platform/abstractions/platform-utils.service\";\n\nimport { EventService } from \"../../../core\";\nimport { EventExportService } from \"../../../tools/event-export\";\nimport { BaseEventsComponent } from \"../../common/base.events.component\";\n\nconst EVENT_SYSTEM_USER_TO_TRANSLATION: Record<EventSystemUser, string> = {\n  [EventSystemUser.SCIM]: null, // SCIM acronym not able to be translated so just display SCIM\n  [EventSystemUser.DomainVerification]: \"domainVerification\",\n};\n\n@Component({\n  selector: \"app-org-events\",\n  templateUrl: \"events.component.html\",\n})\nexport class EventsComponent extends BaseEventsComponent implements OnInit, OnDestroy {\n  exportFileName = \"org-events\";\n  organizationId: string;\n  organization: Organization;\n\n  private orgUsersUserIdMap = new Map<string, any>();\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    eventService: EventService,\n    i18nService: I18nService,\n    exportService: EventExportService,\n    platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    logService: LogService,\n    private userNamePipe: UserNamePipe,\n    private organizationService: OrganizationService,\n    private organizationUserService: OrganizationUserService,\n    private providerService: ProviderService,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      eventService,\n      i18nService,\n      exportService,\n      platformUtilsService,\n      logService,\n      fileDownloadService\n    );\n  }\n\n  async ngOnInit() {\n    this.route.params\n      .pipe(\n        concatMap(async (params) => {\n          this.organizationId = params.organizationId;\n          this.organization = await this.organizationService.get(this.organizationId);\n          if (this.organization == null || !this.organization.useEvents) {\n            await this.router.navigate([\"/organizations\", this.organizationId]);\n            return;\n          }\n          await this.load();\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  async load() {\n    const response = await this.organizationUserService.getAllUsers(this.organizationId);\n    response.data.forEach((u) => {\n      const name = this.userNamePipe.transform(u);\n      this.orgUsersUserIdMap.set(u.userId, { name: name, email: u.email });\n    });\n\n    if (this.organization.providerId != null) {\n      try {\n        const provider = await this.providerService.get(this.organization.providerId);\n        if (\n          provider != null &&\n          (await this.providerService.get(this.organization.providerId)).canManageUsers\n        ) {\n          const providerUsersResponse = await this.apiService.getProviderUsers(\n            this.organization.providerId\n          );\n          providerUsersResponse.data.forEach((u) => {\n            const name = this.userNamePipe.transform(u);\n            this.orgUsersUserIdMap.set(u.userId, {\n              name: `${name} (${this.organization.providerName})`,\n              email: u.email,\n            });\n          });\n        }\n      } catch (e) {\n        this.logService.warning(e);\n      }\n    }\n\n    await this.loadEvents(true);\n    this.loaded = true;\n  }\n\n  protected requestEvents(startDate: string, endDate: string, continuationToken: string) {\n    return this.apiService.getEventsOrganization(\n      this.organizationId,\n      startDate,\n      endDate,\n      continuationToken\n    );\n  }\n\n  protected getUserName(r: EventResponse, userId: string) {\n    if (r.installationId != null) {\n      return `Installation: ${r.installationId}`;\n    }\n\n    if (userId != null) {\n      if (this.orgUsersUserIdMap.has(userId)) {\n        return this.orgUsersUserIdMap.get(userId);\n      }\n\n      if (r.providerId != null && r.providerId === this.organization.providerId) {\n        return {\n          name: this.organization.providerName,\n        };\n      }\n    }\n\n    if (r.systemUser != null) {\n      const systemUserI18nKey: string = EVENT_SYSTEM_USER_TO_TRANSLATION[r.systemUser];\n\n      if (systemUserI18nKey) {\n        return {\n          name: this.i18nService.t(systemUserI18nKey),\n        };\n      } else {\n        return {\n          name: EventSystemUser[r.systemUser],\n        };\n      }\n    }\n\n    if (r.serviceAccountId) {\n      return {\n        name: this.i18nService.t(\"serviceAccount\") + \" \" + this.getShortId(r.serviceAccountId),\n      };\n    }\n\n    return null;\n  }\n\n  private getShortId(id: string) {\n    return id?.substring(0, 8);\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\" *ngIf=\"showLeftNav$ | async\">\n      <div class=\"card\" *ngIf=\"organization$ | async as org\">\n        <div class=\"card-header\">{{ \"reporting\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a\n            routerLink=\"events\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"org.canAccessEventLogs\"\n          >\n            {{ \"eventLogs\" | i18n }}\n          </a>\n          <a\n            routerLink=\"reports\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"org.canAccessReports\"\n          >\n            {{ \"reports\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\" [ngClass]=\"(showLeftNav$ | async) ? 'col-9' : 'col-12'\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { map, Observable, shareReplay, startWith, switchMap } from \"rxjs\";\n\nimport { OrganizationService } from \"@bitwarden/common/admin-console/abstractions/organization/organization.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/admin-console/models/domain/organization\";\n\n@Component({\n  selector: \"app-org-reporting\",\n  templateUrl: \"reporting.component.html\",\n})\nexport class ReportingComponent implements OnInit {\n  organization$: Observable<Organization>;\n  showLeftNav$: Observable<boolean>;\n\n  constructor(private route: ActivatedRoute, private organizationService: OrganizationService) {}\n\n  ngOnInit() {\n    this.organization$ = this.route.params.pipe(\n      switchMap((params) => this.organizationService.get$(params.organizationId)),\n      shareReplay({ refCount: true, bufferSize: 1 })\n    );\n\n    this.showLeftNav$ = this.organization$.pipe(\n      map((o) => o.canAccessEventLogs && o.canAccessReports),\n      startWith(true)\n    );\n  }\n}\n","<ng-container *ngIf=\"homepage$ | async\">\n  <div class=\"page-header\">\n    <h1>{{ \"reports\" | i18n }}</h1>\n  </div>\n\n  <p>{{ \"orgsReportsDesc\" | i18n }}</p>\n\n  <app-report-list [reports]=\"reports$ | async\"></app-report-list>\n</ng-container>\n\n<router-outlet></router-outlet>\n\n<div class=\"row mt-4\">\n  <div class=\"col\">\n    <a bitButton routerLink=\"./\" *ngIf=\"!(homepage$ | async)\">\n      <i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i>\n      {{ \"backToReports\" | i18n }}\n    </a>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, NavigationEnd, Router } from \"@angular/router\";\nimport { filter, map, Observable, startWith } from \"rxjs\";\n\nimport { OrganizationService } from \"@bitwarden/common/admin-console/abstractions/organization/organization.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/platform/abstractions/state.service\";\n\nimport { ReportVariant, reports, ReportType, ReportEntry } from \"../../../reports\";\n\n@Component({\n  selector: \"app-org-reports-home\",\n  templateUrl: \"reports-home.component.html\",\n})\nexport class ReportsHomeComponent implements OnInit {\n  reports$: Observable<ReportEntry[]>;\n  homepage$: Observable<boolean>;\n\n  constructor(\n    private route: ActivatedRoute,\n    private stateService: StateService,\n    private organizationService: OrganizationService,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.homepage$ = this.router.events.pipe(\n      filter((event) => event instanceof NavigationEnd),\n      map((event) => (event as NavigationEnd).urlAfterRedirects.endsWith(\"/reports\")),\n      startWith(true)\n    );\n\n    this.reports$ = this.route.params.pipe(\n      map((params) => this.organizationService.get(params.organizationId)),\n      map((org) => this.buildReports(org.isFreeOrg))\n    );\n  }\n\n  private buildReports(upgradeRequired: boolean): ReportEntry[] {\n    const reportRequiresUpgrade = upgradeRequired\n      ? ReportVariant.RequiresUpgrade\n      : ReportVariant.Enabled;\n\n    return [\n      {\n        ...reports[ReportType.ExposedPasswords],\n        variant: reportRequiresUpgrade,\n      },\n      {\n        ...reports[ReportType.ReusedPasswords],\n        variant: reportRequiresUpgrade,\n      },\n      {\n        ...reports[ReportType.WeakPasswords],\n        variant: reportRequiresUpgrade,\n      },\n      {\n        ...reports[ReportType.UnsecuredWebsites],\n        variant: reportRequiresUpgrade,\n      },\n      {\n        ...reports[ReportType.Inactive2fa],\n        variant: reportRequiresUpgrade,\n      },\n    ];\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { canAccessReportingTab } from \"@bitwarden/common/admin-console/abstractions/organization/organization.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/admin-console/models/domain/organization\";\n\nimport { ExposedPasswordsReportComponent } from \"../../../admin-console/organizations/tools/exposed-passwords-report.component\";\nimport { InactiveTwoFactorReportComponent } from \"../../../admin-console/organizations/tools/inactive-two-factor-report.component\";\nimport { ReusedPasswordsReportComponent } from \"../../../admin-console/organizations/tools/reused-passwords-report.component\";\nimport { UnsecuredWebsitesReportComponent } from \"../../../admin-console/organizations/tools/unsecured-websites-report.component\";\nimport { WeakPasswordsReportComponent } from \"../../../admin-console/organizations/tools/weak-passwords-report.component\";\nimport { IsPaidOrgGuard } from \"../guards/is-paid-org.guard\";\nimport { OrganizationPermissionsGuard } from \"../guards/org-permissions.guard\";\nimport { OrganizationRedirectGuard } from \"../guards/org-redirect.guard\";\nimport { EventsComponent } from \"../manage/events.component\";\n\nimport { ReportingComponent } from \"./reporting.component\";\nimport { ReportsHomeComponent } from \"./reports-home.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: ReportingComponent,\n    canActivate: [OrganizationPermissionsGuard],\n    data: { organizationPermissions: canAccessReportingTab },\n    children: [\n      {\n        path: \"\",\n        pathMatch: \"full\",\n        canActivate: [OrganizationRedirectGuard],\n        data: {\n          autoRedirectCallback: getReportRoute,\n        },\n        children: [], // This is required to make the auto redirect work,\n      },\n      {\n        path: \"reports\",\n        component: ReportsHomeComponent,\n        canActivate: [OrganizationPermissionsGuard],\n        data: {\n          titleId: \"reports\",\n        },\n        children: [\n          {\n            path: \"exposed-passwords-report\",\n            component: ExposedPasswordsReportComponent,\n            data: {\n              titleId: \"exposedPasswordsReport\",\n            },\n            canActivate: [IsPaidOrgGuard],\n          },\n          {\n            path: \"inactive-two-factor-report\",\n            component: InactiveTwoFactorReportComponent,\n            data: {\n              titleId: \"inactive2faReport\",\n            },\n            canActivate: [IsPaidOrgGuard],\n          },\n          {\n            path: \"reused-passwords-report\",\n            component: ReusedPasswordsReportComponent,\n            data: {\n              titleId: \"reusedPasswordsReport\",\n            },\n            canActivate: [IsPaidOrgGuard],\n          },\n          {\n            path: \"unsecured-websites-report\",\n            component: UnsecuredWebsitesReportComponent,\n            data: {\n              titleId: \"unsecuredWebsitesReport\",\n            },\n            canActivate: [IsPaidOrgGuard],\n          },\n          {\n            path: \"weak-passwords-report\",\n            component: WeakPasswordsReportComponent,\n            data: {\n              titleId: \"weakPasswordsReport\",\n            },\n            canActivate: [IsPaidOrgGuard],\n          },\n        ],\n      },\n      {\n        path: \"events\",\n        component: EventsComponent,\n        canActivate: [OrganizationPermissionsGuard],\n        data: {\n          titleId: \"eventLogs\",\n          organizationPermissions: (org: Organization) => org.canAccessEventLogs,\n        },\n      },\n    ],\n  },\n];\n\nfunction getReportRoute(organization: Organization): string {\n  if (organization.canAccessEventLogs) {\n    return \"events\";\n  }\n  if (organization.canAccessReports) {\n    return \"reports\";\n  }\n  return undefined;\n}\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OrganizationReportingRoutingModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { ReportsSharedModule } from \"../../../reports\";\nimport { SharedModule } from \"../../../shared/shared.module\";\n\nimport { OrganizationReportingRoutingModule } from \"./organization-reporting-routing.module\";\nimport { ReportingComponent } from \"./reporting.component\";\nimport { ReportsHomeComponent } from \"./reports-home.component\";\n\n@NgModule({\n  imports: [SharedModule, ReportsSharedModule, OrganizationReportingRoutingModule],\n  declarations: [ReportsHomeComponent, ReportingComponent],\n})\nexport class OrganizationReportingModule {}\n"],"names":["selectCipher","ExposedPasswordsReportComponent","constructor","cipherService","auditService","modalService","organizationService","route","passwordRepromptService","super","ngOnInit","this","parent","params","subscribe","organization","get","organizationId","manageableCiphers","getAll","getAllCiphers","getAllFromApiForOrganization","id","canManageCipher","c","some","x","load","InactiveTwoFactorReportComponent","logService","ReusedPasswordsReportComponent","UnsecuredWebsitesReportComponent","WeakPasswordsReportComponent","passwordStrengthService","IsPaidOrgGuard","router","messagingService","dialogService","canActivate","state","org","createUrlTree","isFreeOrg","canEditSubscription","openSimpleDialog","title","key","content","acceptButtonText","cancelButtonText","type","send","loadEvents","EVENT_SYSTEM_USER_TO_TRANSLATION","SCIM","DomainVerification","EventsComponent","apiService","eventService","i18nService","exportService","platformUtilsService","userNamePipe","organizationUserService","providerService","fileDownloadService","exportFileName","orgUsersUserIdMap","Map","destroy$","Subject","pipe","concatMap","useEvents","navigate","takeUntil","getAllUsers","data","forEach","u","name","transform","set","userId","email","providerId","canManageUsers","getProviderUsers","providerName","e","warning","loaded","requestEvents","startDate","endDate","continuationToken","getEventsOrganization","getUserName","r","installationId","has","systemUser","systemUserI18nKey","t","serviceAccountId","getShortId","substring","ngOnDestroy","next","complete","exportEvents","ReportingComponent","organization$","switchMap","get$","shareReplay","refCount","bufferSize","showLeftNav$","map","o","canAccessEventLogs","canAccessReports","startWith","ReportsHomeComponent","stateService","homepage$","events","filter","event","urlAfterRedirects","endsWith","reports$","buildReports","upgradeRequired","reportRequiresUpgrade","RequiresUpgrade","Enabled","reports","ExposedPasswords","variant","ReusedPasswords","WeakPasswords","UnsecuredWebsites","Inactive2fa","routes","path","component","organizationPermissions","children","pathMatch","autoRedirectCallback","titleId","OrganizationReportingRoutingModule","forChild","OrganizationReportingModule"],"sourceRoot":""}